<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mapdigit.Gis</name>
    </assembly>
    <members>
        <member name="T:Mapdigit.Gis.DigitalMap">
            <summary>
            DigitalMap is the base class for VectorMap and RasterMap. It's an abstract
            class provides all common functions for digtial maps.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.MapLayerContainer">
            <summary>
            MapLayerContainer is a collection of map layers.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.MapLayer">
            <summary>
            MapLayer defines a map layer.Computer maps are organized into layers. Think
            of the layers as transparencies that are stacked on top of one another. Each
            layer contains different aspects of the entire map. Each layer contains
            different map objects, such as regions, points, lines and text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer.MapTileWidth">
            <summary>
            the Width of each map tile
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetAbstractGraphicsFactory(Mapdigit.Gis.Drawing.AbstractGraphicsFactory)">
            <summary>
            Set the graphics factory for the map layer.
            </summary>
            <param name="abstractGraphicsFactory">The abstract graphics factory.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetAbstractGraphicsFactory">
            <summary>
            Get the graphics factory used by this map layer.
            </summary>
            <returns>the graphics factory used by this map layer.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.FromStringToLatLng(System.String)">
            <summary>
            Convert String to Latitude,Longitude pair, the input string has this format
            [longitude,Latitude,altitude] for example  [115.857562,-31.948275,0]
            </summary>
            <param name="location">location string</param>
            <returns>the geographical coordinates</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.FromLatLngToPixel(Mapdigit.Gis.Geometry.GeoLatLng,System.Int32)">
            <summary>
            Computes the pixel coordinates of the given geographical point .
            </summary>
            <param name="latLng">latitude,longitude pair of give point</param>
            <param name="zoomLevel">current zoom level.</param>
            <returns>the pixel coordinates.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.FromPixelToLatLng(Mapdigit.Gis.Geometry.GeoPoint,System.Int32)">
            <summary>
            Computes the geographical coordinates from pixel coordinates.
            </summary>
            <param name="pt">pixel coordinates.</param>
            <param name="zoomLevel">current zoom level.</param>
            <returns>the geographical coordinates (latitude,longitude) pair</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.FromLatLngToMapPixel(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Computes the pixel coordinates of the given geographical point in the map.
            </summary>
            <param name="latlng">the geographical coordinates.</param>
            <returns>the pixel coordinates in the map.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.FromMapPixelToLatLng(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Computes the geographical coordinates from pixel coordinates in the map.
            </summary>
            <param name="pt">pixel coordinates in the map..</param>
            <returns>the geographical coordinates.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetMaxZoomLevel(System.Int32)">
            <summary>
             Set the map zoom Level, default is 17
            </summary>
            <param name="zoom"></param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetMinZoomLevel(System.Int32)">
            <summary>
             set the min zoom level, default is 0
            </summary>
            <param name="zoom"></param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetScreenBounds(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            return screen boundary in geo coordinates.
            </summary>
            <param name="pt">the center of the screen..</param>
            <returns>screen boundary in geo coordinates</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetScreenBounds">
            <summary>
            return screen boundary in geo coordinates.
            </summary>
            <returns>screen boundary in geo coordinates.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetMapBounds(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            return screen boundary in geo coordinates.
            </summary>
            <param name="pt">the center of the screen..</param>
            <returns>screen boundary in geo coordinates.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetMapBounds">
            <summary>
            return screen boundary in geo coordinates.
            </summary>
            <returns>screen boundary in geo coordinates.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.PanDirection(System.Int32,System.Int32)">
            <summary>
            Starts a pan with given distance in pixels.
            directions. +1 is right and down, -1 is left and up, respectively.
            </summary>
            <param name="dx">x offset</param>
            <param name="dy">y offset.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.PanTo(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Changes the center point of the map to the given point.
            </summary>
            <param name="center"> a new center point of the map.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetCenter(Mapdigit.Gis.Geometry.GeoLatLng,System.Int32)">
            <summary>
            Sets the map view to the given center.
            </summary>
            <param name="center">the center latitude,longitude of the map..</param>
            <param name="zoomLevel">the zoom Level of the map [0,17].</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetCenter">
            <summary>
            return the center point of the map.
            </summary>
            <returns>current map center point.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetSyncRoot">
            <summary>
            Get the sync root. this sync object is used to sync the map operation.
            </summary>
            <returns>sync root</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.ZoomIn">
            <summary>
            Increments zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.ZoomOut">
            <summary>
            Decrements zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetZoom(System.Int32)">
            <summary>
            Sets the zoom level to the given new value.
            </summary>
            <param name="level">new map zoom level</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetZoom">
            <summary>
            return the zoom level of the map.
            </summary>
            <returns> current map zoom level.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.Resize(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            Resize the map to a level that include given bounds
            </summary>
            <param name="bounds">new bound</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.IsPointVisible(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            is the point in current screen (is shown or not).
            </summary>
            <param name="pt">point to be tested</param>
            <returns>
            	true is in screen range
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetMapWidth">
            <summary>
            Gets the width of the map.
            </summary>
            <returns>the map screen width</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetMapHeight">
            <summary>
            Gets the height of the map.
            </summary>
            <returns>the map screen height.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetMapSize(System.Int32,System.Int32)">
            <summary>
            Set the size for the map.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetViewSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the screen.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.SetScreenSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the screen.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetScreenWidth">
            <summary>
            Gets the width of the screen.
            </summary>
            <returns>the map screen width</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetScreenHeight">
            <summary>
            Gets the height of the screen.
            </summary>
            <returns>the map screen height</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.Paint(Mapdigit.Gis.Drawing.IGraphics)">
            <summary>
            Draw the map layer to an graphics.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.Paint(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            Draw the map layer to an graphics
            </summary>
            <param name="graphics"> the graphics object where the map is drawn..</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer._maxZoomlevel">
            <summary>
            Max map zoom Level
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer._minZoomlevel">
            <summary>
            Min map zoom Level
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer.mapCenterPt">
            <summary>
            the center of this map.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer.mapZoomLevel">
            <summary>
            current map zoom level
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer.mapSize">
            <summary>
            the size of the map size.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer.screenSize">
            <summary>
            the size of the screen size.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer.syncObject">
            <summary>
            sync object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapLayer.AbstractGraphicsFactory">
            <summary>
            Abstract graphics factory.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.DrawMapCanvas">
            <summary>
            Draws the map canvas.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapLayer"/> class.
            </summary>
            <param name="width">the width of the map layer</param>
            <param name="height">the height of the map layer</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.GetMapIndex(System.Double,System.Double)">
            <summary>
            Get the index of map tiles based on given piexl coordinates
            </summary>
            <param name="x">x coordinates.</param>
            <param name="y">y coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.ConvertCoordindates2Tiles(System.Double,System.Double,System.Int32)">
            <summary>
            Get the index of map tiles based on given geographical coordinates
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns>the the index of map tiles</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayer.Cast2Integer(System.Double)">
            <summary>
            cast double to integer
            </summary>
            <param name="f">double value.</param>
            <returns>the closed interger for the double value.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.AddMapLayer(Mapdigit.Gis.MapLayer)">
            <summary>
            Add a map layer to the tail of the container
            </summary>
            <param name="mapLayer">The map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.AddMapLayerAt(System.Int32,Mapdigit.Gis.MapLayer)">
            <summary>
            Add a map layer after given index
            </summary>
            <param name="index">the index after which a new map layer is added.</param>
            <param name="mapLayer">a map layer inserted into the container.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.RemoveAllMapLayers">
            <summary>
            Removes all map layers.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.RemoveMapLayerAt(System.Int32)">
            <summary>
            remove a map layer at given index
            </summary>
            <param name="index">the index of the map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.RemoveMapLayer(Mapdigit.Gis.MapLayer)">
            <summary>
            remove a givne map layer from the container.
            </summary>
            <param name="mapLayer">The map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.GetMapLayerAt(System.Int32)">
            <summary>
            Get a map layer at given index.
            </summary>
            <param name="index">the index of the map layer.</param>
            <returns>the map layer at given index.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.GetMapLayers">
            <summary>
            Get all map layers as an array.
            </summary>
            <returns> all map layers included in this container</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.GetMapLayerCount">
            <summary>
            Get the count of the map layers in this container.
            </summary>
            <returns>the count of the map layers</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.Paint(Mapdigit.Gis.Drawing.IGraphics)">
            <summary>
            Draw the map layer to an graphics.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.Paint(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            Draw the map layer to an graphics
            </summary>
            <param name="graphics">the graphics object where the map is drawn..</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.PanDirection(System.Int32,System.Int32)">
            <summary>
            Starts a pan with given distance in pixels.
            directions. +1 is right and down, -1 is left and up, respectively.
            </summary>
            <param name="dx">x offset</param>
            <param name="dy">y offset.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.PanTo(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Changes the center point of the map to the given point.
            </summary>
            <param name="center">a new center point of the map.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.SetCenter(Mapdigit.Gis.Geometry.GeoLatLng,System.Int32)">
            <summary>
            Sets the map view to the given center.
            </summary>
            <param name="center">the center latitude,longitude of the map..</param>
            <param name="zoomLevel">the zoom Level of the map [0,17].</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.ZoomIn">
            <summary>
            Increments zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.ZoomOut">
            <summary>
            Decrements zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.SetZoom(System.Int32)">
            <summary>
            Sets the zoom level to the given new value.
            </summary>
            <param name="level">new map zoom level</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.Resize(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            Resize the map to a level that include given bounds
            </summary>
            <param name="bounds">new bound</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.SetMapSize(System.Int32,System.Int32)">
            <summary>
            Set the size for the map.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.SetScreenSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the screen.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="F:Mapdigit.Gis.MapLayerContainer.mapLayers">
            <summary>
            ArrayList store all map layers.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapLayerContainer.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapLayerContainer"/> class.
            </summary>
            <param name="width">the width of the map layer</param>
            <param name="height">the height of the map layer</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.SetDigitalMapService(Mapdigit.Gis.Service.DigitalMapService)">
            <summary>
            Set digital map service instance for this digital map.
            </summary>
            <param name="mapService">The digital map service.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetDigitalMapService">
            <summary>
            return the digital map service associcated with this map
            </summary>
            <returns>the digital map service instance</returns>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetDirections(System.String)">
            <summary>
            Sends a request to servers to get the direction
            </summary>
            <param name="query">address to query</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetDirections(System.Int32,System.String)">
            <summary>
            Sends a request to servers to get the direction
            </summary>
            <param name="type">map type</param>
            <param name="query">address to query</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetDirections(Mapdigit.Gis.Geometry.GeoLatLng[])">
            <summary>
            Sends a request to servers to get the direction
            </summary>
            <param name="query">address to query</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.SetGeocodingListener(Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Set the listener for geocoding query.
            </summary>
            <param name="geocodingListener"> callback when query is done and in progress.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.SetReverseGeocodingListener(Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Set the listener for reverse geocoding query.
            </summary>
            <param name="reverseGeocodingListener">callback when query is done and in progress</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.SetIpAddressGeocodingListener(Mapdigit.Gis.Service.IIpAddressGeocodingListener)">
            <summary>
            Sets the ip address geocoding listener.
            </summary>
            <param name="geocodingListener">callback when query is done and in progress.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.SetRoutingListener(Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            Sets the routing listener.
            </summary>
            <param name="routingListener">The routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetIpLocations(System.String)">
            <summary>
            Gets the ip locations.
            </summary>
            <param name="ipaddress">The ipaddress.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetLocations(System.String)">
            <summary>
            Sends a request to servers to geocode the specified address
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetLocations(System.Int32,System.String)">
            <summary>
            Sends a request to servers to geocode the specified address
            </summary>
            <param name="type">map type.</param>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetLocations(System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            local search, sends a request to server for local search.
            </summary>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetLocations(System.Int32,System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            local search, sends a request to server for local search.
            </summary>
            <param name="type">map type.</param>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetLocations(System.String,System.String,System.String,System.String)">
            <summary>
            search based on cell id.
            </summary>
            <param name="mmc">The MMC.</param>
            <param name="mnc">The MNC.</param>
            <param name="lac">The lac.</param>
            <param name="cid">The cid.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetReverseLocations(System.String)">
            <summary>
            Sends a request to servers to geocode the specified address
            </summary>
            <param name="latlngAddress">The latlng address.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetReverseLocations(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Sends a request to servers to geocode the specified address
            </summary>
            <param name="latlngAddress">The latlng address.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetReverseLocations(System.Int32,System.String)">
            <summary>
            Sends a request to servers to geocode the specified address
            </summary>
            <param name="type">map type.</param>
            <param name="latlngAddress">The latlng address.</param>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.UpdateMapServiceUrl">
            <summary>
            Updates the map tile URL.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.GetVersionNo">
            <summary>
            Gets the version no.
            </summary>
            <returns>the version no</returns>
        </member>
        <member name="F:Mapdigit.Gis.DigitalMap.typeOfMap">
            <summary>
            the type of map.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.DigitalMap.digitalMapService">
            <summary>
            Digital map service instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.DigitalMap.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.DigitalMap"/> class.
            </summary>
            <param name="width">the width of the map layer</param>
            <param name="height">the height of the map layer</param>
        </member>
        <member name="T:Mapdigit.Gis.Drawing.AbstractGraphicsFactory">
            <summary>
            Abstract Graphics Factory class used to create Graphics related classes.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.AbstractGraphicsFactory.CreateImage(System.Int32[],System.Int32,System.Int32)">
            <summary>
            Create an image instance from rgb array
            </summary>
            <param name="rgb">the rgb array.</param>
            <param name="width">the width of the image.</param>
            <param name="height">the height of the image.</param>
            <returns>an image instance</returns>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.AbstractGraphicsFactory.CreateImage(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Create an image instance.
            </summary>
            <param name="bytes">the byte array</param>
            <param name="offset">the start position for the image.</param>
            <param name="len">he lenght of the image..</param>
            <returns>an image instance</returns>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.AbstractGraphicsFactory.CreateImage(System.Int32,System.Int32)">
            <summary>
            Creates the image.
            </summary>
            <param name="width">the width of the image.</param>
            <param name="height"> the height of the image.</param>
            <returns>an image instance</returns>
        </member>
        <member name="T:Mapdigit.Gis.Drawing.IFont">
            <summary>
            Font  interface.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IFont.GetNativeFont">
            <summary>
            Get the navtive font object.
            </summary>
            <returns>the nactive font associated with the IFont object</returns>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IFont.CharsWidth(System.Char[],System.Int32,System.Int32)">
            <summary>
            calculate the chars width with this font.
            </summary>
            <param name="ch">the char array.</param>
            <param name="offset">the start index of the char array.</param>
            <param name="length">the length of the chars.</param>
            <returns>the width of the char string</returns>
        </member>
        <member name="T:Mapdigit.Gis.Drawing.IGraphics">
            <summary>
            Graphics  interface.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.SetClip(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            set the clip region for this graphics
            </summary>
            <param name="x">the top left x coordinate.</param>
            <param name="y">the top left y coordinate.</param>
            <param name="width">the width of the clip region.</param>
            <param name="height">the height of the clip region.</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.DrawImage(Mapdigit.Gis.Drawing.IImage,System.Int32,System.Int32)">
            <summary>
            Draws the image.
            </summary>
            <param name="img">the image object</param>
            <param name="x">the x coordinate where the image is drawn</param>
            <param name="y">the y coordinate where the image is drawn</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.DrawImage(Mapdigit.Gis.Drawing.IImage,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the image.
            </summary>
            <param name="img">the image object</param>
            <param name="x">the x coordinate where the image is drawn</param>
            <param name="y">the y coordinate where the image is drawn</param>
            <param name="transparentColor">transparent color</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the line.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.SetColor(System.Int32)">
            <summary>
            Sets the color.
            </summary>
            <param name="rgb">RGB an RGB color</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.FillRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            fill an rectangle.
            </summary>
            <param name="x">the top left x coordinate.</param>
            <param name="y">the top left y coordinate.</param>
            <param name="width">the width of the rectangle.</param>
            <param name="height">the height of the rectangle.</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.DrawRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             draw an rectangle.
            </summary>
            <param name="x">the top left x coordinate.</param>
            <param name="y">the top left y coordinate.</param>
            <param name="width">the width of the rectangle.</param>
            <param name="height">the height of the rectangle.</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.DrawString(System.String,System.Int32,System.Int32)">
            <summary>
            Draws the string.
            </summary>
            <param name="str"> the string to draw</param>
            <param name="x">the x coordinate where the string is drawn.</param>
            <param name="y">the y coordinate where the string is drawn.</param>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IGraphics.SetFont(Mapdigit.Gis.Drawing.IFont)">
            <summary>
            Sets the font.
            </summary>
            <param name="font"> the font object</param>
        </member>
        <member name="T:Mapdigit.Gis.Drawing.IImage">
            <summary>
            Image  interface.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IImage.GetGraphics">
            <summary>
            Get the graphcis object associated with this image.
            </summary>
            <returns>a graphics object which allow to draw on the image.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IImage.GetRGB">
            <summary>
            get the RGB array of this image
            </summary>
            <returns>the rgb array of the image.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IImage.GetHeight">
            <summary>
            get the height of the image.
            </summary>
            <returns>the height of the image.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IImage.GetWidth">
            <summary>
            get the width of the image
            </summary>
            <returns>the width of the image</returns>
        </member>
        <member name="M:Mapdigit.Gis.Drawing.IImage.GetNativeImage">
            <summary>
            get the native image assocated with this Image object.
            </summary>
            <returns>the native image object</returns>
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GeoBounds">
            <summary>
            GeoBounds is a rectangular area of the map in pixel coordinates.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.OutLeft">
            <summary>
            The bitmask that indicates that a point lies to the left of
            this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.OutTop">
            <summary>
            The bitmask that indicates that a point lies above
            this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.OutRight">
            <summary>
            
            The bitmask that indicates that a point lies to the right of
            this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.OutBottom">
            <summary>
            The bitmask that indicates that a point lies below
            this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.X">
            <summary>
            The X coordinate of this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.Y">
            <summary>
            The Y coordinate of this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.Width">
            <summary>
            The Width of this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.Height">
            <summary>
            The Height of this GeoBounds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.MinX">
            <summary>
            The X coordinate of the left edge of the rectangle.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.MinY">
            <summary>
            The Y coordinate of the top edge of the rectangle.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.MaxX">
            <summary>
            The X coordinate of the right edge of the rectangle.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoBounds.MaxY">
            <summary>
            The Y coordinate of the bottom edge of the rectangle.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor">
            <summary>
            Constructs a new GeoBounds whose upper-left corner 
            is at (0,0) in the coordinate space, and whose width and 
            height are both zero. 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.IsEmpty">
            <summary>
            check if the geo bound is a empty rectangle.
            </summary>
            <returns>
            	true,it's empty.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetRect(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Reset the geo bound with new position and size.
            </summary>
            <param name="x">the x coordinate.</param>
            <param name="y">the y coordinate.</param>
            <param name="w">the width.</param>
            <param name="h">the height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetRect(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Reset the geo bound with same position and size with given geo bound.
            </summary>
            <param name="r">the geo bound to copy from.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Outcode(System.Double,System.Double)">
            <summary>
            Check give (x,y)'s relative postion to this geo bound
            </summary>
            <param name="x"> x coordinate of the point.</param>
            <param name="y">y coordinate of the point.</param>
            <returns>relative position of the point.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.CreateIntersection(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Create the intersection rectangle between this rectangle and r rectangle.
            </summary>
            <param name="r"> the other rectangle.</param>
            <returns>the intersection rectangle.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.CreateUnion(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            create the union rectangle of the two rectangles.
            </summary>
            <param name="r">the other rectangle.</param>
            <returns>union rectangle of the two rectangles</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor(Mapdigit.Gis.Geometry.GeoPoint[])">
            <summary>
            Constructs a rectangle that contains all the given points.
            </summary>
            <param name="points">an array of points.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
             Constructs a new GeoBounds, initialized to match 
            the values of the specified GeoBounds.
            </summary>
            <param name="r">the GeoBounds from which to copy initial values
                      to a newly constructed GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner is 
            specified as
            (x,y) and whose width and height 
            are specified by the arguments of the same name. 
            </summary>
            <param name="x">the specified X coordinate.</param>
            <param name="y">the specified Y coordinate</param>
            <param name="width">the width of the GeoBounds</param>
            <param name="height">the height of the GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner 
            is at (0,0) in the coordinate space, and whose width and 
            height are specified by the arguments of the same name. 
            </summary>
            <param name="width">the width of the GeoBounds</param>
            <param name="height">the height of the GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoSize)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner is 
            specified by theGeoPoint argument, and
            whose width and height are specified by the 
            GeoSize argument. 
            </summary>
            <param name="p">p a GeoPoint that is the upper-left corner of 
            the GeoBounds</param>
            <param name="size"> a GeoSize, representing the 
            width and height of the GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner is the  
            specified GeoPoint, and whose width and height are both zero. 
            </summary>
            <param name="p"> a GeoPoint that is the top left corner 
            of the GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.#ctor(Mapdigit.Gis.Geometry.GeoSize)">
            <summary>
            Constructs a new GeoBounds whose top left corner is  
            (0,0) and whose width and height are specified  
            by the GeoSize argument. 
            </summary>
            <param name="size">a GeoSize, specifying width and height</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Mid">
            <summary>
            Returns the pixel coordinates of the center of the rectangular area.
            </summary>
            <returns>the center point of the GeoBounds.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Min">
            <summary>
             Returns the pixel coordinates of the upper left corner of the rectangular
            area.
            </summary>
            <returns>the  upper left corner of the rectangular area.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Max">
            <summary>
             Returns the pixel coordinates of the lower right corner of the 
            rectangular area.
            </summary>
            <returns>upper lower right of the rectangular area</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.IntersectsLine(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Tests if the specified line segment intersects the interior of this
             GeoBounds.
            </summary>
            <param name="x1">the X coordinate of the start point of the specified
                       line segment</param>
            <param name="y1">the Y coordinate of the start point of the specified
                       line segment</param>
            <param name="x2">the X coordinate of the end point of the specified
                       line segment</param>
            <param name="y2">the Y coordinate of the end point of the specified
                       line segment.</param>
            <returns> true if the specified line segment intersects
            the interior of this GeoBounds; false
            otherwise.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Outcode(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Determines where the specified GeoPoint lies with
            respect to this GeoBounds.
            This method computes a binary OR of the appropriate mask values
            indicating, for each side of this GeoBounds,
            whether or not the specified GeoPoint is on the same
            side of the edge as the rest of this GeoBounds.
            </summary>
            <param name="p">the specified GeoPoint</param>
            <returns>the logical OR of all appropriate out codes.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetFrame(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the location and size of the outer bounds of this
            GeoBounds to the specified rectangular values.*
            </summary>
            <param name="x">the X coordinate of the upper-left corner
                      of this GeoBounds</param>
            <param name="y">the Y coordinate of the upper-left corner
                      of this GeoBounds</param>
            <param name="w">the width of this GeoBounds</param>
            <param name="h">the height of this GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Contains(System.Double,System.Double)">
            <summary>
            check if this rectangle contains given point.
            </summary>
            <param name="x">the x coordinate of the given point.</param>
            <param name="y">the y coordinate of the given point.</param>
            <returns>
            	true if this rectangle contains given point.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Intersects(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            check if this rectangle intersects with given rectangle.
            </summary>
            <param name="x">the x coordinate of the other rectangle.</param>
            <param name="y">the y coordinate of the other rectangle.</param>
            <param name="w">the width of the other rectangle.</param>
            <param name="h">the height of the other rectangle.</param>
            <returns>true, if they intersect.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Contains(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            check if this rectangle contains given rectangle.
            </summary>
            <param name="x">the x coordinate of the other rectangle.</param>
            <param name="y">the y coordinate of the other rectangle.</param>
            <param name="w">the width of the other rectangle.</param>
            <param name="h">the height of the other rectangle.</param>
            <returns>
            	true, if it totally contains other rectangle.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Intersect(Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Intersects the pair of specified source GeoBounds
            objects and puts the result into the specified destination
            GeoBounds object.  One of the source rectangles
            can also be the destination to avoid creating a third GeoBounds
            object, but in this case the original points of this source
            rectangle will be overwritten by this method.
            </summary>
            <param name="src1"> the first of a pair of GeoBounds
             objects to be intersected with each other</param>
            <param name="src2"> the second of a pair of GeoBounds
            objects to be intersected with each other</param>
            <param name="dest">dest the GeoBounds that holds the
            results of the intersection of src1 and
            src2</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Union(Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Unions the pair of source GeoBounds objects
            and puts the result into the specified destination
            GeoBounds object.  One of the source rectangles
            can also be the destination to avoid creating a third GeoBounds
            object, but in this case the original points of this source
            rectangle will be overwritten by this method.
            </summary>
            <param name="src1">the first of a pair of GeoBounds
            objects to be combined with each other</param>
            <param name="src2">the second of a pair of GeoBounds
            objects to be combined with each other</param>
            <param name="dest">dest the GeoBounds that holds the
            results of the union of src1 and
            src2</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetMinX">
            <summary>
            Returns the smallest X coordinate of the framing
            rectangle of the IShape in double
            precision.
            </summary>
            <returns>the smallest X coordinate of the framing
            		rectangle</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetMinY">
            <summary>
            Returns the smallest Y coordinate of the framing
            rectangle of the IShape in double
            precision.
            </summary>
            <returns>the smallest Y coordinate of the framing
            	rectangle</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetMaxX">
            <summary>
            Returns the largest X coordinate of the framing
            rectangle of the IShape in double
            precision.
            </summary>
            <returns>the largest X coordinate of the framing
             		rectangle</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetMaxY">
            <summary>
            Returns the largest Y coordinate of the framing
            rectangle of the IShape in double
            precision.
            </summary>
            <returns>the largest Y coordinate of the framing
            		rectangle</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetCenterX">
            <summary>
            Returns the X coordinate of the center of the framing
            rectangle of the IShape in double
            precision.
            </summary>
            <returns>the X coordinate of the center of the framing rectangle</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetCenterY">
            <summary>
            Returns the Y coordinate of the center of the framing
            rectangle of the IShape in double
            precision.
            </summary>
            <returns>the Y coordinate of the center of the framing rectangle</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetFrame">
            <summary>
            Returns the framing GeoBounds
            that defines the overall shape of this object.
            </summary>
            <returns> a GeoBounds</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetFrame(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoSize)">
            <summary>
            Sets the location and size of the framing rectangle of this
            IShape to the specified GeoPoint and
            GeoSize, respectively.  The framing rectangle is used
            by the subclasses of RectangularShape to define
            their geometry.
            </summary>
            <param name="loc">the specified GeoPoint.</param>
            <param name="size">the specified GeoSize</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetFrame(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Sets the framing rectangle of this IShape to
            be the specified GeoBounds.  The framing rectangle is
            used by the subclasses of RectangularShape to define
            their geometry.
            </summary>
            <param name="r">the specified GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetFrameFromDiagonal(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the diagonal of the framing rectangle of this IShape
            based on the two specified coordinates.  The framing rectangle is
            used by the subclasses of RectangularShape to define
            their geometry.
            </summary>
            <param name="x1">the X coordinate of the start point of the specified diagonal</param>
            <param name="y1">the Y coordinate of the start point of the specified diagonal</param>
            <param name="x2">the X coordinate of the end point of the specified diagonal</param>
            <param name="y2">the Y coordinate of the end point of the specified diagonal</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetFrameFromDiagonal(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Sets the diagonal of the framing rectangle of this IShape
            based on two specified GeoPoint objects.  The framing
            rectangle is used by the subclasses of RectangularShape
            to define their geometry.
            </summary>
            <param name="p1">the start GeoPoint of the specified diagonal</param>
            <param name="p2">the end GeoPoint of the specified diagonal</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetFrameFromCenter(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the framing rectangle of this IShape
            based on the specified center point coordinates and corner point
            coordinates.  The framing rectangle is used by the subclasses of
            RectangularShape to define their geometry.
            </summary>
            <param name="centerX">the X coordinate of the specified center point</param>
            <param name="centerY">the Y coordinate of the specified center point</param>
            <param name="cornerX">the X coordinate of the specified corner point</param>
            <param name="cornerY">the Y coordinate of the specified corner point</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetFrameFromCenter(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Sets the framing rectangle of this IShape based on a
            specified center GeoPoint and corner
            GeoPoint.  The framing rectangle is used by the subclasses
            of RectangularShape to define their geometry.
            </summary>
            <param name="center"> the specified center GeoPoint</param>
            <param name="corner">the specified corner GeoPoint</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Contains(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            check if this rectangle contains given point.
            </summary>
            <param name="p">the point to be checked.</param>
            <returns>
            	true,it contains given point.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Intersects(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            check if this rectangle intersects given rectangle.
            </summary>
            <param name="r">the rectangle to be checked.</param>
            <returns>true, it intersects given rectangle.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Contains(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            check if this rectangle contains given rectangle.
            </summary>
            <param name="r">the rectangle to be checked.</param>
            <returns>
            	true, it totally contains given rectangle.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetBounds">
            <summary>
            return a new geo bounds of this rectangle.
            </summary>
            <returns>a new copy of this geo bound</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Add(System.Double,System.Double)">
            <summary>
            Adds a point, specified by the double precision arguments
            newx and newy, to this
            GeoBounds.  The resulting GeoBounds
            is the smallest GeoBounds that
            contains both the original GeoBounds and the
            specified point.
            
            After adding a point, a call to contains with the
            added point as an argument does not necessarily return
            true. The contains method does not
            return true for points on the right or bottom
            edges of a rectangle. Therefore, if the added point falls on
            the left or bottom edge of the enlarged rectangle,
            contains returns false for that point.
            </summary>
            <param name="newx">the X coordinate of the new point.</param>
            <param name="newy">the Y coordinate of the new point</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Add(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Adds the GeoPoint object pt to this
            GeoBounds.
            The resulting GeoBounds is the smallest
            GeoBounds that contains both the original
            GeoBounds and the specified GeoPoint.
            
            After adding a point, a call to contains with the
            added point as an argument does not necessarily return
            true. The contains
            method does not return true for points on the right
            or bottom edges of a rectangle. Therefore, if the added point falls
            on the left or bottom edge of the enlarged rectangle,
            contains returns false for that point.
            </summary>
            <param name="pt">the new GeoPoint to add to this
             GeoBounds.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Add(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Adds a GeoBounds object to this
            GeoBounds.  The resulting GeoBounds
            is the union of the two GeoBounds objects.
            </summary>
            <param name="r">the GeoBounds to add to this
            GeoBounds.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms
             and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal
             to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetBounds(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Sets the bounding GeoSize of this GeoSize
            to match the specified GeoSize.
            
            This method is included for completeness, to parallel the
            setBounds method of Component.
            </summary>
            <param name="r">the specified GeoSize</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.SetBounds(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the bounding GeoSize of this
            GeoSize to the specified
            x, y, width,
            and height.
            
            This method is included for completeness, to parallel the
            setBounds method of Component.
            </summary>
            <param name="x">new X coordinate for the upper-left
                                corner of this GeoSize</param>
            <param name="y">the new Y coordinate for the upper-left
                                corner of this GeoSize</param>
            <param name="width">the new width for this GeoSize</param>
            <param name="height">the new height for this GeoSize</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Reshape(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the bounding GeoSize of this
            GeoSize to the specified
            x, y, width,
            and height.
            </summary>
            <param name="x">the new X coordinate for the upper-left
                                corner of this GeoSize</param>
            <param name="y">the new Y coordinate for the upper-left
                                corner of this GeoSize</param>
            <param name="width">the new width for this GeoSize</param>
            <param name="height">the new height for this GeoSize</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.ContainsBounds(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Check whether the current rectangle entirely contains other rectangle.
            </summary>
            <param name="other"> the other rectangle.</param>
            <returns>
            	true if the passed rectangular area is entirely contained 
            in this rectangular area.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.ContainsPoint(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Check whether the current rectangle contains given point.
            </summary>
            <param name="point">the point object</param>
            <returns>
            	true if the rectangular area (inclusively) contains the pixel 
             coordinates.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.Extend(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Enlarges this box so that the point is also contained in this box.
            </summary>
            <param name="point">the point object.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoBounds.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GeoLatLng">
            <summary>
            GeoLatLng is a point in geographical coordinates longitude and latitude.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GeoPoint">
            <summary>
            A point representing a location in  (x,y) coordinate space.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPoint.X">
            <summary>
            The X coordinate of this GeoPoint.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPoint.Y">
            <summary>
            The Y coordinate of this GeoPoint.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoPoint"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.#ctor(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoPoint"/> class.
            </summary>
            <param name="p">a point</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoPoint"/> class.
            </summary>
            <param name="x">the X coordinate of the newly constructed Point</param>
            <param name="y">the Y coordinate of the newly constructed Point</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.ToString">
            <summary>
            Returns a string representation of this point and its location 
            in the  (x,y) coordinate space. This method is 
            intended to be used only for debugging purposes, and the content 
            and format of the returned string may vary between implementations. 
            The returned string may be empty but may not be null.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.SetLocation(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Sets the location of this GeoPoint to the same
            coordinates as the specified GeoPoint object.
            </summary>
            <param name="p">the specified GeoPoint to which to set
            this GeoPoint</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.DistanceSq(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the square of the distance between two points.
            </summary>
            <param name="x1">the X coordinate of the first specified point.</param>
            <param name="y1">the Y coordinate of the first specified point.</param>
            <param name="x2">the X coordinate of the second specified point.</param>
            <param name="y2">the Y coordinate of the second specified point.</param>
            <returns>the square of the distance between the two
            sets of specified coordinates.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.Distance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the distance between two points
            </summary>
            <param name="x1">the X coordinate of the first specified point.</param>
            <param name="y1">the Y coordinate of the first specified point.</param>
            <param name="x2">the X coordinate of the second specified point.</param>
            <param name="y2">the Y coordinate of the second specified point.</param>
            <returns>the distance between the two sets of specified
            coordinates</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.DistanceSq(System.Double,System.Double)">
            <summary>
            Returns the square of the distance from this
             GeoPoint to a specified point.
            </summary>
            <param name="px">the X coordinate of the specified point to be measured
                       against this GeoPoint</param>
            <param name="py">the Y coordinate of the specified point to be measured
                       against this GeoPoint</param>
            <returns>the square of the distance between this
            GeoPoint and the specified point.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.DistanceSq(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Returns the square of the distance from this
            GeoPoint to a specified GeoPoint.
            </summary>
            <param name="pt">the specified point to be measured
                       against this GeoPoint</param>
            <returns>the square of the distance between this
            GeoPoint to a specified GeoPoint.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.Distance(System.Double,System.Double)">
            <summary>
             Returns the distance from this GeoPoint to
             a specified point.
            </summary>
            <param name="px">the X coordinate of the specified point to be measured
                       against this GeoPoint</param>
            <param name="py">the Y coordinate of the specified point to be measured
                       against this GeoPoint</param>
            <returns>the distance between this GeoPoint
            and a specified point</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.Distance(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Returns the distance from this GeoPoint to a
            specified GeoPoint.
            </summary>
            <param name="pt">the specified point to be measured
                      against this GeoPoint</param>
            <returns>the distance between this GeoPoint and
            the specified GeoPoint.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms 
            and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.Equals(System.Object)">
            <summary>
            Determines whether or not two points are equal. Two instances of
            GeoPoint are equal if the values of their
            x and y member fields, representing
            their position in the coordinate space, are the same.
            </summary>
            <param name="obj"> an object to be compared with this GeoPoint</param>
            <returns>
            	 true if the object to be compared is
                    an instance of GeoPoint and has
                    the same values; false otherwise.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPoint.SetLocation(System.Double,System.Double)">
            <summary>
            Sets the location.
            </summary>
            <param name="x">new x coordinate</param>
            <param name="y">new Y coordinate</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoLatLng"/> class.
            </summary>
            Constructs and initializes a point at the origin (0,0) of the coordinate space.
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.#ctor(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoLatLng"/> class.
            </summary>
            <param name="p">a point.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.#ctor(System.Double,System.Double)">
            <summary>
             Constructs and initializes a point at the specified 
            (lat,lng) location in the coordinate space. 
            </summary>
            <param name="lat">the latitude coordinate.</param>
            <param name="lng">the longitute coordinate.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.#ctor(System.Double,System.Double,System.Boolean)">
            <summary>
            Constructs and initializes a point at the specified 
            (lat,lng) location in the coordinate space. 
            </summary>
            <param name="lat">the latitude coordinate.</param>
            <param name="lng">the longitute coordinate.</param>
            <param name="unbounded">whether the point of bounded or not</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.LatRadians">
            <summary>
            Returns the latitude coordinate in radians, as a number between -Pi/2 
            and +Pi/2. If the unbounded flag was set in the constructor, 
            this coordinate can be outside this interval.
            </summary>
            <returns>the latitude coordinate in radians</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.LngRadians">
            <summary>
            Returns the longitude coordinate in radians, as a number between -Pi 
            and +Pi. If the unbounded flag was set in the constructor, 
            this coordinate can be outside this interval.
            </summary>
            <returns> the longitude coordinate in radians</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.Equals(System.Object)">
            <summary>
            Determines whether or not two points are equal. Two instances of
            GeoLatLng are equal if the values of their 
            x and y member fields, representing
            their position in the coordinate space, are the same.
            </summary>
            <param name="obj">an object to be compared with this GeoLatLng</param>
            <returns>
            	true ,if the object to be compared is
                    an instance of GeoLatLng and has
                    the same values; false otherwise.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.Distance(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Returns the distance, in meters, from this point to the given point. 
            By default, this distance is calculated given the default equatorial 
            earth radius of 6378137 meters. The earth is approximated as a sphere,
            hence the distance could be off as much as 0.3%,
            especially in the polar extremes. 
            </summary>
            <param name="pt1">the first point</param>
            <param name="pt2">the other point.</param>
            <returns>the distance, in kilo meters.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.DistanceFrom(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Returns the distance, in meters, from this point to the given point. 
            By default, this distance is calculated given the default equatorial 
            earth radius of 6378137 meters. The earth is approximated as a sphere,
            hence the distance could be off as much as 0.3%,
            especially in the polar extremes. 
            </summary>
            <param name="other">the other point</param>
            <returns>the distance, in Kilo meters.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.GetBearing(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Calculate bearing
            </summary>
            <param name="pt1">first location.</param>
            <param name="pt2">2nd location.</param>
            <param name="pt3">3rd location.</param>
            <returns>the bearing angle (from 0 to 360).</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.AzimuthTo(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Calculates the azimuth between the two points according to the ellipsoid
            model of WGS84. The azimuth is relative to true north. The Coordinates
            object on which this method is called is considered the origin for the
            calculation and the Coordinates object passed as a parameter is the
            destination which the azimuth is calculated to. When the origin is the
            North pole and the destination is not the North pole, this method returns
            180.0. When the origin is the South pole and the destination is not the
            South pole, this method returns 0.0. If the origin is equal to the
            destination, this method returns 0.0. The implementation shall calculate
            the result as exactly as it can. However, it is required that the result
            is within 1 degree of the correct result.
            </summary>
            <param name="from">the Coordinates of the origin</param>
            <param name="to">the Coordinates of the destination</param>
            <returns>the azimuth to the destination in degrees. Result is within the
                    range [0.0 ,360.0).</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLng.ToUrlValue(System.Int32)">
            <summary>
            Returns a string that represents this point in a format suitable 
            for use as a URL parameter value, separated by a comma, without 
            whitespace. By default, precision is returned to 6 digits, 
            which corresponds to a resolution to 4 inches/ 11 centimeters. 
            An optional precision parameter allows you to specify a lower 
            precision to reduce server load.
            </summary>
            <param name="precision">the precision of the output</param>
            <returns>string that represents this point</returns>
        </member>
        <member name="P:Mapdigit.Gis.Geometry.GeoLatLng.Latitude">
            <summary>
            Returns the latitude coordinate in degrees, as a number between -90 and 
            +90. If the unbounded flag was set in the constructor,
            this coordinate can be outside this interval.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Geometry.GeoLatLng.Longitude">
            <summary>
            Returns the longitude coordinate in degrees, as a number between -180 and 
            +180. If the unbounded flag was set in the constructor,
            this coordinate can be outside this interval.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GeoLatLngBounds">
            <summary>
            GeoLatLngBounds is a bound in geographical coordinates longitude and latitude.
            remember: the positive of North is from top to bottom instead of from bottom to 
            top internally.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor">
            <summary>
            Constructs a new GeoBounds whose upper-left corner 
            is at (0,0) in the coordinate space, and whose width and 
            height are both zero. 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Constructs a new GeoBounds, initialized to match 
            the values of the specified GeoBounds.
            </summary>
            <param name="r">the GeoBounds from which to copy initial values
                     to a newly constructed GeoBounds.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner is 
            specified as
            (x,y) and whose width and height 
            are specified by the arguments of the same name. 
            </summary>
            <param name="x">the specified X coordinate</param>
            <param name="y">the specified Y coordinate</param>
            <param name="width">the width of the GeoBounds</param>
            <param name="height">the height of the GeoBounds.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner 
            is at (0,0) in the coordinate space, and whose width and 
            height are specified by the arguments of the same name. 
            </summary>
            <param name="width">the width of the GeoBounds</param>
            <param name="height">the height of the GeoBounds.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoSize)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner is 
            specified by the GeoPoint argument, and
            whose width and height are specified by the 
            GeoSize argument.
            </summary>
            <param name="p">a GeoPoint that is the upper-left corner of 
            the GeoBounds</param>
            <param name="size">size a GeoSize, representing the 
            width and height of the GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Constructs a new GeoBounds whose upper-left corner is the 
            specified GeoPoint, and whose width and height are both zero. 
            </summary>
            <param name="p"> a GeoPoint that is the top left corner 
            of the GeoBounds</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor(Mapdigit.Gis.Geometry.GeoSize)">
            <summary>
            Constructs a new GeoBounds whose top left corner is  
            (0,0) and whose width and height are specified  
            by the GeoSize argument. 
            </summary>
            <param name="size">a GeoSize, specifying width and height</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.#ctor(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
             Constructs a rectangle from the points at its south-west and north-east 
            corners.
            </summary>
            <param name="sw">south-west point of the rectangle</param>
            <param name="ne">north-east point of the rectangle</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.ContainsLatLng(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
             Returns true if the geographical coordinates of the point lie within 
            this rectangle
            </summary>
            <param name="latlng">the given point.</param>
            <returns>
            	if the geographical coordinates of the point lie within 
            this rectangle
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.Intersects(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            Tests if the interior of the IShape intersects the interior of a 
            specified rectangular area.
            </summary>
            <param name="other"> the given rectangle.</param>
            <returns>true if the interior of the IShape and the interior of the 
             rectangular area intersect.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.ContainsBounds(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            Tests if the interior of the IShape entirely contains the specified 
            rectangular area. 
            </summary>
            <param name="other"> the given rectangle.</param>
            <returns>
            	true if the interior of the IShape entirely contains the 
             specified rectangular area; 
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.Extend(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Enlarges this rectangle such that it contains the given point
            </summary>
            <param name="latlng">the new GeoLatLng to add to this rectangle.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.ToSpan">
            <summary>
            Returns a GLatLng whose cordinates represent the size of this rectangle.
            </summary>
            <returns>the point whose cordinates represent the size of this rectangle</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.IsFullLat">
            <summary>
            Returns true if this rectangle extends from the south pole to the north pole
            </summary>
            <returns>
            	true if this rectangle extends from the south pole to the north pole
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.IsFullLng">
            <summary>
            Returns true if this rectangle extends fully around the earth in the
            longitude direction.
            </summary>
            <returns>
            	true if this rectangle extends fully around the earth in the
             longitude direction.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoLatLngBounds.IsEmpty">
            <summary>
            Returns true if this rectangle is empty.
            </summary>
            <returns>true,it's empty.</returns>
        </member>
        <member name="P:Mapdigit.Gis.Geometry.GeoLatLngBounds.SouthWest">
            <summary>
            Returns the point at the south-west corner of the rectangle.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Geometry.GeoLatLngBounds.NorthEast">
            <summary>
            Returns the point at the north-east corner of the rectangle.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Geometry.GeoLatLngBounds.Center">
            <summary>
            Returns the point at the center of the rectangle.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GeoPolygon">
            <summary>
            Polygon on map.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoPolygon"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.#ctor(Mapdigit.Gis.Geometry.GeoPolygon)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoPolygon"/> class.
            </summary>
            <param name="polygon">polygon object copied from.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.#ctor(Mapdigit.Gis.Geometry.GeoLatLng[],System.Int32,System.Int32,System.Double,System.Int32,System.Double)">
            <summary>
            Creates a polygon from an array of vertices.  The weight is the width of
            the line in pixels. The opacity is given as a number between 0 and 1.
            The line will be antialiased and semitransparent.
            </summary>
            <param name="latlngs"> array of points.</param>
            <param name="strokeColor">the color of the polygon stroke.</param>
            <param name="strokeWeight">the width of the polygon stroke.</param>
            <param name="strokeOpacity">the opacity of the polygon stroke.</param>
            <param name="fillColor">the inner color of the polygon.</param>
            <param name="fillOpacity">the inner opacity of the polygon.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.FromEncoded(System.Int32,System.Int32,System.Double,System.Int32,System.Double,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Creates a polygon from encoded strings of aggregated points and levels.
            zoomFactor and  numLevels  these two values determine the precision
            of the levels within an encoded polygon.
            </summary>
            <param name="strokeColor">the color of the polygon.</param>
            <param name="strokeWeight">width of the line in pixels</param>
            <param name="strokeOpacity">the opacity of the polygon.</param>
            <param name="fillColor">the inner color of the polygon.</param>
            <param name="fillOpacity">the inner opacity of the polygon.</param>
            <param name="points">a string containing the encoded latitude and longitude
             coordinates.</param>
            <param name="zoomFactor"> the magnification between adjacent sets of zoom levels
            in the encoded levels string</param>
            <param name="levels">a string containing the encoded polygon zoom level groups</param>
            <param name="numLevels">the number of zoom levels contained in the encoded levels string.</param>
            <returns>Geo polygon object</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.GetVertexCount">
            <summary>
            Returns the number of vertices in the polygon.
            </summary>
            <returns>the number of vertices in the polygon.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.GetVertex(System.Int32)">
            <summary>
            Returns the vertex with the given index in the polygon.
            </summary>
            <param name="index">the index of the point.</param>
            <returns>the vertex with the given index in the polygon</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.GetBounds">
            <summary>
            Returns the bounds for this polygon.
            </summary>
            <returns>the bounds for this polygon</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.Hide">
            <summary>
            Hides the polygon. 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.Show">
            <summary>
            Shows the polygon.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.IsHidden">
            <summary>
            Returns true if the polygon is currently hidden. Otherwise returns false.
            </summary>
            <returns>
            	true if the polygon is currently hidden.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.SupportsHide">
            <summary>
            Returns true if GeoPolygon.hide() is supported 
            </summary>
            <returns>always is true</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.SetPoints(Mapdigit.Gis.Geometry.GeoLatLng[])">
            <summary>
            set the array of points which consist of the line.
            </summary>
            <param name="points">array of points</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolygon.GetPoints">
            <summary>
             get the array of points which consist of the line.
            </summary>
            <returns>the points stored in the line</returns>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._latlngs">
            array store points in the polygon
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._strokeColor">
            stroke color of the polygon
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._strokeWeight">
            stroke Width of the polygon
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._strokeOpacity">
            stroke opacity of the polygon
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._fillColor">
            fill color
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._fillOpacity">
            fill opacity of the polygon
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._zoomFactor">
            Zoom factor
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._numLevels">
            total zoom level, default 18
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._levels">
            level for each point.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._bounds">
            the _bounds of the polyline
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolygon._visible">
            _visible or not
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GeoPolyline">
            <summary>
            Polyline on map.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline.ZoomFactor">
            <summary>
            Zoom factor
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline.NumLevels">
            <summary>
            total zoom level, default 18
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoPolyline"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.#ctor(Mapdigit.Gis.Geometry.GeoPolyline)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoPolyline"/> class.
            </summary>
            <param name="pline">pline object copied from</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.#ctor(Mapdigit.Gis.Geometry.GeoLatLng[],System.Int32,System.Int32,System.Double)">
            <summary>
            Creates a polyline from an array of vertices.  The weight is the width of
            the line in pixels. The opacity is given as a number between 0 and 1.
            The line will be antialiased and semitransparent.
            </summary>
            <param name="latlngs"> array of points.</param>
            <param name="color">the color of the polyline.</param>
            <param name="weight">the width of the polyline.</param>
            <param name="opacity"> the opacity of the polyline.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.FromEncoded(System.Int32,System.Int32,System.Double,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Creates a polyline from encoded strings of aggregated points and levels.
            zoomFactor and  numLevels  these two values determine the precision
            of the levels within an encoded polyline.
            </summary>
            <param name="color">the color of the polyline</param>
            <param name="weight">width of the line in pixels.</param>
            <param name="opacity">the opacity of the polyline.</param>
            <param name="points">a string containing the encoded latitude and longitude
              coordinates.</param>
            <param name="zoomFactor">the magnification between adjacent sets of zoom levels
             in the encoded levels string.</param>
            <param name="levels">a string containing the encoded polyline zoom level groups</param>
            <param name="numLevels">the number of zoom levels contained in the encoded
             levels string.</param>
            <returns>Geo polyline object</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.DistanceToPoly(System.Double,System.Double,System.Double[],System.Double[],System.Boolean)">
            <summary>
            Returns the distance from GeoPoint (x,y) to the closest line
            segment in the Poly (int[] xpts, int[] ypts).
            
            This procedure assumes that xpts.length == ypts.length.
            </summary>
            <param name="ptx"> X points of the polygon</param>
            <param name="pty">Y points of the polygon</param>
            <param name="xpts">x location of the point</param>
            <param name="ypts">Ty location of the point</param>
            <param name="isPolygon"> polyline or polygon</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.IndexOfClosestdistanceToPoly(System.Double,System.Double,System.Double[],System.Double[],System.Boolean)">
            <summary>
            Returns the distance from GeoPoint (x,y) to the closest line
            segment in the Poly (int[] xpts, int[] ypts).
            
            This procedure assumes that xpts.length == ypts.length.
            </summary>
            <param name="ptx">X points of the polygon</param>
            <param name="pty">Y points of the polygon</param>
            <param name="xpts">x location of the point</param>
            <param name="ypts">y location of the point</param>
            <param name="isPolygon"> polyline or polygon</param>
            <returns> GeoPoint whose x is the closes distance, y is the index of the poly</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.IndexOfClosestdistanceToPoly(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Returns the distance from GeoPoint (x,y) to the closest line
            segment in the Poly (int[] xpts, int[] ypts).
            
            This procedure assumes that xpts.length == ypts.length.
            </summary>
            <param name="latLng">location of the point</param>
            <returns> GeoPoint whose x is the closes distance, y is the index of the poly</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.LineSegments(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint,System.Int32,System.Boolean)">
            <summary>
            Returns n or n+1 points along a line.
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="n">The n.</param>
            <param name="includeLast">if set to <c>true</c> [include_last].</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetClosetPoint(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint,System.Boolean)">
            <summary>
            Find the closest point on a line from a given pt.
            </summary>
            <param name="pt1">start point of the line</param>
            <param name="pt2">end point of the line.</param>
            <param name="pt">distance to this point.</param>
            <param name="segmentClamp">is segment or not</param>
            <returns>the closet point on the line</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.DistanceToEndpoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Distance to closest endpoint.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.DistanceToLine(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
             <summary>
             Computes the distance from a point to a line segment.
             </summary>
             <remarks>
             Variable usage as follows:
             
             <ul>
             <li>x12 x distance from the first endpoint to the second.</li>
             <li>y12 y distance from the first endpoint to the second.</li>
             <li>x13 x distance from the first endpoint to point being
             tested.</li>
             <li>y13 y distance from the first endpoint to point being
             tested.</li>
             <li>x23 x distance from the second endpoint to point being
             tested.</li>
             <li>y23 y distance from the second endpoint to point being
             tested.</li>
             <li>D12 Length of the line segment.</li>
             <li>pp distance along the line segment to the intersection of
             the perpendicular from the point to line extended.</li>
             </ul>
            
             Procedure:
             
            
             Compute D12, the length of the line segment. Compute pp, the
             distance to the perpendicular. If pp is negative, the
             intersection is before the start of the line segment, so return
             the distance from the start point. If pp exceeds the length of
             the line segment, then the intersection is beyond the end point
             so return the distance of the point from the end point.
             Otherwise, return the absolute value of the length of the
             perpendicular line. The sign of the length of the perpendicular
             line indicates whether the point lies to the right or left of
             the line as one travels from the start point to the end point.
             </remarks>
             <param name="x1">line x coord1</param>
             <param name="y1">line y coord1</param>
             <param name="x2">line x coord2</param>
             <param name="y2">line y coord2</param>
             <param name="x">point x coord</param>
             <param name="y">point y coord</param>
             <returns>double distance to line segment</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.Distance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            2D distance formula.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.Distance(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Distances the specified x1.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetVertexCount">
            <summary>
            Returns the number of vertices in the polyline.
            </summary>
            <returns>the number of vertices in the polyline.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetVertex(System.Int32)">
            <summary>
            Returns the vertex with the given index in the polyline.
            </summary>
            <param name="index">the index of the point.</param>
            <returns>the vertex with the given index in the polyline</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mapdigit.Gis.Geometry.GeoPolyline.SetLevel(System.Int32,System.Int32)" -->
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetLevel(System.Int32)">
            <summary>
            Returns the level with the given index in the polyline.
            </summary>
            <param name="index">the index of the point..</param>
            <returns>the level with the given index in the polyline.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetLength">
            <summary>
            Returns the length (in meters) of the polyline along the surface of a
            spherical Earth
            </summary>
            <returns>the length (in meters) of the polyline</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetLength(System.Int32,System.Int32)">
            <summary>
            Returns the length (in meters) of the polyline along the surface of a
            spherical Earth
            </summary>
            <param name="startIndex">start point index.</param>
            <param name="endIndex">end point idnex(not included).</param>
            <returns> the length (in meters) of the polyline between two point</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetBounds">
            <summary>
            Returns the bounds for this polyline.
            </summary>
            <returns>the bounds for this polyline.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.Hide">
            <summary>
            Hides this polyline.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.Show">
            <summary>
            Show this polyline.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.IsHidden">
            <summary>
            Returns true if the polyline is currently hidden. Otherwise returns false
            </summary>
            <returns>
            	true if the polyline is currently hidden.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.SupportsHide">
            <summary>
            Returns true if GeoPolyline.hide() is supported
            </summary>
            <returns>always true.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.SetPoints(Mapdigit.Gis.Geometry.GeoLatLng[])">
            <summary>
            set the array of points which consist of the line.
            </summary>
            <param name="points">points array of points</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoPolyline.GetPoints">
            <summary>
            get the array of points which consist of the line.
            </summary>
            <returns>the array of points which consist of the line.</returns>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline._latlngs">
            array store points in the polyline
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline._color">
            Color of the polyline
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline._weight">
            Width of the polyline
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline._opacity">
            Opacity of the polyline
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline._levels">
            level for each point.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline._bounds">
            the bounds of the polyline
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoPolyline._visible">
            visible or not
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GeoSize">
            <summary>
            The GeoSize class encapsulates the width and 
            height of a component (in integer precision) in a single object. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoSize.Width">
            <summary>
            The Width GeoSize; negative values can be used.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GeoSize.Height">
            <summary>
            The Height GeoSize; negative values can be used.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoSize"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.#ctor(Mapdigit.Gis.Geometry.GeoSize)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoSize"/> class.
            </summary>
            <param name="size">the specified GeoSize for the  width and 
                          height values</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GeoSize"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.SetSize(Mapdigit.Gis.Geometry.GeoSize)">
            <summary>
            Sets the size of this GeoSize object to
            match the specified size.
            This method is included for completeness, to parallel the
            getSize method of Component.
            </summary>
            <param name="d">the new size for the GeoSize object</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.SetSize(System.Double,System.Double)">
            <summary>
            Sets the size of this GeoSize object to
            the specified width and height in double precision.
            remember that if width or height
            are larger than Integer.MAX_VALUE, they will
            be reset to Integer.MAX_VALUE.
            </summary>
            <param name="width">the new width for the GeoSize object</param>
            <param name="height">the new height for the GeoSize object.</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.GetSize">
            <summary>
            Gets the size of this GeoSize object.
            This method is included for completeness, to parallel the
            getSize method defined by Component.
            </summary>
            <returns>the size of this GeoSize, a new instance of
                    GeoSize with the same width and height</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.SetSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of this GeoSize object
            to the specified width and height.
            This method is included for completeness, to parallel the
            setSize method defined by Component.
            </summary>
            <param name="width"> the new width for this GeoSize object</param>
            <param name="height"> the new height for this GeoSize object</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to 
            this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms 
            and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GeoSize.ToString">
            <summary>
            Returns a string representation of the values of this
            GeoSize object's height and
            width fields. This method is intended to be used only
            for debugging purposes, and the content and format of the returned
            string may vary between implementations. The returned string may be
            empty but may not be null.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Geometry.GreateCircleCalculator">
            <summary>
            The GreateCircleCalculator compute true course and distance
            between points.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelSphere">
            Sphere model.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelWgs84">
            WGS84 model. radius=6378.137km
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelNad27">
            NAD27 model. radius=6378.2064km
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelInternational">
            international model. radius=6378.388km.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelKrasovsky">
            krasovsky model. radius=6378.245km.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelBessel">
            bessel model. radius=6377.397155km.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelWgs72">
            WGS72 model. radius=6378.135km.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelWgs66">
            WGS66 model. radius=6378.145.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.EarthModelFaiSphere">
            FAI sphere. radius=6371.0km.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.UnitNm">
            in nautical mile.
        </member>
        <member name="F:Mapdigit.Gis.Geometry.GreateCircleCalculator.UnitKm">
            in Kilometers.
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Geometry.GreateCircleCalculator"/> class.
            </summary>
            <param name="earthModel">the model of the earth</param>
            <param name="unit">Km or mile, default is km</param>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.CalculateDistance(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Calculate the distance between two point in great circle.
            </summary>
            <param name="pt1"> the first location.</param>
            <param name="pt2">the second location..</param>
            <returns>the distance between the two points.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.CalculateDistanceAndCourse(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
             Calculate the distance between two point in great circle.
            </summary>
            <param name="pt1">the first location.</param>
            <param name="pt2">the second location.</param>
            <returns>the distance and course between the 2 point</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.GetLocationWithDistance(Mapdigit.Gis.Geometry.GeoLatLng,System.Double,System.Double)">
            <summary>
            Get a location with given distance ,direction of one point.
            </summary>
            <param name="pt1">the first location.</param>
            <param name="distance">the distance to the first point.</param>
            <param name="direction">the direction to the first point.</param>
            <returns>the second point</returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.ComputeFormDir(Mapdigit.Gis.Geometry.GeoLatLng,System.Double,System.Double)">
            <summary>
            Computes the form dir.
            </summary>
            <param name="pt1">the first location.</param>
            <param name="distance">The distance.</param>
            <param name="crs">The CRS.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.ComputeFormCd(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Computes the form cd.
            </summary>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.Acosf(System.Double)">
            <summary>
            Acosfs the specified x.
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.Atan2(System.Double,System.Double)">
            <summary>
            Atan2s the specified y.
            </summary>
            <param name="y">The y.</param>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.Mod(System.Double,System.Double)">
            <summary>
            Mods the specified x.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.Modlon(System.Double)">
            <summary>
            Modlons the specified x.
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.Modcrs(System.Double)">
            <summary>
            Modcrses the specified x.
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.Modlat(System.Double)">
            <summary>
            Modlats the specified x.
            </summary>
            <param name="x">The x.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Geometry.GreateCircleCalculator.Crsdist(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Crsdists the specified lat1.
            </summary>
            <param name="lat1">The lat1.</param>
            <param name="lon1">The lon1.</param>
            <param name="lat2">The lat2.</param>
            <param name="lon2">The lon2.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Geometry.PolylineEncoder">
            <summary>
            PolylineEncoder encode/decode google encoded polyline string.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Geometry.PolylineEncoder._numLevels">
            total levels
        </member>
        <member name="F:Mapdigit.Gis.Geometry.PolylineEncoder._zoomFactor">
            
        </member>
        <member name="T:Mapdigit.Gis.Location.ChinaMapOffset">
            <summary>
            The map in china has so-call offet, the laitude/longitude received by GPS device
            is not actually mapped to the real position, it has "offset", this class
            is used for amend such offset.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.ChinaMapOffset.GetOffset(System.Double,System.Double,System.Int32)">
            <summary>
            Get map offset at given location and level.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <param name="mapLevel">The map level.</param>
            <returns>offset in china</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.ChinaMapOffset.FromEarthToMars(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Convert coordinates from WGS to Mars(China)
            </summary>
            <param name="earth">WGS lat/lng pair.</param>
            <returns>Mars' coordinates  lat/lng with deviation in China.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.ChinaMapOffset.FromMarsToEarth(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Convert coordinates from  Mars(China) to WGS
            </summary>
            <param name="mar"> lat/lng with deviation in China.</param>
            <returns>WGS coordinates</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.ChinaMapOffset.SetQueryBaseUrl(System.String)">
            <summary>
            Sets the query base URL.
            </summary>
            <param name="baseUrl">The base URL.</param>
        </member>
        <member name="F:Mapdigit.Gis.Location.ChinaMapOffset._offsetCache">
            internal cache.
        </member>
        <member name="F:Mapdigit.Gis.Location.ChinaMapOffset._queryUrl">
            default sever url.
        </member>
        <member name="M:Mapdigit.Gis.Location.ChinaMapOffset.GetQueryLocation(System.Double,System.Double)">
            <summary>
            Gets the query location.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.ChinaMapOffset.GetOffsetFromServer(System.Double,System.Double)">
            <summary>
            Gets the offset from server.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Coordinates">
            <summary>
            The Coordinates class represents coordinates as
            latitude-longitude-altitude values. 
            </summary>
            <remarks>
            The latitude and longitude values are
            expressed in degrees using floating point values. The degrees are in decimal
            values (rather than minutes/seconds). The coordinates are given using the
            WGS84 datum.
            
            This class also provides convenience methods for converting between a string
            coordinate representation and the double representation used in this
            class.
            </remarks>
        </member>
        <member name="F:Mapdigit.Gis.Location.Coordinates.DdMmSs">
            <summary>
            Identifier for string coordinate representation Degrees, Minutes, Seconds
            and decimal fractions of a second.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Coordinates.DdMm">
            <summary>
            
            Identifier for string coordinate representation Degrees, Minutes, decimal
            fractions of a minute.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Coordinates.MetersPerRadian">
            This is the earth's mean radius in meters.  Using the mean gives the most
            accurate results for distances measured with any bearing.
            
            In truth the earth is not a perfect sphere.  The radius of the equator
            is 6,378,137 and the polar radius is 6,356,752.3142.  The FAI's
            definition of 6,371,000 lies between them.
        </member>
        <member name="M:Mapdigit.Gis.Location.Coordinates.#ctor(System.Double,System.Double,System.Double)">
             <summary>
             Constructs a new Coordinates object with the values 
             specified.
             </summary>
             <remarks>
             The latitude and longitude parameters are expressed in degrees using
             floating point values. The degrees are in decimal values (rather than
             minutes/seconds).
             
             The coordinate values always apply to the WGS84 datum.
             
             The Double.NaN value can be used for altitude to indicate 
             that altitude is not known.
            </remarks>
             <param name="latitude">the latitude of the location. Valid range: [-90.0,
                    90.0]. Positive values indicate northern latitude and negative
                    values southern latitude.</param>
             <param name="longitude">the longitude of the location. Valid range: [-180.0,
                    180.0). Positive values indicate eastern longitude and negative
                    values western longitude.</param>
             <param name="altitude">the altitude of the location in meters, defined as
                    height above WGS84 ellipsoid. Double.Nan can be used 
                    to indicate that altitude is not known.</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.Coordinates.AzimuthTo(Mapdigit.Gis.Location.Coordinates)">
            <summary>
            Calculates the azimuth between the two points according to the ellipsoid
            model of WGS84. The azimuth is relative to true north.
            </summary>
            <remarks>
             The Coordinates object on which this method is called is considered the 
            origin for the calculation and the Coordinates object passed as a parameter is the
            destination which the azimuth is calculated to. When the origin is the
            North pole and the destination is not the North pole, this method returns
            180.0. When the origin is the South pole and the destination is not the
            South pole, this method returns 0.0. If the origin is equal to the
            destination, this method returns 0.0. The implementation shall calculate
            the result as exactly as it can. However, it is required that the result
            is within 1 degree of the correct result.
            </remarks>
            <param name="to">the Coordinates of the destination</param>
            <returns>the azimuth to the destination in degrees. Result is within the
                     range [0.0 ,360.0).</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Coordinates.Distance(Mapdigit.Gis.Location.Coordinates)">
            <summary>
            /// Calculates the geodetic distance between the two points according to the
            ellipsoid model of WGS84. Altitude is neglected from calculations.
            </summary>
            <remarks>
            The implementation shall calculate this as exactly as it can. However, it
            is required that the result is within 0.35% of the correct result.
            </remarks>
            <param name="to"> the Coordinates of the destination</param>
            <returns>the distance to the destination in meters</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Coordinates.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms 
            and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Coordinates.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to 
            this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Coordinates.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="F:Mapdigit.Gis.Location.Coordinates._altitude">
            The altitude of the location in meters, defined as height above WGS84
            ellipsoid. double.Nan can be used to indicate that altitude
            is not
            known.
        </member>
        <member name="F:Mapdigit.Gis.Location.Coordinates._latitude">
            The latitude of the location. Valid range: [-90.0, 90.0]. Positive values
            indicate northern latitude and negative values southern latitude.
        </member>
        <member name="F:Mapdigit.Gis.Location.Coordinates._longitude">
            The longitude of the location. Valid range: [-180.0, 180.0). Positive
            values indicate eastern longitude and negative values western longitude.
        </member>
        <member name="P:Mapdigit.Gis.Location.Coordinates.Latitude">
            <summary>
            the latitude component of this coordinate. Positive values
            indicate northern latitude and negative values southern latitude.
            The latitude is given in WGS84 datum.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Location.Coordinates.Altitude">
            <summary>
            Sets the geodetic altitude for this point.
            </summary>
            <value>the altitude of the location in meters, defined as
                   height above the WGS84 ellipsoid. 0.0 means a location at the
                   ellipsoid surface, negative values mean the location is below the
                   ellipsoid surface, Double.Nan that no altitude is not
                   available</value>
        </member>
        <member name="P:Mapdigit.Gis.Location.Coordinates.Longitude">
            <summary>
            Sets the geodetic longitude for this point. Longitude is given as a
             double expressing the longitude in degrees in the WGS84 datum.
            </summary>
            <value>the longitude of the location in degrees. Valid range:
                    [-180.0, 180.0)</value>
        </member>
        <member name="T:Mapdigit.Gis.Location.ILocationListener">
            <summary>
            The LocationListener represents a listener that receives events associated 
            with a particular VirtualGPSDevice.
            </summary>
            <remarks>
             Applications implement this interface 
            and register it with a VirtualGPSDevice to obtain regular position updates.
            When the listener is registered with a VirtualGPSDevice with some update 
            period, the implementation shall attempt to provide updates at the defined 
            interval. If it isn't possible to determine the location, e.g. because of
            the VirtualGPSDevice being TemporarilyUnavailable or OutOfService or 
            because the update period is too frequent for the location method to 
            provide updates, the implementation can send an update to the listener that 
            contains an 'invalid' Location instance.
            The implementation shall use best effort to post the location updates at the
            specified interval, but this timing is not guaranteed to be very exact 
            (i.e. this is not an exact timer facility for an application).
            The application is responsible for any possible synchronization needed in 
            the listener methods.
            The listener methods must return quickly and should not perform any extensive
            processing. The method calls are intended as triggers to the application.
            Application should do any necessary extensive processing in a separate thread
            and only use these methods to initiate the processing.
            </remarks>
        </member>
        <member name="M:Mapdigit.Gis.Location.ILocationListener.LocationUpdated(Mapdigit.Gis.Location.LocationProvider,Mapdigit.Gis.Location.Location)">
            <summary>
            Called by the VirtualGPSDevice to which this listener is registered. 
            </summary>
            <remarks>
            This method will be called periodically according to the interval defined
            when registering the listener to provide updates of the current location. 
            </remarks>
            <param name="device">The device.</param>
            <param name="location">the location to which the event relates, i.e. the 
            new position.</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.ILocationListener.ProviderStateChanged(Mapdigit.Gis.Location.LocationProvider,System.Int32)">
            <summary>
            Called by the VirtualGPSDevice to which this listener is registered if 
            the state of the VirtualGPSDevice has changed.
            </summary>
            <remarks>
            These device state changes are delivered to the application as soon as 
            possible after the state of a provider changes. The timing of these 
            events is not related to the period of the location updates.
            If the application is subscribed to receive periodic location updates, 
            it will continue to receive these regardless of the state of the 
            VirtualGPSDevice. If the application wishes to stop receiving location
            updates for an unavailable provider, it should de-register itself from 
            the provider.
            </remarks>
            <param name="device">The device.</param>
            <param name="newState">The new state of the VirtualGPSDevice</param>
        </member>
        <member name="T:Mapdigit.Gis.Location.Location">
            <summary>
            The Location class represents the standard set of basic location information.
            </summary>
            <remarks>
            This includes the timestamped coordinates, accuracy, speed, course, and 
            information about the positioning method used for the location.
            </remarks>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Latitude">
            <summary>
             Latitude.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Altitude">
            <summary>
            Altitude
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Speed">
            <summary>
            Returns the terminal's current ground speed in meters per second (m/s) 
            at the time of measurement. The speed is always a non-negative value. 
            </summary>
            <remarks>
            Remember that unlike the coordinates, speed does not have an associated 
            accuracy because the methods used to determine the speed typically are 
            not able to indicate the accuracy. 
            </remarks>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Course">
            <summary>
            course over ground, degree true.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Pdop">
            <summary>
            PDOP
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Hdop">
            <summary>
            HDOP
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Vdop">
            <summary>
            VDOP
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Location.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Location.IsValid">
            <summary>
            Returns whether this Location instance represents a valid location with 
            coordinates or an invalid one where all the data, especially the latitude
            and longitude coordinates, may not be present.
            </summary>
            <returns>
            	a boolean value with true indicating that this Location instance 
            is valid.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Location.Copy(Mapdigit.Gis.Location.Location)">
            <summary>
            Copy from anthoer location object
            </summary>
            <param name="location">location object to copy from.</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.Location.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="P:Mapdigit.Gis.Location.Location.QualifiedCoordinates">
            <summary>
            Returns the coordinates of this location and their accuracy. 
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Location.Location.TotalMillisecond">
            <summary>
            Returns the timestamp at which the data was collected. This timestamp 
            should represent the point in time when the measurements were made. 
            </summary>
            <remarks>
            Implementations make best effort to set the timestamp as close to this 
            point in time as possible. The time returned is the time of the local 
            clock in the terminal in milliseconds using the same clock and same time 
            representation as System.currentTimeMillis(). 
            </remarks>
            <returns>a timestamp representing the time.</returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.LocationException">
            <summary>
            The LocationException is thrown when a Location API specific error has 
            occurred. The detailed conditions when this exception is thrown are 
            documented in the methods that throw this exception. 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.LocationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.LocationException"/> class.
            </summary>
            <param name="s">the detail message</param>
        </member>
        <member name="T:Mapdigit.Gis.Location.LocationProvider">
            <summary>
            This is the starting point for applications using location information in 
            this API and represents a source of the location information. 
            </summary>
            <remarks>
            A VirtualGPSDevice represents a vitural location-providing module, generating
            Locations.
            Applications obtain VirtualGPSDevice instances (classes implementing the 
            actual functionality by extending this abstract class) by calling the one 
            of the factory methods. 
            </remarks>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.Available">
            <summary>
            Availability status code: the location device is available. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.OutOfService">
            <summary>
            Availability status code: the location device is out of service. Being
            out of service means that the method is unavailable and the 
            implementation is not able to expect that this situation would change
            in the near future. An example is when using a location method 
            implemented in an external device and the external device is detached. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.TemporarilyUnavailable">
            <summary>
            Availability status code: the location device is temporarily unavailable.
            Temporary unavailability means that the method is unavailable due to 
            reasons that can be expected to possibly change in the future and the
            provider to become available. An example is not being able to receive 
            the signal because the signal used by the location method is currently 
            being obstructed, e.g. when deep inside a building for satellite based 
            methods. However, a very short transient obstruction of the signal 
            should not cause the provider to toggle quickly between 
            TemporarilyUnavailable and Available. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.LocationListener">
            <summary>
            the location listener.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.CurrentState">
            <summary>
            current device status.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.CurrentLocation">
            <summary>
             current location.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.LocationProvider.GetLocation(System.Int32)">
            <summary>
            Retrieves a Location associated with this class. If no result could be 
            retrieved, a LocationException is thrown. If the location can not be 
            determined within the timeout period specified in the parameter,
            the method shall throw a LocationException.
            </summary>
            <remarks>
            If the device is temporarily unavailable, the implementation shall wait 
            and try to obtain the location until the timeout expires. If the provider
            is out of service, then the LocationException is thrown immediately.
            </remarks>
            <param name="timeout">a timeout value in seconds, -1 is used to indicate that 
            the implementation shall use its default timeout value for this device.
            return a Location object </param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.LocationProvider.GetState">
            <summary>
            Returns the current state of this LocationProvider. The return value 
            shall be one of the availability status code constants defined in 
            VirtualGPSDevice class. 
            </summary>
            <returns>the availability state of this device.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.LocationProvider.SetLocationListener(Mapdigit.Gis.Location.ILocationListener,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a LocationListener for updates at the defined interval. The listener
            will be called with updated location at the defined interval. The 
            listener also gets updates when the availablilty state of the 
            Device changes.
            </summary>
            <remarks>
            Passing in -1 as the interval selects the default interval which is 
            dependent on the used location method. 
            Only one listener can be registered with each LocationProvider instance. 
            Setting the listener replaces any possibly previously set listener. 
            Setting the listener to null cancels the registration of any previously 
            set listener.
            </remarks>
            <param name="listener">The listener to be registered. If set to null the 
            registration of any previously set listener is cancelled.</param>
            <param name="interval">The interval in seconds. -1 is used for the default 
            interval of this provider. </param>
            <param name="timeout">Timeout value in seconds, must be greater than 0. 
            If the value is -1, the default timeout for this provider is used.</param>
            <param name="maxAge"> Maximum age of the returned location in seconds,must 
            be greater than 0 or equal to -1 to indicate that the default maximum
            age for this provider is used.</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.LocationProvider.GetOrientation">
            <summary>
            return last known orientation.
            </summary>
            <returns>last known orientation.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.LocationProvider.Reset">
            <summary>
            reset the location provider
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.locationInterval">
            <summary>
            interval.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.locationTimeout">
            <summary>
            time out for location.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.locationMaxAge">
            <summary>
            max age for location.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.currentOrientation">
            <summary>
            current Orientation.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.getOneFix">
            <summary>
            Get one fix or not.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.syncObject">
            <summary>
            sync object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.LocationProvider.previousFixtime">
            <summary>
            previous fix time;
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Location.LocationProvider.LastKnownLocation">
            <summary>
            Returns the last known location that the implementation has. This is the
            best estimate that the implementation has for the previously known 
            location.
            </summary>
            <remarks>
            Applications can use this method to obtain the last known location and 
            check the timestamp and other fields to determine if this is recent 
            enough and good enough for the application to use without needing to make
            a new request for the current location.
            </remarks>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.INmeaDataListener">
            <summary>
            NEMA Data record for each NMEA sentence.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.INmeaDataListener.NmeaDataReceived(Mapdigit.Gis.Location.LocationProvider,Mapdigit.Gis.Location.Nmea.NmeaDataRecord)">
            <summary>
            Called by the NMEACompatibleLocationProvider to which this listener
            is registered.
            This method will be called periodically when there's NMEA data arrives.
            </summary>
            <param name="device">The device.</param>
            <param name="data">the NMEA data received</param>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider">
            <summary>
            A NMEACompatibleLocationProvider represents a NEMA0183 compatible devcie
            generating Locations.
            </summary>
            <remarks>
            Applications obtain NMEACompatibleLocationProvider instances (classes
            implementing the actual functionality by extending this abstract class)
            by calling the one of the factory methods.
            </remarks>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.StartListening(System.IO.Stream)">
            <summary>
            Start lister to an NMEA data input stream
            </summary>
            <param name="input">the NMEA input</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.StopListening">
            <summary>
            Stops the listening.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.SetNmeaDataListener(Mapdigit.Gis.Location.Nmea.INmeaDataListener)">
            <summary>
            Sets the nmea data listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.Parse(System.String)">
            <summary>
            Parses the specified input.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.Parse(System.Byte[],System.Int32)">
            <summary>
            Parses the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="len">The len.</param>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider._nmeaParser">
            Nmea Parser
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.nmeaDataListener">
            <summary>
            the Nmea data listener.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.ProcessNmeaDataRecords">
            <summary>
            Processes the nmea data records.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaCompatibleLocationProvider.Reset">
            <summary>
            reset the location provider
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaDataRecord">
            <summary>
            NEMA Data record for each NMEA sentence.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.TypeNone">
            <summary>
            None type
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.TypeGPRMC">
            <summary>
            Type GPRMC.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.TypeGPGGA">
            <summary>
            Type GPGGA.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.TypeGPGSA">
            <summary>
            Type GPGSA.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.TypeGPGSV">
            <summary>
            Type GPRMC.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.TypeGPGLL">
            <summary>
            Type GPGGA.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.TypeGPVTG">
            <summary>
            Type GPGSA.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.AllTypesMask">
            <summary>
            TYPE_GPRMC | TYPE_GPGGA | TypeGPGSA |
            TYPE_GPGSV | TYPE_GPGLL | TYPE_GPVTG
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaDataRecord.RecordType">
            <summary>
            record Type.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord">
            <summary>
            NEMA Data record for GPGGA sentence.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.Latitude">
            <summary>
            Latitude.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.Longitude">
            <summary>
            Longitude.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.ReceiverMode">
            <summary>
            Receiver mode.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.NumberOfSatellites">
            <summary>
            number Of Satellites used in fix.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.Hdop">
            <summary>
            Horizontal dilution of precision.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.Altitude">
            <summary>
            Altitude.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGGADataRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord">
            <summary>
            NEMA Data record for GPGLL sentence..
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord.Latitude">
            <summary>
            Latitude.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord.Longitude">
            <summary>
            Longitude.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord.Status">
            <summary>
            status: A= Data valid , V= data not valid.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGLLDataRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord">
            <summary>
            NEMA Data record for GPGSA sentence.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.ManualMode">
            <summary>
            Mode M or A.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.OperationMode">
            <summary>
            Mode 1 -fix not avaiable, 2 2D ,3 3D.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.PrNs">
            <summary>
            PRN numbers of saltellite used in solution.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.Pdop">
            <summary>
            PDOP.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.Hdop">
            <summary>
            HDOP.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.Vdop">
            <summary>
            VDOP.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGSADataRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaGPGSVDataRecord">
            <summary>
            NEMA Data record for GPGSV sentence
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSVDataRecord.NumberOfSatelltes">
            <summary>
            Total number of satellites in view.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPGSVDataRecord.Satellites">
            <summary>
            Satellite info.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGSVDataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.Nmea.NmeaGPGSVDataRecord"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPGSVDataRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord">
            <summary>
            NEMA Data record for GPRMC sentence.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.TimeStamp">
            <summary>
            Time stamp.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.Status">
            <summary>
            Status.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.Latitude">
            <summary>
             Latitude
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.Longitude">
            <summary>
            Longitude.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.Speed">
            <summary>
            speed over ground
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.Course">
            <summary>
            course over ground, degree true
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.MagneticCourse">
            <summary>
            Magnetic variation
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPRMCDataRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord">
            <summary>
            NEMA Data record for GPVTG sentence
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord.Course">
            <summary>
            Course ,true .
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord.CourseMagnetic">
            <summary>
            course, magnetic.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord.SpeedKnot">
            <summary>
            speed in knot.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord.SpeedKm">
            <summary>
            speed in km.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaGPVTGDataRecord.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.NmeaParser">
            <summary>
            NEMA 0183 parser.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.DollarSignGPGSA">
            GPS DOP and active satellites.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.DollarSignGPGGA">
            Global positioning system fixed data.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.DollarSignGPRMC">
            Recommended minimum specific GPS/Transit data.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.DollarSignGPGSV">
            Satellites in view.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.DollarSignGPGLL">
            Location Fix.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.DollarSignGPVTG">
            ground speed.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.OutputBufferMaxSize">
            Size of the string buffer. This should be a little more than the size of
            the byte array plus 80 (the max size of an Nmea sentence).
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.MaxSentenceSize">
            The maximum size of a sentence according to the Nmea standards is 82. We
            will use 128 to be safe.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.SentenceStart">
            Sentence characters
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.ChecksumStart">
            checksum start.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.SentenceEnd">
            sentence end character.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.Delimiter">
            parameter delimter.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.TypeNothingToProcess">
            There was not enough to process
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser.NmeaDataRecords">
            Parsed Nmea data records.
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.Parse(System.Byte[],System.Int32)">
            <summary>
            Append the input and parse it. The size of the input must always be
            less than OUTPUT_BUFFER_MAX_SIZE.
            </summary>
            <param name="input">the input to parse in bytes.</param>
            <param name="size">the size of the input.</param>
            <returns>a integer to indicate which sentences were parsed</returns>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser._data">
            The current data read from the GPS device
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser._dataLength">
            The length of data
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser._gpgsvTable">
            temp hashtable used to determin all GSV sentences have been parsed.
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.NmeaParser._satellitesInfo">
            temporaily stored satellites in view.
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.Append(System.Byte[],System.Int32)">
            <summary>
            Append the input to the input buffer. The size of the input must
            always be less than OUTPUT_BUFFER_MAX_SIZE.
            </summary>
            <param name="input">the input in bytes.</param>
            <param name="size">the size of the input</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.Flush">
            <summary>
            Flush the buffer.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.DoParse">
            <summary>
            Parse the data from the Bluetooth GPS device into NMEA sentences.
            </summary>
            <returns>a integer to indicate which sentences were parsed</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.IndexOf(System.Byte[],System.Char,System.Int32,System.Int32)">
            <summary>
            Looks for the first occurance of a byte b in 
            array between 
            [fromIndex, stopIndex).
            </summary>
            <param name="array"> is the data to scan</param>
            <param name="b">is the byte to match.</param>
            <param name="fromIndex">is the first index into array to check</param>
            <param name="stopIndex">is one past the last index into array to check.</param>
            <returns>The first index where b was found; -1 if it was not
             found.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.LastIndexOf(System.Byte[],System.Char,System.Int32)">
            <summary>
            Looks for the last occurance of a byte b in
            array going
            backwards from fromIndex.
            </summary>
            <param name="array">is the data to scan.</param>
            <param name="b">is the byte to match</param>
            <param name="fromIndex">is the first index into array to check</param>
            <returns>The last index where b was found; -1 if it was not
            found.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.CheckSum(System.Byte[])">
            <summary>
            check the checksum is correct or not.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.ProcessSentence(System.Byte[],System.Int32,System.Int32,System.Int16)">
            <summary>
            Process the sentence of the specified type.  The sentence is
            every ASCII character stored in data between
            offset and stop.
            </summary>
            <param name="data">contains the NMEA sentence to process</param>
            <param name="offset">is the index that starts the NMEA sentence within 
            data.</param>
            <param name="stop">is the index of the final character in the sentenc.</param>
            <param name="type">the sentence type.</param>
            <returns>the type of the setence processed. If the sentence cannot be
                    processed this returns 0.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.LatitudeToDouble(System.String,System.String)">
            <summary>
            latitude in ddmm.mmmmmm
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.LongitudeToDouble(System.String,System.String)">
            <summary>
            longitude in dddmm.mmmmmm
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.ProcessGPRMC(System.String)">
            <summary>
            Processes the GPRMC.
             RMC Recommended Minimum Navigation Information
                   12
                   1 2 3 4 5 6 7 8 9 10 11|
                   | | | | | | | | | | | |
                   $--RMC,hhmmss.ss,A,llll.ll,a,yyyyy.yy,a,x.x,x.x,xxxx,x.x,a*hh
                   1) Time (UTC)
                   2) Status, V = Navigation receiver warning
                   3) Latitude
                   4) N or S
                   5) Longitude
                   6) E or W
                   7) Speed over ground, knots
                   8) Track made good, degrees true
                   9) Date, ddmmyy
                   10) Magnetic Variation, degrees
                   11) E or W
                   12) Checksum
            </summary>
            <param name="nmeaSentence">The nmea sentence.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.ProcessGPGGA(System.String)">
            <summary>
            Processes the GPGGA.
            GGA Global Positioning System Fix Data. Time, Position and fix related data
               for a GPS receiver
                                   11
               1 2 3 4 5 6 7 8 9 10 | 12 13 14 15
               | | | | | | | | | | | | | | |
               $--GGA,hhmmss.ss,llll.ll,a,yyyyy.yy,a,x,xx,x.x,x.x,M,x.x,M,x.x,xxxx*hh
               1) Time (UTC)
               2) Latitude
               3) N or S (North or South)
               4) Longitude
               5) E or W (East or West)
               6) GPS Quality Indicator,
               0 - fix not available,
               1 - GPS fix,
               2 - Differential GPS fix
               7) Number of satellites in view, 00 - 12
               8) Horizontal Dilution of precision
               9) Antenna Altitude above/below mean-sea-level (geoid)
               10) Units of antenna altitude, meters
               11) Geoidal separation, the difference between the WGS-84 earth
               ellipsoid and mean-sea-level (geoid), "-" means mean-sea-level below ellipsoid
               12) Units of geoidal separation, meters
               13) Age of differential GPS data, time in seconds since last SC104
               type 1 or 9 update, null field when DGPS is not used
               14) Differential reference station ID, 0000-1023
               15) Checksum
            </summary>
            <param name="nmeaSentence">The nmea sentence.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.ProcessGPGSA(System.String)">
            <summary>
            Processes the GPGSA.
            GSA GPS DOP and active satellites
               1 2 3 14 15 16 17 18
               | | | | | | | |
               $--GSA,a,a,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x.x,x.x,x.x*hh
               1) Selection mode
               2) Mode
               3) ID of 1st satellite used for fix
               4) ID of 2nd satellite used for fix
               ...
               14) ID of 12th satellite used for fix
               15) PDOP in meters
               16) HDOP in meters
               17) VDOP in meters
               18) Checksum
            </summary>
            <param name="nmeaSentence">The nmea sentence.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.ProcessGPGSV(System.String)">
            <summary>
            Processes the GPGSV.
            GSV Satellites in view
               1 2 3 4 5 6 7 n
               | | | | | | | |
               $--GSV,x,x,x,x,x,x,x,...*hh
               1) total number of messages
               2) message number
               3) satellites in view
               4) satellite number
               5) elevation in degrees
               6) azimuth in degrees to true
               7) SNR in dB
               more satellite infos like 4)-7)
               n) Checksum
            </summary>
            <param name="nmeaSentence">The nmea sentence.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.ProcessGPGLL(System.String)">
            <summary>
            Processes the GPGLL.
            GLL Geographic Position Latitude/Longitude
               1 2 3 4 5 6 7
               | | | | | | |
               $--GLL,llll.ll,a,yyyyy.yy,a,hhmmss.ss,A*hh
               1) Latitude
               2) N or S (North or South)
               3) Longitude
               4) E or W (East or West)
               5) Time (UTC)
               6) Status A - Data Valid, V - Data Invalid
               7) Checksum
            </summary>
            <param name="nmeaSentence">The nmea sentence.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.NmeaParser.ProcessGPVTG(System.String)">
            <summary>
            Processes the GPVTG.
            VTG Track Made Good and Ground Speed
               1 2 3 4 5 6 7 8 9
               | | | | | | | | |
               $--VTG,x.x,T,x.x,M,x.x,N,x.x,K*hh
               1) Track Degrees
               2) T = True
               3) Track Degrees
               4) M = Magnetic
               5) Speed Knots
               6) N = Knots
               7) Speed Kilometers Per Hour
               8) K = Kilometres Per Hour
               9) Checksum
            </summary>
            <param name="nmeaSentence">The nmea sentence.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Nmea.Satellite">
            <summary>
            GPS Satellite information
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.Satellite.Id">
            <summary>
            the PRN of the satellite.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.Satellite.Snr">
            <summary>
            the SNR of the satellite.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.Satellite.Elevation">
            <summary>
            The Elevation, in degree, maxiume 90.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.Satellite.Azimuth">
            <summary>
            The azimuth of the satellite. true from 000 to 359.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.Nmea.Satellite.Active">
            <summary>
            is the satellite active.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.Satellite.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Location.Nmea.Satellite"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Nmea.Satellite.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Location.Orientation">
            <summary>
            The Orientation class represents the physical orientation of the terminal.
            Orientation is described by azimuth to north (the horizontal pointing 
            direction), pitch (the vertical elevation angle) and roll (the rotation of 
            the terminal around its own longitudinal axis). 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Location.Orientation.#ctor(System.Single,System.Boolean,System.Single,System.Single)">
            <summary>
            Constructs a new Orientation object with the compass azimuth, pitch and 
            roll parameters specified.
            </summary>
            <remarks>
            The values are expressed in degress using floating point values.
            If the pitch or roll is undefined, the parameter shall be given as 
            Float.NaN.
            </remarks>
            <param name="azimuth">The compass azimuth relative to true or magnetic north. 
                    Valid range: [0.0, 360.0). </param>
            <param name="isMagnetic">a boolean stating whether the compass azimuth is 
                   given as relative to the magnetic field of the Earth (=true) or to
                   true north and gravity (=false)</param>
            <param name="pitch">pitch the pitch of the terminal in degrees, valid range: 
                   [-90.0, 90.0]</param>
            <param name="roll">roll the roll of the terminal in degrees, valid range: 
                    [-180.0, 180.0)</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.Orientation.IsOrientationMagnetic">
            <summary>
            Returns a boolean value that indicates whether this Orientation is 
            relative to the magnetic field of the Earth or relative to true north 
            and gravity. 
            </summary>
            <remarks>
            If this method returns true, the compass azimuth and pitch 
            are relative to the magnetic field of the Earth. If this method returns 
            false, the compass azimuth isrelative to true north and pitch is relative
            to gravity. 
            </remarks>
            <returns>
            	true if this Orientation is relative to the magnetic field of 
            the Earth, false if this Orientation is relative to true north and 
            gravity.
            </returns>
        </member>
        <member name="P:Mapdigit.Gis.Location.Orientation.CompassAzimuth">
            <summary>
            Returns the terminal's horizontal compass azimuth in degrees relative 
            to either magnetic or true north. 
            </summary>
            <remarks>
            The value is always in the range 
            [0.0, 360.0) degrees. The isOrientationMagnetic() method indicates 
            whether the returned azimuth is relative to true north or magnetic north.
            </remarks>
        </member>
        <member name="P:Mapdigit.Gis.Location.Orientation.Pitch">
            <summary>
            Returns the terminal's tilt in degrees defined as an angle in the 
            vertical plane orthogonal to the ground, and through the longitudinal 
            axis of the terminal. 
            </summary>
            <remarks>
            The value is always in the range [-90.0, 90.0] 
            degrees. A negative value means that the top of the terminal screen is 
            pointing towards the ground. 
            </remarks>
        </member>
        <member name="P:Mapdigit.Gis.Location.Orientation.Roll">
            <summary>
            Returns the terminal's rotation in degrees around its own longitudinal 
            axis. The value is always in the range [-180.0, 180.0) degrees. 
            </summary>
            <remarks>
            A negative value means that the terminal is orientated anti-clockwise 
            from its default orientation, looking from direction of the bottom of 
            the screen. 
            </remarks>
        </member>
        <member name="T:Mapdigit.Gis.Location.QualifiedCoordinates">
            <summary>
            The QualifiedCoordinates class represents coordinates as
            latitude-longitude-altitude values that are associated with an accuracy
            value.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Location.QualifiedCoordinates._horizontalAccuracy">
            The horizontal accuracy of this location result in meters. 
            Double.Nan can be used to indicate that the accuracy is not 
            known. Must be greateror equal to 0.
        </member>
        <member name="F:Mapdigit.Gis.Location.QualifiedCoordinates._verticalAccuracy">
            The vertical accuracy of this location result in meters. 
            Double.Nan can be used to indicate that the accuracy is not
            known. Must be greater or equal to 0
        </member>
        <member name="M:Mapdigit.Gis.Location.QualifiedCoordinates.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a new QualifiedCoordinates object with the values
            specified. The latitude and longitude parameters are expressed in degrees
            using floating point values. The degrees are in decimal values (rather
            than minutes/seconds).
            </summary>
            <remarks>
            The coordinate values always apply to the WGS84 datum.
            
            The Double.Nan value can be used for altitude to indicate 
            that altitude is not known.
            </remarks>
            <param name="latitude">the latitude of the location. Valid range: [-90.0,
                   90.0]. Positive values indicate northern latitude and negative
                   values southern latitude.</param>
            <param name="longitude">the longitude of the location. Valid range: [-180.0,
                   180.0). Positive values indicate eastern longitude and negative
                   values western longitude</param>
            <param name="altitude">the altitude of the location in meters, defined as
                   height above WGS84 ellipsoid. Double.Nan can be used 
                   to indicate that altitude is not known.</param>
            <param name="horizontalAccuracy">the horizontal accuracy of this location
                   result in meters. Double.Nan can be used to indicate 
                   that the accuracy is not known. Must be greater or equal to 0.</param>
            <param name="verticalAccuracy">the vertical accuracy of this location result
                   in meters. Double.Nan can be used to indicate that the
                   accuracy is not known. Must be greater or equal to 0.</param>
        </member>
        <member name="M:Mapdigit.Gis.Location.QualifiedCoordinates.ToString">
            <summary>
            Provides a string representation of the qualified coordinates.
            </summary>
            <returns>
            A string such as "79.32N 169.8E 25.7m ?.8mH ?.7mV" where the
                    words are the latitude, longitude, altitude (in meters),
                    horizontal accuracy (in meters), and vertical accuracy (in
                    meters).
            </returns>
        </member>
        <member name="P:Mapdigit.Gis.Location.QualifiedCoordinates.HorizontalAccuracy">
            <summary>
            Returns the horizontal accuracy of the location in meters (1-sigma
            standard deviation). 
            </summary>
            <remarks>
            A value of Double.Nan means the 
            horizontal accuracy could not be determined.
            
            The horizontal accuracy is the RMS (root mean square) of east accuracy
            (latitudinal error in meters, 1-sigma standard deviation), north accuracy
            (longitudinal error in meters, 1-sigma).
            </remarks>
        </member>
        <member name="P:Mapdigit.Gis.Location.QualifiedCoordinates.VerticalAccuracy">
            <summary>
            the accuracy of the location in meters in vertical direction
            (orthogonal to ellipsoid surface, 1-sigma standard deviation). A value of
            Double.Nan means the vertical accuracy could not be 
            determined.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.MapBrush">
            <summary>
            Map brush used to paint a map region object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapBrush.Pattern">
            <summary>
            the pattern of the brush.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapBrush.ForeColor">
            <summary>
            the fore color of the brush.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapBrush.BackColor">
            <summary>
            the backcolor of the brush.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapBrush.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapBrush"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapBrush.#ctor(Mapdigit.Gis.MapBrush)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapBrush"/> class.
            </summary>
            <param name="brush">the map pen copied from</param>
        </member>
        <member name="M:Mapdigit.Gis.MapBrush.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapBrush"/> class.
            </summary>
            <param name="pattern">the pattern of the brush</param>
            <param name="forecolor">the forecolor of the brush</param>
            <param name="backcolor">the backcolor of the brush</param>
        </member>
        <member name="T:Mapdigit.Gis.MapCollection">
            <summary>
            Class MapCollection stands for a collection of map objects.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.MapObject">
            <summary>
            Base class of all map objects.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeUnknown">
            <summary>
            Unkown Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeNone">
            <summary>
            None Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypePoint">
            <summary>
            Point Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeMultiPoint">
            <summary>
            multi point Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypePline">
            <summary>
            Pline Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeMultiPline">
            <summary>
            multi pline Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeReginRegion">
            <summary>
            region Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeMultiRegion">
            <summary>
            multi region Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeCollection">
            <summary>
            Collection Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeText">
            <summary>
            text Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeRoad">
            <summary>
            ROAD Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeDirection">
            <summary>
            Direction Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeRoute">
            <summary>
            Route Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.TypeRouteStep">
            <summary>
            route step Object type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.Crlf">
            <summary>
            Carriage return.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.MapInfoId">
            <summary>
            The MapInfo ID of the map object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.Name">
            <summary>
            The name of the map object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.ObjectNote">
            <summary>
            any notes related to this object
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.Bounds">
            <summary>
            The out bound of the map object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.mapObjectType">
            <summary>
            The type of the map object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.CacheAccessTime">
            <summary>
            The Time for cache
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapObject.Highlighted">
            <summary>
            indicate Highlighted or not
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapObject.#ctor(Mapdigit.Gis.MapObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapObject"/> class.
            </summary>
            <param name="mapObject">map object copy from.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapObject"/> class.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.MapObject.Bound">
            <summary>
            the out bound of the map object.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.MapObject.MapObjectType">
            <summary>
            Gets the type of the map object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapCollection.MultiPoint">
            <summary>
            The multiPoint part of the collection.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapCollection.MultiPline">
            <summary>
            The multiPline part of the collection.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapCollection.MultiRegion">
            <summary>
            The multiRegion part of the collection.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.#ctor(Mapdigit.Gis.MapCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapCollection"/> class.
            </summary>
            <param name="mapCollection">The map collection coped from.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapCollection"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.GetMultiPoint">
            <summary>
            Get the multipoint part the collection.
            </summary>
            <returns>the multipoint part the collection</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.SetMultiPoint(Mapdigit.Gis.MapMultiPoint)">
            <summary>
            Set the multipoint part the collection.
            </summary>
            <param name="multiPoint">the multipoint part the collection</param>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.GetMultiPline">
            <summary>
            Get the MultiPline part the collection.
            </summary>
            <returns>the MultiPline part the collection</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.SetMultiPline(Mapdigit.Gis.MapMultiPline)">
            <summary>
            Set the multiPline part the collection.
            </summary>
            <param name="multiPline">the multiPline part the collection.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.GetMultiRegion">
            <summary>
            Get the multiRegion part the collection.
            </summary>
            <returns>the multiRegion part the collection</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.SetMultiRegion(Mapdigit.Gis.MapMultiRegion)">
            <summary>
            Set the multiRegion part the collection.
            </summary>
            <param name="multiRegion">the multiRegion part the collection</param>
        </member>
        <member name="M:Mapdigit.Gis.MapCollection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapDirection">
            <Summary>
            This class is used to store driving directions results
            </Summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirection.GeoCodes">
            <summary>
            Waypoints along the direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirection.Distance">
            <summary>
            total Distance in meters.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirection.Duration">
            <summary>
            total Duration in seconds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirection.Polyline">
            <summary>
             the Polyline of this direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirection.Routes">
            <summary>
            total Routes included in this direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirection.Summary">
            <summary>
            Summary information about this direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirection.Status">
            <summary>
            Response status of this query.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.#ctor">
            <summary>
            Initializes a new instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.#ctor(Mapdigit.Gis.MapDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapDirection"/> class.
            </summary>
            <param name="mapDirection">The map direction copied from.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.NewRoute">
            <summary>
            Create a new MapRoute object.
            </summary>
            <returns>a new MapRoute object</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.CalculateMapStepDirections">
            <summary>
            calculate map step direction based on geographical shape of the route.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetMapStepIndexByPointIndex(System.Int32)">
            <summary>
            Get the map step by the point index in the polyline.
            </summary>
            <param name="pointIndex"> point index in the polyline</param>
            <returns>the map step object contains the point</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetMapRouteStepIndexByPointIndex(System.Int32)">
            <summary>
            Get the map route step by the point index in the polyline.
            </summary>
            <param name="pointIndex">point index in the polyline.</param>
            <returns>GeoPoint object, where x is the route index, y is the step index</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetMapStepCount">
            <summary>
            get total map step counts for this direction.
            </summary>
            <returns>total map step count</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.FirstMapStep">
            <summary>
            return the first map step.
            </summary>
            <returns>the first map Step;</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.LastMapStep">
            <summary>
            return the last map step.
            </summary>
            <returns>the last map step.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.NextMapStep">
            <summary>
            return next map step.
            </summary>
            <returns>next map step or null if reaches the end of the direction.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.PrevMapStep">
            <summary>
            return prev map step.
            </summary>
            <returns>prve map step or null if reaches the start of the direction.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetMapStepAt(System.Int32)">
            <summary>
            get map step at given index
            </summary>
            <param name="index">the index of the map step.</param>
            <returns>map step object or null if out of boundary</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.JumpToStep(Mapdigit.Gis.MapStep)">
            <summary>
            jump to given map step on the direction.
            </summary>
            <param name="mapStep">The map step.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetRemainingDistance(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Get the remaining distance of this route.
            </summary>
            <param name="location"> current location</param>
            <returns>the distance (in meters) ,-1 invalid input</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetRemainingDistance(Mapdigit.Gis.Geometry.GeoLatLng,System.Int32,System.Int32)">
            <summary>
            Get the remaining distance along given step.
            </summary>
            <param name="location"> current location.</param>
            <param name="routeIndex">the index of the map route</param>
            <param name="stepIndex">Indexof the map step.</param>
            <returns>the distance (in meters)></returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetMapHeadDirectionCommandTypeByBearing(System.Double)">
            <summary>
            Get head command type based on bearing
            </summary>
            <param name="bearing">the bearing the routes</param>
            <returns>the head command type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirection.GetMapDirectionCommandTypeByBearing(System.Double)">
            <summary>
            Get direction type based on bearing of the route.
            </summary>
            <param name="bearing">bearing of the route step</param>
            <returns>the direction command type</returns>
        </member>
        <member name="T:Mapdigit.Gis.MapDirectionCommandElement">
            <summary>
            Driving diretion command element.A direction for a MapStep consists at most
            5 direction command elements and has following syntax
            [Command]-[Adj]-[Road Name]-[Adj]-[Road Name].
            loosely speaking, 3 elements is enough for a whole command.
            [Command]-[Road Name]-[Road Name]
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementNone">
            <summary>
            no elements.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementRoadName">
            <summary>
            Road name elements.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementRoadNameRoundabout">
            <summary>
            Roundaboout is treated as special road name in the command syntax.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementConjuction">
            <summary>
            Conjunction element. Conjunction elements is just used for elaboration.
            Conjunctions is  onto, on ,towards etc.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementCommand">
            <summary>
            Command element.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementExtentionEntering">
            <summary>
            extenstion. entering
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementExtentionGoThroughRoundabout">
            <summary>
            extenstion. go through how many roundabout.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.FromRoadConjunction">
            <summary>
             From road conjuction index in array
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.FromRoadName">
            <summary>
            From road name index in array
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.DirectionCommand">
            <summary>
            Direction command type index in array
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ToRoadConjunction">
            <summary>
            To road conjuection index in array.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ToRoadName">
            <summary>
            To road name index in array.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ExtensionEntering">
            <summary>
            Extention (entering) index in array.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ExtensionGoThroughRoundabout">
            <summary>
            Extension(go through .. roundabout) index in array.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.Description">
            <summary>
            Description.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.ElementType">
            <summary>
            Element type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.DirectionCommandType">
            <summary>
            Direction command type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandElement.RoadProperty">
            <summary>
            road property ,toll road or partial toll road.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandElement.#ctor(Mapdigit.Gis.MapDirectionCommandElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapDirectionCommandElement"/> class.
            </summary>
            <param name="element"> the element object copied from.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandElement.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapDirectionCommandElement"/> class.
            </summary>
            <param name="elementType">Type of the element.</param>
            <param name="description">The description.</param>
        </member>
        <member name="T:Mapdigit.Gis.MapDirectionCommandType">
            <summary>
            Driving diretion types.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandInvalid">
            <summary>
            Invalid direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandNoTurn">
            <summary>
            go straight ahead 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandBearLeft">
            <summary>
            turn slightly left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTurnLeft">
            <summary>
            turn left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandSharpLeft">
            <summary>
            turn sharply left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandUTurn">
            <summary>
            U turn.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandSharpRight">
            <summary>
            turn sharply right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTurnRight">
            <summary>
            turn right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandBearRight">
            <summary>
            turn slightly right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandMerge">
            <summary>
            road merge command
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandKeepLeft">
            <summary>
            keep left at the fork to continue
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandKeepRight">
            <summary>
            keep right at the fork to continue
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandReachDestination">
            <summary>
            reach the destination.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout1Exit">
            <summary>
            round about 1st exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout2Exit">
            <summary>
            round about 2nd exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout3Exit">
            <summary>
            round about 3rd exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout4Exit">
            <summary>
            round about 4th exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout5Exit">
            <summary>
            round about 5th exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout6Exit">
            <summary>
            round about 6th exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout7Exit">
            <summary>
            round about 7th exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout8Exit">
            <summary>
            round about 8th exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout9Exit">
            <summary>
            round about 9th exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandRoundabout10Exit">
            <summary>
            round about 10th exit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandEnterHighway">
            <summary>
            enter highway.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandEnterHighwayLeft">
            <summary>
            enter highway on the left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandEnterHighwayRight">
            <summary>
            enter highway on the right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandLeaveHighway">
            <summary>
            exit the highway
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandLeaveHighwayLeft">
            <summary>
            exit the highway on the left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandLeaveHighwayRight">
            <summary>
            exit the highway on the right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionN">
            <summary>
            start command direction, head north direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionNe">
            <summary>
            start command direction, head north east direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionE">
            <summary>
            start command direction, head east direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionSe">
            <summary>
            start command direction, head south east direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionS">
            <summary>
            start command direction, head south direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionSw">
            <summary>
            start command direction, head south west direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionW">
            <summary>
            start command direction, head west direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandHeadDirectionNw">
            <summary>
            start command direction, head north west direction.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake1Left">
            <summary>
            take the 1st left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake2Left">
            <summary>
            take the 2nd left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake3Left">
            <summary>
            take the 3rd left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake4Left">
            <summary>
            take the 4th left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake5Left">
            <summary>
            take the 5th left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake6Left">
            <summary>
            take the 6th left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake7Left">
            <summary>
            take the 7th left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake8Left">
            <summary>
            take the 8th left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake9Left">
            <summary>
            take the 9th left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake1Right">
            <summary>
            take the 1st right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake2Right">
            <summary>
            take the 2nd right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake3Right">
            <summary>
            take the 3rd right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake4Right">
            <summary>
            take the 4th right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake5Right">
            <summary>
            take the 5th right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake6Right">
            <summary>
            take the 6th right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake7Right">
            <summary>
            take the 7th right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake8Right">
            <summary>
            take the 8th right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandTake9Right">
            <summary>
            take the 9th right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandDestinationOnTheLeft">
            <summary>
            destination on the left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.CommandDestinationOnTheRight">
            <summary>
            destination on the right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapDirectionCommandType.Type">
            <summary>
            direction type.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.#ctor(Mapdigit.Gis.MapDirectionCommandType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapDirectionCommandType"/> class.
            </summary>
            <param name="direction">T the direction object copied from</param>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapDirectionCommandType"/> class.
            </summary>
            <param name="type">the direction type.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.IsRoundAbout">
            <summary>
            Check if it's round about.
            </summary>
            <returns>
            	true,it's roundabout.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.IsJunction">
            <summary>
            Check if a junction command
            </summary>
            <returns>
            	true,it's a junction.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.IsEnterHighway">
            <summary>
            Check if a enter highway command
            </summary>
            <returns>
            	true,it's a enter highway command.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.IsLeaveHighway">
             <summary>
            Check if a leave highway command
             </summary>
             <returns>
             	true,it's a leave highway command.
             </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.IsStart">
            <summary>
            Check if a start command
            </summary>
            <returns>
            	true,it's a a start command.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.IsEnd">
            <summary>
            Check if a end command
            </summary>
            <returns>
            	true,it's a a end command.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.GetStringFormat(System.Int32)">
            <summary>
            Gets the string format.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.MapDirectionCommandType.ToString">
            <summary>
            to string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.MapMultiPline">
            <summary>
            Class MapMultiPline stands for map plines’ collection.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiPline.PenStyle">
            <summary>
            the pen style of the pline.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiPline.Plines">
            <summary>
            the geo information for the pline object.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPline.#ctor(Mapdigit.Gis.MapMultiPline)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapMultiPline"/> class.
            </summary>
            <param name="multiPline">The multi pline coped from.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapMultiPline"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPline.GetPenType">
            <summary>
            Get the pen type of the map pline.
            </summary>
            <returns>the pen type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPline.SetPenType(Mapdigit.Gis.MapPen)">
            <summary>
            Set the pen type of the map point.
            </summary>
            <param name="mapPen">the pen type.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPline.GetPlines">
            <summary>
            Get the GeoPolyline of the map MultiPline.
            </summary>
            <returns>the GeoPolyline object.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPline.SetPlines(Mapdigit.Gis.Geometry.GeoPolyline[])">
            <summary>
            Set GeoPolyline array of the map MultiPline.
            </summary>
            <param name="plines">the GeoPolyline object array.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPline.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapMultiPoint">
            <summary>
             Class MapMultiPoint stands for a map points collection.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiPoint.SymbolType">
            <summary>
             The symbol type of the map point.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiPoint.Points">
            <summary>
            The location of the map point.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPoint.#ctor(Mapdigit.Gis.MapMultiPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapMultiPoint"/> class.
            </summary>
            <param name="mapPoints">The map points.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapMultiPoint"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPoint.GetSymbolType">
            <summary>
            Get the symbol type of the map point.
            </summary>
            <returns>the symbol type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPoint.SetSymbolType(Mapdigit.Gis.MapSymbol)">
            <summary>
            Set the symbol type of the map point.
            </summary>
            <param name="symbol">symbol the symbol type</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPoint.GetPoints">
            <summary>
            Get the location of the map points.
            </summary>
            <returns>the location array</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPoint.SetPoint(Mapdigit.Gis.Geometry.GeoLatLng[])">
            <summary>
            Set the location of the map points.
            </summary>
            <param name="pts">the location</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapMultiRegion">
            <summary>
            Class MapMultiRegion stands for map regions' collection.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiRegion.PenStyle">
            <summary>
            the pen style of the region.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiRegion.BrushStyle">
            <summary>
            the brush style of the region.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiRegion.Regions">
            <summary>
            the geo information for the region object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapMultiRegion.CenterPt">
            <summary>
            the center of the region.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.#ctor(Mapdigit.Gis.MapMultiRegion)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapMultiRegion"/> class.
            </summary>
            <param name="multiRegion">The multi region.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapMultiRegion"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.GetPenType">
            <summary>
            Get the pen type of the map region
            </summary>
            <returns>the pen type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.SetPenType(Mapdigit.Gis.MapPen)">
            <summary>
            Set the pen type of the map point.
            </summary>
            <param name="mapPen"> the pen type</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.GetBrushType">
            <summary>
            Get the brush type of the map region.
            </summary>
            <returns>the brush type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.SetPenType(Mapdigit.Gis.MapBrush)">
            <summary>
            Set the brush type of the map region.
            </summary>
            <param name="mapBrush">the brush type.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.GetRegions">
            <summary>
            Get the GeoPolygon of the map Region.
            </summary>
            <returns>the GeoPolygon object</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.SetRegions(Mapdigit.Gis.Geometry.GeoPolygon[])">
            <summary>
            Set GeoPolygon array of the map Region.
            </summary>
            <param name="regions">the GeoPolygon object array.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapMultiRegion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapNoneObject">
            <summary>
            Class MapNoneObject stands for a map object without geo info.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapNoneObject.#ctor(Mapdigit.Gis.MapObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapNoneObject"/> class.
            </summary>
            <param name="noneObject">The none object.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapNoneObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapNoneObject"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapNoneObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapPen">
            <summary>
            Map pen set the pen properties to draw a map object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapPen.Width">
            <summary>
            the Width of the pen.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapPen.Pattern">
            <summary>
            the pattern of the pen.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapPen.Color">
            <summary>
            the color of the pen.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapPen.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapPen"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapPen.#ctor(Mapdigit.Gis.MapPen)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapPen"/> class.
            </summary>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapPen.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapPen"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="color">The color.</param>
            <param name="pattern">The pattern.</param>
        </member>
        <member name="T:Mapdigit.Gis.MapPline">
            <summary>
            Class MapPline stands for a map pline object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapPline.PenStyle">
            <summary>
            the pen style of the pline.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapPline.Pline">
            <summary>
            the geo information for the pline object.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapPline.#ctor(Mapdigit.Gis.MapPline)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapPline"/> class.
            </summary>
            <param name="pline">The pline.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapPline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapPline"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapPline.GetPenType">
            <summary>
            Get the pen type of the map pline.
            </summary>
            <returns>the pen type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapPline.SetPenType(Mapdigit.Gis.MapPen)">
            <summary>
            Set the pen type of the map point.
            </summary>
            <param name="mapPen">the pen type.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapPline.GetPline">
            <summary>
            Get the GeoPolyline of the map Pline.
            </summary>
            <returns>the GeoPolyline object</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapPline.SetPline(Mapdigit.Gis.Geometry.GeoPolyline)">
            <summary>
            Set GeoPolyline of the map Pline.
            </summary>
            <param name="pline">the GeoPolyline object.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapPline.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapPoint">
            <summary>
            Class MapPoint stands for a point map oject.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapPoint.SymbolType">
            <summary>
            The symbol type of the map point.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapPoint.Point">
            <summary>
            The location of the map point.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapPoint.#ctor(Mapdigit.Gis.MapPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapPoint"/> class.
            </summary>
            <param name="mapPoint">The map point.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapPoint"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapPoint.GetSymbolType">
            <summary>
            Get the symbol type of the map point.
            </summary>
            <returns>the symbol type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapPoint.SetSymbolType(Mapdigit.Gis.MapSymbol)">
            <summary>
            Set the symbol type of the map point
            </summary>
            <param name="symbol">the symbol type</param>
        </member>
        <member name="M:Mapdigit.Gis.MapPoint.GetPoint">
            <summary>
            Get the location of the map point.
            </summary>
            <returns>the location</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapPoint.SetPoint(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Set the location of the map point.
            </summary>
            <param name="p">the location</param>
        </member>
        <member name="M:Mapdigit.Gis.MapPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapRegion">
            <summary>
            Class MapRegion stands for a map region object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRegion.PenStyle">
            <summary>
            the pen style of the region.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRegion.BrushStyle">
            <summary>
            the brush style of the region.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRegion.Region">
            <summary>
            the geo information for the region object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRegion.CenterPt">
            <summary>
            the center of the region.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.#ctor(Mapdigit.Gis.MapRegion)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapRegion"/> class.
            </summary>
            <param name="region">The region.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapRegion"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.GetPenType">
            <summary>
            Get the pen type of the map region.
            </summary>
            <returns>the pen type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.SetPenType(Mapdigit.Gis.MapPen)">
            <summary>
            Set the pen type of the map point.
            </summary>
            <param name="mapPen">the pen type</param>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.GetBrushType">
            <summary>
            Get the brush type of the map region.
            </summary>
            <returns>the brush type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.SetPenType(Mapdigit.Gis.MapBrush)">
            <summary>
            Set the brush type of the map region.
            </summary>
            <param name="mapBrush">The map brush.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.GetRegion">
            <summary>
            Get the GeoPolygon of the map Region.
            </summary>
            <returns>the GeoPolygon object</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.SetRegion(Mapdigit.Gis.Geometry.GeoPolygon)">
            <summary>
            Set GeoPolygon of the map Region.
            </summary>
            <param name="region">the GeoPolygon object</param>
        </member>
        <member name="M:Mapdigit.Gis.MapRegion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapRoute">
            <summary>
            Objects of this class store information about a single route in a 
            directions result. it should not directly create objects of this class. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRoute.Steps">
            <summary>
            Steps included in this route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRoute.StartGeocode">
            <summary>
            Start point of this route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRoute.EndGeocode">
            <summary>
            end point of this route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRoute.LastLatLng">
            <summary>
            last position of the route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRoute.Summary">
            <summary>
            Summary of this route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRoute.Distance">
            <summary>
            total Distance of the route in meters.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapRoute.Duration">
            <summary>
            total duration of the route in seconds.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapRoute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapRoute"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapRoute.NewStep">
            <summary>
            Create a new MapStep object.
            </summary>
            <returns>a new MapStep object</returns>
        </member>
        <member name="T:Mapdigit.Gis.MapStep">
            <summary>
            Objects of this class store information about a single step within a route
            in a directions result.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.FirstLatLng">
            <summary>
            First point of the step.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.FirstLocationIndex">
            <summary>
            the index of the first point in the polyline of given direciton.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.LastLatLng">
            <summary>
            last point of the step.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.LastLocationIndex">
            <summary>
            the index of the last point in the polyline of given direciton.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.Description">
            <summary>
            Description about this step.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.DescriptionEnglish">
            <summary>
            Description about this step in English.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.Duration">
            <summary>
            total duration of the step in seconds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.Distance">
            <summary>
            total Distance of the step in meters.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.Bearing">
            <summary>
            bearing [0-360)
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.CalculatedDirectionType">
            <summary>
            Direction type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.DirectionCommandElements">
            <summary>
            Direction command elements used to navigaion.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.CurrentRoadName">
            <summary>
            current road name.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapStep.Tag">
            <summary>
            tag related to this map steps ,like image or else.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapStep.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapStep"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapStep.GetDirectionCommandType">
            <summary>
             return direction command type if has any.
            </summary>
            <returns>the direction command type</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapStep.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.MapSymbol">
            <summary>
            Map symbol used to display a point.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapSymbol.Shape">
            <summary>
            the shape of the symbol.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapSymbol.Color">
            <summary>
            the color of the symbol.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapSymbol.Size">
            <summary>
            the size of the symbol.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapSymbol.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapSymbol"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapSymbol.#ctor(Mapdigit.Gis.MapSymbol)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapSymbol"/> class.
            </summary>
            <param name="symbol">The symbol.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapSymbol.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapSymbol"/> class.
            </summary>
            <param name="shape">the shape of the symbol</param>
            <param name="color">The color of the symbol.</param>
            <param name="size">The size of the symbol.</param>
        </member>
        <member name="T:Mapdigit.Gis.MapText">
            <summary>
            Class MapText stands for a text map object.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.Font">
            <summary>
            default font 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.Angle">
            <summary>
            The angle of the map text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.Point">
            <summary>
            The location of the map text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.BackColor">
            <summary>
            The back color of the map text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.ForeColor">
            <summary>
            The fore color of the map text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.Justification">
            <summary>
            The justification of the map text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.Spacing">
            <summary>
            The spacing of the map text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.LineType">
            <summary>
            The lineType of the map text.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.MapText.TextString">
            <summary>
            the text string of the text.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapText.#ctor(Mapdigit.Gis.MapText)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapText"/> class.
            </summary>
            <param name="mapText">The map text.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.MapText"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetAngle(System.Int32)">
            <summary>
            Set the angle of the map text
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetAngle">
            <summary>
            Gets the angle of the map text.
            </summary>
            <returns>the angle of the map text</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetBackColor(System.Int32)">
            <summary>
            Set the back color of the map text.
            </summary>
            <param name="backColor"> color the map text.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetBackColor">
            <summary>
            Get the back color of the map text.
            </summary>
            <returns>the back color of the map text</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetForeColor(System.Int32)">
            <summary>
            Set the fore color of the map text.
            </summary>
            <param name="foreColor">fore color the map text.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetForeColor">
            <summary>
            Get the foreColor of the map text.
            </summary>
            <returns>the foreColor of the map text</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetJustification(System.Int32)">
            <summary>
            Set the justification of the map text.
            </summary>
            <param name="justification">justification the map text</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetJustification">
            <summary>
            Get the justification of the map text.
            </summary>
            <returns>the justification of the map text.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetSpacing(System.Int32)">
            <summary>
            Set the spacing of the map text.
            </summary>
            <param name="spacing">The spacing the map text.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetSpacing">
            <summary>
            Get the spacing of the map text.
            </summary>
            <returns>the spacing of the map text.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetLineType(System.Int32)">
            <summary>
            Set the lineType of the map text.
            </summary>
            <param name="lineType">the lineType of the map text.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetLineType">
            <summary>
            Get the lineType of the map text.
            </summary>
            <returns>the lineType of the map text.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetTextString(System.String)">
            <summary>
            Set the textString of the map text.
            </summary>
            <param name="textString">The text string.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetTextString">
            <summary>
            Get the textString of the map text.
            </summary>
            <returns>the textString of the map text.</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.GetPoint">
            <summary>
            Get the location of the map point.
            </summary>
            <returns>the location</returns>
        </member>
        <member name="M:Mapdigit.Gis.MapText.SetPoint(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Set the location of the map point.
            </summary>
            <param name="p">The location.</param>
        </member>
        <member name="M:Mapdigit.Gis.MapText.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.INavigationListener">
            <summary>
            Navigation listener.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.INavigationListener.LocationUpdated(Mapdigit.Gis.Location.LocationProvider,Mapdigit.Gis.Location.Location,Mapdigit.Gis.Location.Location)">
            <summary>
            Called by the VirtualGPSDevice to which this listener is registered.
            </summary>
            <remarks>
            This method will be called periodically according to the interval defined
            when registering the listener to provide updates of the current location.
            </remarks>
            <param name="device">The device.</param>
            <param name="rawLocation">the raw location to which the event relates, i.e. the
            new position direction from Location Provider.</param>
            <param name="adjustLocation">the adjust location to which the event relates,it may be
            adjusted to put on the map direction.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.INavigationListener.NavigationDone">
            <summary>
             Navigation is done.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.INavigationListener.StatusChange(System.Int32,System.Int32)">
            <summary>
            Navigation status change happend.
            </summary>
            <param name="oldStatus">The old status.</param>
            <param name="newStatus">The new status.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.INavigationListener.ReroutingDone(System.String,Mapdigit.Gis.MapDirection)">
             <summary>
            rerouting is done.
             </summary>
             <param name="query">The query.</param>
             <param name="result">The result.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.INavigationListener.ReroutingProgress(System.Int32,System.Int32)">
            <summary>
            rerouing progress progress notification.
            </summary>
            <param name="bytes">the number of bytes has been read</param>
            <param name="total">total bytes to be read.Total will be zero if not available
            (content-length header not set)</param>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.IVoiceCommandListener">
            <summary>
            voice command listener.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.IVoiceCommandListener.VoiceCommandAction(Mapdigit.Gis.Navigation.VoiceCommandArg[],System.Boolean)">
            <summary>
            Indicates that a voice command event has occurred.
            </summary>
            <param name="args"> args voice command args.
            normally the args has 3 members as follows
            DISTANCE_XXX     current road name
            TURN             next road name.
            NEXT TURN        next road name.</param>
            <param name="optional">is the voice command optional or not</param>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.NavigationEngine">
            <summary>
            Navigation Engine. 
            </summary>
            <remarks>
            it include 3 threads , 1) location monitor thread used to
            monitor current location againest current navigation route if there's one
            and ajust raw location to the nearest position on the route. 2) voice command
            generate thread create upcoming voice command based on current step and
            location and put them to the voice command queue. 3) voice command processor
            pick up the voice command from the queue and notify the voice command listener.
            </remarks>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusIdle">
            <summary>
            idle status.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusRoutingStart">
            <summary>
            routing status.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusRoutingEnd">
            <summary>
            routing status.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusNavigatingOnRoadMode">
            <summary>
            navigating status on road mode
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusNavigatingOnRoadModePrepration">
            <summary>
            navigating status on road mode preparation (starting point)
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusNavigatingOffRoadMode">
            <summary>
             navigating status off road mode.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusDeviation">
            <summary>
            deviation status.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StatusPaused">
            <summary>
            navigation engine paused.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.CommandDistanceLimit">
            the distance limit of command is 50 meters.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.HighwaySpeedLimit">
            if current speed exceets 60kph, it's considered as highway.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.StartPointDeviationLimit">
            start time deviation Limit ,default is 100 meter.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.DeviationLimit">
            deviation limit in meter ,default is 20 meters.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.DeviationMaxTimes">
            deviation limit counter max time, default is 3 times.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.OfflineNavigationVoiceCommandInterval">
            offline navigation voice command interval.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandQueueSize">
            minium count of the command in the queue.
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.#ctor(Mapdigit.Gis.Location.LocationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.NavigationEngine"/> class.
            </summary>
            <param name="rawLocationProvider">The raw location provider.the raw location provider
            refer the GPS devices(either internal or bluetooth etc).</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.#ctor(Mapdigit.Gis.Location.LocationProvider,Mapdigit.Gis.Service.DigitalMapService)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.NavigationEngine"/> class.
            </summary>
            <param name="rawLocationProvider">The raw location provider.</param>
            <param name="digitalMapService">The digital map service.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.CancelNavigation">
            <summary>
            Cancels the navigation.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.StartNavigation(Mapdigit.Gis.MapDirection,Mapdigit.Gis.Navigation.WayPoint[])">
            <summary>
            Starts the navigation.
            </summary>
            <param name="mapDirection">the map direction used to navigation,it can be null,
            if it's null,navigation engine will try to use digital map service to
            find the diection from current location to all it's first way point.
            the last wayPoint is considered as the destination.</param>
            <param name="wayPointArray">The way point array.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.SetNavigationListener(Mapdigit.Gis.Navigation.INavigationListener)">
            <summary>
            Sets the navigation listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.SetVoiceCommandListener(Mapdigit.Gis.Navigation.IVoiceCommandListener)">
            <summary>
            Sets the voice command listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.SetNavigationListener(Mapdigit.Gis.Navigation.INavigationListener,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a LocationListener for updates at the defined interval. The listener
            will be called with updated location at the defined interval. The
            listener also gets updates when the availablilty state of the
            Device changes.
            Passing in -1 as the interval selects the default interval which is
            dependent on the used location method.
            Only one listener can be registered with each LocationProvider instance.
            Setting the listener replaces any possibly previously set listener.
            Setting the listener to null cancels the registration of any previously
            set listener.
            </summary>
            <param name="listener"> The listener to be registered. If set to null the
            registration of any previously set listener is cancelled.</param>
            <param name="interval">The interval in seconds. -1 is used for the default
             interval of this provider.</param>
            <param name="timeout">Timeout value in seconds, must be greater than 0.
            If the value is -1, the default timeout for this provider is used.</param>
            <param name="maxAge">Maximum age of the returned location in seconds,must
            be greater than 0 or equal to -1 to indicate that the default maximum
            age for this provider is used.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.StartSimulation(Mapdigit.Gis.MapDirection,System.Int32,System.Boolean)">
            <summary>
            Starts the simulation.
            </summary>
            <param name="mapDirectionSimu">The map direction simu.</param>
            <param name="speed">The speed.</param>
            <param name="isMile">is mile or not</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.PauseSimulation">
            <summary>
            Pauses the simulation.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.ResumeSimulation">
            <summary>
            Resumes the simulation.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.StopSimulation">
            <summary>
            Stops the simulation.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.SetAutoRerouting(System.Boolean)">
            <summary>
            Sets the auto rerouting.
            </summary>
            <param name="allow">true, allow rerouting</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.SetDistanceUnit(System.Boolean)">
            <summary>
            Set the distance unit. either use kilometer/meter or mile/yard
            </summary>
            <param name="useKilometer">true, uses kilometer otherwise uses miles</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.SetMoreVoiceCommand(System.Boolean)">
            <summary>
            set if the navigation engines give more or less voice command .
            default is false, then for each turn ,maximum 4 voice commands.
            </summary>
            <param name="moreVoiceCommand">true, navigation will give more voice command</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.GetState">
            <summary>
            Returns the current state of this LocationProvider. The return value
            shall be one of the availability status code constants defined in
            VirtualGPSDevice class.
            </summary>
            <returns>the availability state of this device.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.GetStatus">
            <summary>
            Returns the current state of this LocationProvider. The return value
            shall be one of the availability status code constants defined in
            VirtualGPSDevice class.
            </summary>
            <returns>the availability state of this device</returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.GetStatusString(System.Int32)">
            <summary>
            Gets the status string.
            </summary>
            <param name="status">The status.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.Pause">
            <summary>
            Pauses this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.Resume">
            <summary>
            Resumes this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.GetOffRoadNavigationTarget">
            <summary>
            Get the offline mode current target, if not found or in
            other status,return null;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.GetCurrentWalkOnRoute">
            <summary>
            Gets the current walk on route.
            </summary>
            <returns>current walk on route info</returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.Reset">
            <summary>
            reset the location provider
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceDistances">
            all distances used for voice command.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.OptionalVoiceDistances">
            all distances used for voice command which is Optional.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._wayPoints">
            all way points.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._firstRouting">
            if it's the first routing, will use all way points, otherwize only
            use the last way point as destination.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._rawLocationProvider">
            raw location provider.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._currentLocationProvider">
            current location provider.either be the raw or the simulated.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._digitalMapService">
            Digital map service,used to routing.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._engineStatus">
            current navigation engine status;
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._currentWalkOnRoute">
            current walk on route.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._pauseStatus">
            record engine status when paused /resumed.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._mapDirection">
            current map direction.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._simulatedDirectionLocationProvider">
            simulated location provider.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._navigationListener">
            navigation listener
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._locationMonitor">
            location monitor.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._voiceCommandGenerator">
            voice command generator.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._voiceCommandProcessor">
            voice command processor.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._allowRerouting">
            allow rerouting or not,default is true.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._useKilometer">
            default distance unit is km or mile
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._moreVoiceCommand">
            generate more voice command or not.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._voiceCommandQueue">
            voice command queue
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._voiceCommandListener">
            voice command listener.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._stopThread">
            stop the thead or not.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._pauseThread">
            use to control the pause/resume the thread.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._pauseObject">
            object use to signal pause/resume.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._locationMonitorThread">
            location monitor thread.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._voiceCommandGeneratorThread">
            voice command generator thread
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._voiceCommandProcessorThread">
            voice command processor thread
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._currentLatLng">
            current monitor lat/longitude.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._currentMonitorLocation">
            current location.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._previousLatLng">
            previous lat/longitude,temp used to avoid going backwards when adjust
            the location on route
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine._destinationLatLng">
            destination
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.CheckIfNeedPauseThread">
            <summary>
            check to see if need pause current thread.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.IsOptionalDistanceCommand(System.Int32)">
            <summary>
            check to see given distance command is optional or not.
            </summary>
            <param name="type">distance command type</param>
            <returns>
            	true is optional
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor">
            <summary>
            Location monitor class, used to monitor current location againest
             current routing direction.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.IRoutingListener">
            <summary>
            Callback when routing query is finished.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IRoutingListener.Done(System.String,Mapdigit.Gis.MapDirection)">
            <summary>
            Dones the specified query.
            </summary>
            <param name="query">message query context(string).</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IRoutingListener.ReadProgress(System.Int32,System.Int32)">
            <summary>
            Read progress notification. 
            </summary>
            <param name="bytes">the number of bytes has been read.</param>
            <param name="total">total bytes to be read.Total will be zero if not available 
            (content-length header not set)</param>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.EstimatedRoutingTime">
            estimated routing calculating time ,default is 5 seconds.
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.#ctor(Mapdigit.Gis.Navigation.NavigationEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor"/> class.
            </summary>
            <param name="navigationEngine">The navigation engine.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.Run">
            <summary>
            state mechine, used to monitor current location.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.NotifyVoiceCommandProcessor">
            <summary>
            Notifies the voice command processor.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.Done(System.String,Mapdigit.Gis.MapDirection)">
            <summary>
            Dones the specified query.
            </summary>
            <param name="query">message query context(string).</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.ReadProgress(System.Int32,System.Int32)">
            <summary>
            Read progress notification.
            </summary>
            <param name="bytes">the number of bytes has been read.</param>
            <param name="total">total bytes to be read.Total will be zero if not available
            (content-length header not set)</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.LocationUpdated(Mapdigit.Gis.Location.LocationProvider,Mapdigit.Gis.Location.Location)">
            <summary>
            Called by the VirtualGPSDevice to which this listener is registered.
            This method will be called periodically according to the interval defined
            when registering the listener to provide updates of the current location.
            </summary>
            <param name="device">The device.</param>
            <param name="location">the location to which the event relates, i.e. the
            new position.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.ProviderStateChanged(Mapdigit.Gis.Location.LocationProvider,System.Int32)">
            <summary>
            Called by the VirtualGPSDevice to which this listener is registered if
            the state of the VirtualGPSDevice has changed.
            These device state changes are delivered to the application as soon as
            possible after the state of a provider changes. The timing of these
            events is not related to the period of the location updates.
            If the application is subscribed to receive periodic location updates,
            it will continue to receive these regardless of the state of the
            VirtualGPSDevice. If the application wishes to stop receiving location
            updates for an unavailable provider, it should de-register itself from
            the provider.
            </summary>
            <param name="device">The device.</param>
            <param name="newState">The new state of the VirtualGPSDevice</param>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor._rawLocation">
            current location.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor._routingObject">
            use to sync routing result;
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor._counter">
            counter to count deviation
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor._currentPointIndex">
            current point index of the map directions' polyline.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor._lastTimeStamp">
            last time stamp used to detects deviation.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor._oldPointIndex">
            old point index, to avoid going backwards
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor._locationReady">
            used to drive location thread.
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.FlushCommandQueue">
            <summary>
            Flushes the command queue.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.GetEstimatedLocation(System.Int32)">
            <summary>
            calculate estimated location with current speed and time
            </summary>
            <param name="time">The time.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.ResetCurrentPointIndexBasedOnCurrentLocation">
            <summary>
            Resets the current point index based on current location.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.IsCurrentPointIndexOnTrack">
            <summary>
            Determines whether [is current point index on track].
            </summary>
            <returns>
            	<c>true</c> if [is current point index on track]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.LocationMonitor.AlignCurrentLocationOnTheRoad">
            <summary>
            align current location to the route,(route matching)
            and check to see if going backwards, it back word detected, keep the
            current location.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator">
            <summary>
            Voice command generator. it's driven by voice command processor.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.NormalDistanceLimit">
            the distance limit on normal road is 150 meters.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.MileToKm">
            mile to km;
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.#ctor(Mapdigit.Gis.Navigation.NavigationEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator"/> class.
            </summary>
            <param name="navigationEngine">The navigation engine.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.Run">
            <summary>
            Runs this instance.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator._generatorObject">
            notify generator.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator._nearestIndex">
            internal usage.
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.GetLocationAtDistance(Mapdigit.Gis.Navigation.WalkOnRoute,Mapdigit.Gis.MapStep,System.Double)">
            <summary>
            Get the location at given distance towards the end of the step.
            </summary>
            <param name="walkOnRoute">The walk on route.</param>
            <param name="mapStep">The map step.</param>
            <param name="distance">The distance.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.GetDistanceToEndOfStep(Mapdigit.Gis.Navigation.WalkOnRoute,Mapdigit.Gis.MapStep,System.Boolean)">
            <summary>
            get the distnace command to the end of the step.
            in revser order, for example , 250 --> 200 --> 150 -->100
            </summary>
            <param name="walkOnRoute">The walk on route.</param>
            <param name="mapStep">The map step.</param>
            <param name="isHighway">if set to <c>true</c> [is highway].</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.GetMaximumVoiceCommandIndex(System.Double,System.Boolean)">
            <summary>
            Gets the maximum index of the voice command.
            </summary>
            <param name="distance">The distance.</param>
            <param name="isMile">if set to <c>true</c> [is mile].</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.AddToVoiceCommandQueue(Mapdigit.Gis.Navigation.VoiceCommandArg[])">
            <summary>
            Adds to voice command queue.
            </summary>
            <param name="voiceCommandArgs">The voice command args.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandGenerator.GenerateOnRoadVoiceCommand">
            <summary>
            Generates the on road voice command.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor">
            <summary>
            Voice command processor. it's driven by the location monitor.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor.Run">
            <summary>
            thread used to create the voice command and put them to the queue.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor._currentLocation">
            current GPS location.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor._currentBearing">
            current bearing.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor._lastVoiceCommandTime">
            last voice command time;
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor._lastVoiceCommandDistance">
            last location of off road voice command.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor._reachedTargetCommandArgs">
            deviation command type.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor._deviationVoiceCommandArgs">
            deviation command type.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor._clearCommandQueue">
            clear the command Queue.
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor.NeedToGenerateCommand">
            <summary>
            Needs to generate command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor.GenerateDeviationVoiceCommand">
            <summary>
            Generates the deviation voice command.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor.GenerateOffRoadVoiceCommand">
            <summary>
            Generates the off road voice command.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor.SendOneOffRoadVoiceCommand(System.Double,System.Boolean)">
            <summary>
            Sends the one off road voice command.
            </summary>
            <param name="bearing">The bearing.</param>
            <param name="isClosing">if set to <c>true</c> [is closing].</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.NavigationEngine.VoiceCommandProcessor.GetOneVoiceCommandFromQueue">
            <summary>
            Gets the one voice command from queue.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider">
            <summary>
            Simulation location provider, it uses current route as the simulation source.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.StartSimulation(Mapdigit.Gis.MapDirection,System.Int32,System.Boolean)">
            <summary>
            Starts the simulation.
            </summary>
            <param name="mapDirection">The map direction.</param>
            <param name="speed">simulation driving speed  in kph or mile/h</param>
            <param name="isMile">is mile or not.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.PauseSimulation">
            <summary>
            Pauses the simulation.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.ResumeSimulation">
            <summary>
            Resumes the simulation.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.StopSimulation">
            <summary>
            Stops the simulation.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.SetDeviation(System.Int32)">
            <summary>
            set the deviation value, if not zero, the simulated location will have
            deviation with a random value with a circle with radius of value
            from it's exact location.
            </summary>
            <param name="value">the deviation value in meters.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.Reset">
            <summary>
            reset the location provider
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider.Run">
            <summary>
            Runs this instance.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._mapDirection">
            Map Direction for simulation.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._variation">
            allowed varation in meters,default is 0.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._simulationSpeed">
            Simulation speed, default is 50Kph.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._stopThread">
            use to control the stop the thread.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._currentPointIndex">
            current index of point in the polyline.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._isMile">
            Is the speed mile or not.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._pauseThread">
            use to control the pause/resume the thread.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._pauseObject">
            object use to signal pause/resume.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._thisThread">
            this thread.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.SimulatedDirectionLocationProvider._currentThreadIndex">
            thread index
        </member>
        <member name="T:Mapdigit.Gis.Navigation.VoiceCommandArg">
            <summary>
            voice command argument.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg.VoiceCommandType">
            <summary>
            voice command type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg.SubVoiceCommandType">
            <summary>
            sub voice command type ,give more detail about the voice command.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.#ctor(System.Int32,System.Int32,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.VoiceCommandArg"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="subType">Type of the sub.</param>
            <param name="arg">The arg.</param>
            <param name="optional"></param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.#ctor(System.Int32,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.VoiceCommandArg"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="arg">The arg.</param>
            <param name="optional">is the command optinal or not.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.#ctor(System.Int32,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.VoiceCommandArg"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="arg">The arg.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.GetCommandType">
            <summary>
            Gets the type of the command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.GetCalculatedCommandType">
            <summary>
            Gets the calculated type of the command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.GetCommandArg">
            <summary>
            Gets the command arg.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.IsOptional">
            <summary>
            Determines whether this instance is optional.
            </summary>
            <returns>
            	<c>true</c> if this instance is optional; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandArg.GetLocation">
            <summary>
            Gets the location.
            </summary>
            <returns>command location</returns>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg._optional">
            optioal or not
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg._commandArgument">
            voice command argument, normally it's road name (string).
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg._routeIndex">
            the index of the route.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg._stepIndex">
            the index of the step.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg._pointIndex">
            the index of the  point
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandArg._commandLocation">
            location where the command should be fired.
        </member>
        <member name="T:Mapdigit.Gis.Navigation.VoiceCommandType">
            <summary>
            define all voice command type. some command type is duplicated (as defined
            in MapDirectionCommandType).
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.AwayfromTarget">
            <summary>
            away from target.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.BearLeft">
            <summary>
            Bear Left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.BearRight">
            <summary>
            Bear Right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.ChangeMotoway">
            <summary>
            change the motoway.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.ClosingTarget">
            <summary>
            closing target.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Destination">
            <summary>
            reached destiation.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.DestinationOnTheLeft">
            <summary>
            destination on the left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.DestinationOnTheRight">
            <summary>
            destination on the right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance002K">
            <summary>
            Distance , 2 km or 2 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance003K">
            <summary>
            Distance , 3 km or 3 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance004K">
            <summary>
            Distance , 4 km or 4 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance005K">
            <summary>
            Distance , 5 km or 5 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance006K">
            <summary>
            Distance , 6 km or 6 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance007K">
            <summary>
            Distance , 7 km or 7 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance008K">
            <summary>
            Distance , 8 km or 8 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance009K">
            <summary>
            Distance , 9 km or 9 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance010K">
            <summary>
             Distance , 10 km or 10 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance015K">
            <summary>
            Distance , 15 km or 15 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance020K">
            <summary>
            Distance , 20 km or 20 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance025K">
            <summary>
            Distance , 25 km or 25 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance030K">
            <summary>
            Distance , 30 km or 30 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance035K">
            <summary>
            Distance , 35 km or 35 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance040K">
            <summary>
             Distance , 40 km or 40 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance045K">
            <summary>
            Distance , 45 km or 45 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance050">
            <summary>
            50 meters or 50 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance050K">
            <summary>
            Distance , 50 km or 50 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance055K">
            <summary>
            Distance , 55 km or 55 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance060K">
            <summary>
            Distance , 60 km or 60 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance065K">
            <summary>
            Distance , 65 km or 65 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance070K">
            <summary>
            Distance , 70 km or 70 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance075K">
            <summary>
            Distance , 75 km or 75 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance080K">
            <summary>
            Distance , 80 km or 80 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance085K">
            <summary>
             Distance , 85 km or 85 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance090K">
            <summary>
            Distance , 90 km or 90 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance095K">
            <summary>
             Distance , 95 km or 95 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance100">
            <summary>
            100 meters or 100 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1000">
            <summary>
            1000 meters or 1000 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance100K">
            <summary>
            Distance , 100 km or 100 mile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1100">
            <summary>
            1100 meters or 1100 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1200">
            <summary>
            1200 meters or 1200 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1300">
            <summary>
            1300 meters or 1300 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1400">
            <summary>
            1400 meters or 1400 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance150">
            <summary>
            150 meters or 150 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1500">
            <summary>
            1500 meters or 1500 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1600">
            <summary>
            1600 meters or 1600 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1700">
            <summary>
            1700 meters or 1700 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1800">
            <summary>
            1800 meters or 1800 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance1900">
            <summary>
            1900 meters or 1900 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance200">
            <summary>
            200 meters or 200 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance250">
            <summary>
            250 meters or 250 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance300">
            <summary>
            300 meters or 300 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance400">
            <summary>
            400 meters or 400 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance500">
            <summary>
            500 meters or 500 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance600">
            <summary>
            600 meters or 600 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance700">
            <summary>
            700 meters or 700 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance800">
            <summary>
            800 meters or 800 yards
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Distance900">
            <summary>
            900 meters or 900 yards.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.DistanceUnitMile">
            Distance unit is mile/yard ,the highest bit is 1.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.EnterMotoway">
            <summary>
             enter the motoway.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.EnterMotowayLeft">
            <summary>
             enter the motoway on the left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.EnterMotowayRight">
            <summary>
            enter the motoway on the right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.ExitMotoway">
            <summary>
            exit the motoway.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.ExitMotowayLeft">
            <summary>
            exit the motoway
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.ExitMotowayRight">
            <summary>
            exit the motoway.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.FollowMotoway">
            <summary>
            follow the moto way.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.GoStraight">
            <summary>
            Go straight.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadEast">
            <summary>
             head east.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadNorth">
            <summary>
            head north.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadNortheast">
            <summary>
            head north east.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadNorthwest">
            <summary>
            head north west.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadSouth">
            <summary>
            head south.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadSoutheast">
            <summary>
            head south east.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadSouthwest">
            <summary>
             head south west.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.HeadWest">
            <summary>
            head west.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.InMiddleMotoway">
            <summary>
            in the middle lane.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.KeepLeft">
            <summary>
            Keep left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.KeepRight">
            <summary>
            Keep right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.MakeUTurn">
            <summary>
            Make U turn.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.None">
            <summary>
            None command.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.ReachedTarget">
            <summary>
            Reached target.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake1Exit">
            <summary>
            take the first exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake2Exit">
            <summary>
            take the second exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake3Exit">
            <summary>
            take the third exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake4Exit">
            <summary>
             take the 4th exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake5Exit">
            <summary>
            take the 5th exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake6Exit">
            <summary>
             take the 6th exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake7Exit">
            <summary>
             take the 7th exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake8Exit">
            <summary>
            take the 8th exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTake9Exit">
            <summary>
            take the 9th exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.RoundaboutTakeExit">
            <summary>
             take the exit.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.SharpLeft">
            <summary>
            turn sharp left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.SharpRight">
            <summary>
            turn sharp right.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take1Left">
            <summary>
             take 1st left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take2Left">
            <summary>
            take 2nd left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take3Left">
            <summary>
            take 3rd left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take4Left">
            <summary>
            take 4th left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take5Left">
            <summary>
            take 5th left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take6Left">
            <summary>
            take 6th left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take7Left">
            <summary>
            take 7th left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take1Right">
            <summary>
            take 1st right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take2Right">
            <summary>
             take 2nd right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take3Right">
            <summary>
            take 3rd right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take4Right">
            <summary>
            take 4th right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take5Right">
            <summary>
            take 5th right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take6Right">
            <summary>
            take 6th right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take7Right">
            <summary>
            take 7th right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take8Left">
            <summary>
            take 8th left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take8Right">
            <summary>
            take 8th right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take9Left">
            <summary>
             take 9th left
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.Take9Right">
            <summary>
            take 9th right
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt01Oclock">
            <summary>
             Target at 1 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt02Oclock">
            <summary>
            Target at 2 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt03Oclock">
            <summary>
            Target at 3 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt04Oclock">
            <summary>
            Target at 4 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt05Oclock">
            <summary>
            Target at 5 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt06Oclock">
            <summary>
             Target at 6 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt07Oclock">
            <summary>
            Target at 7 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt08Oclock">
            <summary>
            Target at 8 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt09Oclock">
            <summary>
            Target at 9 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt10Oclock">
            <summary>
            Target at 10 o'clock direction
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt11Oclock">
            <summary>
             Target at 11 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TargetAt12Oclock">
            <summary>
            Target at 12 o'clock direction,
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TurnAround">
            <summary>
             turn around
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TurnLeft">
            <summary>
            turn left.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.VoiceCommandType.TurnRight">
            <summary>
            turn right.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandType.IsKilometer(System.Int32)">
            <summary>
            check to see if it the distance command uses kilometer/meters.
            </summary>
            <param name="commandType">the command typ</param>
            <returns>
            	uses kilometer/meter otherwise uses mile/yard
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandType.IsDistanceCommand(System.Int32)">
            <summary>
            check to see if it a disntace command.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	ture its a distance command.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.VoiceCommandType.GetStringFormat(System.Int32)">
            <summary>
            Get the string format
            </summary>
            <param name="type">voice command type</param>
            <returns>it's string format</returns>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.WalkOnRoute">
            <summary>
            Current position on the route (nearest).
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.WalkOnRoute.MapDirection">
            <summary>
            navigation route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.WalkOnRoute.RouteIndex">
            <summary>
            index of the route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.WalkOnRoute.StepIndex">
            <summary>
            index of the step of the route.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.WalkOnRoute.PointIndex">
            <summary>
            point index of the polyline.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WalkOnRoute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.WalkOnRoute"/> class.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Navigation.WayPoint">
            <summary>
            define a navigation way point, it defines the name and Lat/Lng pair.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.#ctor(System.String,System.String,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.WayPoint"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="comment">The comment.</param>
            <param name="latLng">atitude and longitude of the way point</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.#ctor(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.WayPoint"/> class.
            </summary>
            <param name="latLng">latitude and longitude of the way point</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.#ctor(System.String,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Navigation.WayPoint"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="latLng">latitude and longitude of the way point</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.GetComment">
            <summary>
            Ges the comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.GetLatLng">
            <summary>
            Get the latlng of the way point.
            </summary>
            <returns>the lat/lng pair of the way point</returns>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.SetName(System.String)">
            <summary>
            Sets the name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.SetComment(System.String)">
            <summary>
            Sets the comment.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.SetLatLng(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            set the lat/lng pair for the way point.
            </summary>
            <param name="latLng">The lat LNG.</param>
        </member>
        <member name="M:Mapdigit.Gis.Navigation.WayPoint.ToString">
            <summary>
            Returns a string that represents this instance.
            </summary>
            <returns>
            A string that represents this instance.
            </returns>
        </member>
        <member name="F:Mapdigit.Gis.Navigation.WayPoint._name">
            name of the way point.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.WayPoint._comment">
            some comment about the way point.
        </member>
        <member name="F:Mapdigit.Gis.Navigation.WayPoint._latLng">
            latitude and longitude of the way point.
        </member>
        <member name="T:Mapdigit.Gis.Projection.AzimuthalProjection">
            <summary>
            The superclass for all azimuthal map projections
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Projection.Projection">
            <summary>
            The superclass for all map projections
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.Transform(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Project a lat/long point (in degrees), producing a result in metres
            </summary>
            <param name="src">the lat/long point in degree.</param>
            <param name="dst">the projection coordinate on the plane in meters..</param>
            <returns>the projection coordinate on the plane in meters</returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.TransformRadians(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Project a lat/long point, producing a result in metres
            </summary>
            <param name="src">lat/long point in radians.</param>
            <param name="dst">the projection coordinate on the plane in meters.</param>
            <returns>the projection coordinate on the plane in meters.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.Project(System.Double,System.Double,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
             The method which actually does the projection. This should be overridden 
            for all projections.
            </summary>
            <param name="x">longitude</param>
            <param name="y">latitude</param>
            <param name="dst">The DST.</param>
            <returns>the projected coordinates in map</returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.Transform(System.Double[],System.Int32,System.Double[],System.Int32,System.Int32)">
            <summary>
            Project a number of lat/long points (in degrees), producing a result in metres
            </summary>
            <param name="srcPoints">the source point array of lat/long in degrees.</param>
            <param name="srcOffset">the start index of the source array.</param>
            <param name="dstPoints">the result array..</param>
            <param name="dstOffset">the start index of the result array..</param>
            <param name="numPoints">the number of points need to be transformed.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.TransformRadians(System.Double[],System.Int32,System.Double[],System.Int32,System.Int32)">
             <summary>
            Project a number of lat/long points (in radians), producing a result in metres
             </summary>
             <param name="srcPoints">the source point array of lat/long in degrees.</param>
             <param name="srcOffset">the start index of the source array.</param>
             <param name="dstPoints">the result array..</param>
             <param name="dstOffset">the start index of the result array..</param>
             <param name="numPoints">the number of points need to be transformed.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.InverseTransform(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Inverse-project a point (in metres), producing a lat/long result in degrees
            </summary>
            <param name="src">the point in meters on the plane map.</param>
            <param name="dst">the lat/long result in degrees.</param>
            <returns> the lat/long result in degrees.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.InverseTransformRadians(Mapdigit.Gis.Geometry.GeoPoint,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            Inverse-project a point (in metres), producing a lat/long result in radians
            </summary>
            <param name="src">the point in meters on the plane map.</param>
            <param name="dst">the lat/long result in degrees.</param>
            <returns> the lat/long result in degrees.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.ProjectInverse(System.Double,System.Double,Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            The method which actually does the inverse projection. This should be 
            overridden for all projections.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="dst">The DST.</param>
            <returns> the inverse transformed coordinates</returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.InverseTransform(System.Double[],System.Int32,System.Double[],System.Int32,System.Int32)">
            <summary>
            Inverse-project a number of points (in metres), producing 
            a lat/long result in degrees
            </summary>
            <param name="srcPoints">the source point array of lat/long in degrees.</param>
            <param name="srcOffset">the start index of the source array.</param>
            <param name="dstPoints">the result array..</param>
            <param name="dstOffset">the start index of the result array.</param>
            <param name="numPoints">the number of points need to be transformed.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.InverseTransformRadians(System.Double[],System.Int32,System.Double[],System.Int32,System.Int32)">
            <summary>
             Inverse-project a number of points (in metres), producing
            a lat/long result in radians
            </summary>
            <param name="srcPoints">the source point array of lat/long in degrees.</param>
            <param name="srcOffset">the start index of the source array.</param>
            <param name="dstPoints">the result array..</param>
            <param name="dstOffset">the start index of the result array.</param>
            <param name="numPoints">the number of points need to be transformed.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.InverseTransform(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Finds the smallest lat/long rectangle wholly inside the given view rectangle.
            This is only a rough estimate.
            </summary>
            <param name="r">The r.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.Transform(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Transform a bounding box. This is only a rough estimate.
            </summary>
            <param name="r">The r.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.IsConformal">
            <summary>
            Returns true if this projection is conformal
            </summary>
            <returns>
            	<c>true</c> if this instance is conformal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.IsEqualArea">
            <summary>
            Returns true if this projection is equal area
            </summary>
            <returns>
            	<c>true</c> if [is equal area]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.HasInverse">
            <summary>
             Returns true if this projection has an inverse
            </summary>
            <returns>
            	<c>true</c> if this instance has inverse; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.IsRectilinear">
            <summary>
            Returns true if lat/long lines form a rectangular grid for this projection
            </summary>
            <returns>
            	<c>true</c> if this instance is rectilinear; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.ParallelsAreParallel">
            <summary>
            Returns true if latitude lines are parallel for this projection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.Inside(System.Double,System.Double)">
            <summary>
            Returns true if the given lat/long point is visible in this projection
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetName(System.String)">
            <summary>
            Set the name of this projection.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetMinLatitude(System.Double)">
            <summary>
            Set the minimum latitude. This is only used for Shape clipping
            and doesn't affect projection.
            </summary>
            <param name="latitude">The min latitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMinLatitude">
            <summary>
            Get the minimum latitude.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetMaxLatitude(System.Double)">
            <summary>
             Set the maximum latitude. This is only used for Shape clipping
            and doesn't affect projection.
            </summary>
            <param name="latitude">The max latitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMaxLatitude">
            <summary>
            Gets the max latitude.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMaxLatitudeDegrees">
            <summary>
            Gets the max latitude in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMinLatitudeDegrees">
            <summary>
            Gets the min latitude in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetMinLongitude(System.Double)">
            <summary>
            Sets the min longitude.
            </summary>
            <param name="longitude">The min longitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMinLongitude">
            <summary>
            Gets the min longitude.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetMinLongitudeDegrees(System.Double)">
            <summary>
            Sets the min longitude in degrees.
            </summary>
            <param name="longitude">The min longitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMinLongitudeDegrees">
            <summary>
            Gets the min longitude in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetMaxLongitude(System.Double)">
            <summary>
            Sets the max longitude.
            </summary>
            <param name="longitude">The max longitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMaxLongitude">
            <summary>
            Gets the max longitude.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetMaxLongitudeDegrees(System.Double)">
            <summary>
            Sets the max longitude in degrees.
            </summary>
            <param name="longitude">The max longitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetMaxLongitudeDegrees">
            <summary>
            Gets the max longitude in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLatitude(System.Double)">
            <summary>
            Sets the projection latitude.
            </summary>
            <param name="latitude">The projection latitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLatitude">
            <summary>
            Gets the projection latitude.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLatitudeDegrees(System.Double)">
            <summary>
            Sets the projection latitude in degrees.
            </summary>
            <param name="latitude">The projection latitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLatitudeDegrees">
            <summary>
            Gets the projection latitude in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLongitude(System.Double)">
            <summary>
            Sets the projection longitude.
            </summary>
            <param name="longitude">The projection longitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLongitude">
            <summary>
            Gets the projection longitude.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLongitudeDegrees(System.Double)">
            <summary>
            Sets the projection longitude in degrees.
            </summary>
            <param name="longitude">The projection longitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLongitudeDegrees">
            <summary>
            Gets the projection longitude in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetTrueScaleLatitude(System.Double)">
            <summary>
            Sets the true scale latitude.
            </summary>
            <param name="latitude">The true scale latitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetTrueScaleLatitude">
            <summary>
            Gets the true scale latitude.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetTrueScaleLatitudeDegrees(System.Double)">
            <summary>
            Sets the true scale latitude in degrees.
            </summary>
            <param name="latitude">The true scale latitude.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetTrueScaleLatitudeDegrees">
            <summary>
            Gets the true scale latitude in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLatitude1(System.Double)">
            <summary>
            Sets the projection latitude1.
            </summary>
            <param name="latitude1">The projection latitude1.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLatitude1">
            <summary>
            Gets the projection latitude1.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLatitude1Degrees(System.Double)">
            <summary>
            Sets the projection latitude1 in degrees.
            </summary>
            <param name="latitude1">The projection latitude1.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLatitude1Degrees">
            <summary>
            Gets the projection latitude1 in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLatitude2(System.Double)">
            <summary>
            Sets the projection latitude2.
            </summary>
            <param name="latitude2">The projection latitude2.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLatitude2">
            <summary>
            Gets the projection latitude2.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetProjectionLatitude2Degrees(System.Double)">
            <summary>
            Sets the projection latitude2 in degrees.
            </summary>
            <param name="latitude2">The projection latitude2.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetProjectionLatitude2Degrees">
            <summary>
            Gets the projection latitude2 in degrees.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetFalseNorthing(System.Double)">
            <summary>
            Sets the false northing.
            </summary>
            <param name="northing">The false northing.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetFalseNorthing">
            <summary>
            Gets the false northing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetFalseEasting(System.Double)">
            <summary>
            Sets the false easting.
            </summary>
            <param name="easting">The false easting.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetFalseEasting">
            <summary>
            Get the false Easting in projected units.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetScaleFactor(System.Double)">
            <summary>
            Sets the scale factor.
            </summary>
            <param name="factor">The scale factor.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetScaleFactor">
            <summary>
            Gets the scale factor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetEquatorRadius">
            <summary>
            Gets the equator radius.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetFromMetres(System.Double)">
            <summary>
            Sets from metres.
            </summary>
            <param name="from">From metres.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetFromMetres">
            <summary>
            Gets from metres.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.SetEllipsoid(Mapdigit.Gis.Projection.Ellipsoid)">
            <summary>
            Sets the ellipsoid.
            </summary>
            <param name="ellips">The ellipsoid.</param>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.GetEllipsoid">
            <summary>
            Gets the ellipsoid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.Initialize">
            <summary>
            Initialize the projection. This should be called after setting
            parameters and before using the projection.
            This is for performance reasons as initialization may be expensive.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.NormalizeLongitude(System.Single)">
            <summary>
            Normalizes the longitude.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Projection.Projection.NormalizeLongitudeRadians(System.Double)">
            <summary>
            Normalizes the longitude radians.
            </summary>
            <param name="angle">The angle.</param>
            <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.minLatitude">
            The minimum latitude of the bounds of this projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.minLongitude">
            The minimum longitude of the bounds of this projection.
            This is relative to the projection centre.
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.maxLatitude">
            The maximum latitude of the bounds of this projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.maxLongitude">
            The maximum longitude of the bounds of this projection.
            This is relative to the projection centre.
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.projectionLatitude">
            The latitude of the centre of projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.projectionLongitude">
            The longitude of the centre of projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.projectionLatitude1">
            Standard parallel 1 (for projections which use it)
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.projectionLatitude2">
            Standard parallel 2 (for projections which use it)
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.scaleFactor">
            The projection scale factor
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.falseEasting">
            The false Easting of this projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.falseNorthing">
            The false Northing of this projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.trueScaleLatitude">
            The latitude of true scale. Only used by specific projections.
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.a">
            The equator radius
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.e">
            The eccentricity
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.es">
            The eccentricity squared
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.oneEs">
            1-(eccentricity squared)
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.roneEs">
            1/(1-(eccentricity squared))
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.ellipsoid">
            The ellipsoid used by this projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.spherical">
            True if this projection is using a sphere (es == 0)
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.newName">
            The name of this projection
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection.fromMetres">
            Conversion factor from metres to whatever units the projection uses.
        </member>
        <member name="F:Mapdigit.Gis.Projection.Projection._totalScale">
            The total scale factor = Earth radius * units
        </member>
        <member name="F:Mapdigit.Gis.Projection.AzimuthalProjection.NorthPole">
            <summary>
            North pole
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Projection.AzimuthalProjection.SouthPole">
            <summary>
            Sourth pole
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Projection.AzimuthalProjection.Equator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Projection.AzimuthalProjection.SetMapRadius(System.Double)">
            <summary>
            Sets the map radius.
            </summary>
            <param name="mapRadius">The map radius.</param>
        </member>
        <member name="T:Mapdigit.Gis.Projection.Ellipsoid">
            <summary>
            Ellipsoid class. A mathematical figure that approximates the shape of the
            Earth in form and size, and which is used as a reference surface for geodetic
            surveys. Used interchangeably with Spheriod.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Projection.MapMath.Sind(System.Double)">
            Degree versions of trigonometric functions
        </member>
        <member name="T:Mapdigit.Gis.Projection.OrthographicAzimuthalProjection">
            <summary>
            The Orthographic Azimuthal or Globe map projection.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Projection.ProjectionException">
            <summary>
            ProjectionException class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Projection.ProjectionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Projection.ProjectionException"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Projection.ProjectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Projection.ProjectionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine">
            <summary>
            Array tiled Map Tile Engine.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.TiledMapTileEngine">
            <summary>
            Base tiled Map Tile Engine.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTileEngine">
            <summary>
            Base map tile Engine.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.GetScreenOffsetX">
            <summary>
            the screen offset X
            </summary>
            <returns>screen offset x</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.GetScreenOffsetY">
            <summary>
            Gets the screen offset Y.
            </summary>
            <returns>screen offset y</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.ZoomIn">
            <summary>
            Increments zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.ZoomOut">
            <summary>
            Increments zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.PanDirection(System.Int32,System.Int32)">
            <summary>
            pan direction
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.SetScreenSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the screen.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.SetRoutePen(Mapdigit.Drawing.Pen)">
            <summary>
            Sets the route pen.
            </summary>
            <param name="routePen">The route pen.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.SetMapDrawingListener(Mapdigit.Gis.Raster.IMapDrawingListener)">
            <summary>
            Sets the map drawing listener.
            </summary>
            <param name="listener">The map drawing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.GetMapTileDownloadManager">
            <summary>
            Gets the map tile download manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.FromLatLngToScreenPixel(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            convert laititude,longitude pair to the coordinates on screen.
            </summary>
            <param name="latlng">The latlng.</param>
            <returns>x,y coordniate on screen</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.FromScreenPixelToLatLng(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            convert the coordinates on screen to laititude,longitude pair .
            </summary>
            <param name="pt">(x,y) coordinates on screen</param>
            <returns>the latitude,longitude position</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.GetScreenCenter">
            <summary>
            return the latitude,longitude of the screen center.
            </summary>
            <returns>the center of the screen in latitude,longititude pair.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.ClearMapCache">
            <summary>
            Clears the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.RestoreMapCache">
            <summary>
            Restores the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.SaveMapCache">
            <summary>
            Saves the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.Paint(Mapdigit.Gis.Drawing.IGraphics)">
            <summary>
            paint map to given graphics canvas.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.Paint(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            paint map to given canvas at given location.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.SetMapDirection(Mapdigit.Gis.MapDirection)">
            <summary>
            Sets the map direction.
            </summary>
            <param name="newDirection">The new direction.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.SetMapDirections(Mapdigit.Gis.MapDirection[])">
            <summary>
            Sets the map directions.
            </summary>
            <param name="newDirections">The new directions.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.ClearMapDirection">
            <summary>
            Clears the map direction.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.SetDownloadManager(Mapdigit.Gis.Raster.MapTileDownloadManager)">
            <summary>
            Sets the download manager.
            </summary>
            <param name="mapTileDownloadManager">The map tile download manager.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.DrawMapCanvas">
            <summary>
            Draws the map canvas.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.DrawUpdatedMapCanvas">
            <summary>
            Draws the updated map canvas.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileEngine.mapDrawingListener">
            Map drawing  listener.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileEngine._mapTileDownloadManager">
            Map tiles downloader
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.#ctor(System.Int32,System.Int32,Mapdigit.Gis.Raster.MapTileDownloadManager,Mapdigit.Gis.Raster.RasterMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileEngine"/> class.
            </summary>
            <param name="width">The width of the map.</param>
            <param name="height">The height of the map.</param>
            <param name="mapTileDownloadManager">The map tile download manager.</param>
            <param name="rasterMap">The raster map.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.NeedToGetNewMapImage">
            <summary>
            Needs to get new map image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileEngine.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.ClearMapCache">
            <summary>
            Clears the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.ClearMapDirection">
            <summary>
            Clears the map direction.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.RestoreMapCache">
            <summary>
            Restores the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.SaveMapCache">
            <summary>
            Saves the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.SetMapDirections(Mapdigit.Gis.MapDirection[])">
            <summary>
            Sets the map directions.
            </summary>
            <param name="newDirections">The new directions.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.SetMapDirection(Mapdigit.Gis.MapDirection)">
            <summary>
            Sets the map direction.
            </summary>
            <param name="newDirection">The new direction.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.SetDownloadManager(Mapdigit.Gis.Raster.MapTileDownloadManager)">
            <summary>
            Sets the download manager.
            </summary>
            <param name="downloadManager">The map tile download manager.</param>
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.imageDownloading">
            the downloding image.
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.tileDownloading">
            tile download image index.
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.mapTileImages">
            map tile array.
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.mapTileReadyListener">
            update one map tile handler
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.DrawMapTileInMapCanvas(Mapdigit.Gis.Raster.ImageTileIndex,Mapdigit.Gis.Drawing.IImage)">
            <summary>
            draw map cavns with given tile image.
            </summary>
            <param name="imageTileIndex">Index of the image tile.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.ClearAllMapTiles">
            <summary>
            Clears all map tiles.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.GetAvaiableMapTileIndex(Mapdigit.Gis.Raster.ImageTileIndex)">
            <summary>
            Gets the index of the avaiable map tile.
            </summary>
            <param name="imageTileIndex">Index of the image tile.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.GetCachedImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the cached image.
            </summary>
            <param name="mtype">The mtype.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.GetImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the image.
            </summary>
            <param name="mtype">The mtype.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.DrawTileDownloading(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            Draws the tile downloading.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="T:Mapdigit.Gis.Raster.IMapTileReadyListener">
            <summary>
            one map tile is downloaded.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.IMapTileReadyListener.Done(Mapdigit.Gis.Raster.ImageTileIndex,Mapdigit.Gis.Drawing.IImage)">
            <summary>
            indicate one map tile downloading is done.
            </summary>
            <param name="imageTileIndex">the index for givn map tile.</param>
            <param name="image">the image of given map tile.</param>
        </member>
        <member name="T:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile">
            <summary>
            Map tile class.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile._mapImage">
            the map canvas
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile._mapGraphics">
            Graphics Object for map canvas.
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile._mapTileIndex">
            mapt tile index.
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile._avaiable">
            used or not.
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile.#ctor(Mapdigit.Gis.Raster.TiledMapTileEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile"/> class.
            </summary>
            <param name="tiledMapTileEngine">The tiled map tile engine.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile.NeedToUpdate">
            <summary>
            check to see this map cavas need to update.
            </summary>
            <returns>true ,need update</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile.SetMapTileIndex(Mapdigit.Gis.Raster.ImageTileIndex)">
            <summary>
            set the map tile used for given map tile index.
            </summary>
            <param name="imageTileIndex">Index of the image tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile.ClearMapCanvas">
            <summary>
            Clears the map canvas.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile.DrawTesting">
            <summary>
            Draws the testing.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile.UpdateMapCanvas">
            <summary>
            Update map canvas, check to see if need to download missing images.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile.DrawMapTileImage(Mapdigit.Gis.Raster.ImageTileIndex,Mapdigit.Gis.Drawing.IImage)">
            <summary>
            drawn give map tile image on the map tile canvas.
            </summary>
            <param name="imageTileIndex">Index of the image tile.</param>
            <param name="image">The image.</param>
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile._pendingDrawImageQueue">
            pending drawing image queue, used to order the routing and map images.
        </member>
        <member name="F:Mapdigit.Gis.Raster.TiledMapTileEngine.MapTile._whatsInMapCanvas">
            record what have been drawn on the map tile canvas.
        </member>
        <member name="F:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.SafeGuardPeriod">
            safe guard check period
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.#ctor(System.Int32,System.Int32,Mapdigit.Gis.Raster.MapTileDownloadManager,Mapdigit.Gis.Raster.RasterMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine"/> class.
            </summary>
            <param name="width">width of the map</param>
            <param name="height">height of the map</param>
            <param name="mapTileDownloadManager">map tile downloader manager</param>
            <param name="rasterMap">raster map instance</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.SetScreenSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the screen.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.PanDirection(System.Int32,System.Int32)">
            <summary>
            pan direction
            </summary>
            <param name="dx">The dx.</param>
            <param name="dy">The dy.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.Paint(Mapdigit.Gis.Drawing.IGraphics)">
            <summary>
            paint map to given graphics canvas.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.Paint(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            paint map to given canvas at given location.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.DrawMapCanvas">
            <summary>
            Draws the map canvas.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.DrawUpdatedMapCanvas">
            <summary>
            Draws the updated map canvas.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine._viewRect">
            view rectangle.
        </member>
        <member name="F:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine._mapRect">
            temp variable avoid create the rectangle again and again.
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.DrawMapImage(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            Draws the map image.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.ClearBackground(Mapdigit.Gis.Drawing.IGraphics,System.Int32)">
            <summary>
            Clears the background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.PaintInternal(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            paint internal.
            @param graphics graphics object.
            @param offsetX  offset x
            @param offsetY  offset y
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ArrayTiledMapTileEngine.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.ICustomMapType">
            <summary>
            Defines the custome map types.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.ICustomMapType.GetTileUrl(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get url based on type, x,y,z
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.ImageTileIndex">
            <summary>
            stand for one map tile index.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.ImageTileIndex.MapType">
            map type for this map image tile.
        </member>
        <member name="F:Mapdigit.Gis.Raster.ImageTileIndex.XIndex">
            the X index for the map tile.
        </member>
        <member name="F:Mapdigit.Gis.Raster.ImageTileIndex.YIndex">
            the Y index for the map tile.
        </member>
        <member name="F:Mapdigit.Gis.Raster.ImageTileIndex.MapZoomLevel">
            the zoom level for the map tile.
        </member>
        <member name="T:Mapdigit.Gis.Raster.IMapDrawingListener">
            <summary>
            map downloading linstener.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.IMapDrawingListener.Done">
            <summary>
            the drawing is done.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.IReaderListener">
            <summary>
            Callback when downloading map tiles.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.IReaderListener.ReadProgress(System.Int32,System.Int32)">
            <summary>
            Read progress notification. 
            </summary>
            <param name="bytes">the number of bytes has been read.</param>
            <param name="total">total bytes to be read.Total will be zero if not available 
            (content-length header not set)</param>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapConfiguration">
            <summary>
            map configuration.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.IsCacheOn">
            <summary>
            is cache on or not.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.WorkerThreadNumber">
            <summary>
            the no of worker thread.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.MapCacheSizeInBytes">
            <summary>
            the map cache size.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.LowMemoryMode">
            <summary>
             low memory mode or not.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.RouteStartIcon">
            <summary>
            route start icon.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.RouteMiddleIcon">
            <summary>
             route middle icon.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.RouteEndIcon">
            <summary>
            route end icon.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.RouteDrawPen">
            <summary>
            route draw pen.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.IsMarkSupported">
            <summary>
            is mark supported or not.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration.IgnoreMapTypeForStoredMap">
            <summary>
            ignore the map type in stored map or not.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapConfiguration.SetParameter(System.Int32,System.Boolean)">
            <summary>
            Sets the parameter.
            </summary>
            <param name="field">The field.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapConfiguration.SetParameter(System.Int32,System.Int32)">
            <summary>
            Sets the parameter.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapConfiguration.SetParameter(System.Int32,System.Object)">
            <summary>
            Sets the parameter.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapConfiguration.SetParameters(Mapdigit.Drawing.Pen,Mapdigit.Drawing.Brush,Mapdigit.Drawing.Brush,Mapdigit.Drawing.Brush)">
            <summary>
            Sets the parameters.
            </summary>
            <param name="pen">The pen.</param>
            <param name="start">The start.</param>
            <param name="middle">The middle.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapConfiguration.SetParameters(System.Boolean,System.Int32,System.Int64,System.Boolean,System.Int32)">
            <summary>
            Reset map configuration parameters. the resetting parameters should before
            the initialization of DigitalMap ,and MapTileDownloaderManager.
            </summary>
            <param name="cacheOn">if cache is on, Digital Map will appy an internal cache
            which can save some loaded map tile to speed up map rendering, but it'll
            consume some memory whose max size is speicfied by cachesize.</param>
            <param name="workerThreadNo">how many worker thread,default is 4, these threads
            are in charge of downloading/reading/render map tiles from server,stored
            map tile file or vector map file.the thread no should between 1 and 64.</param>
            <param name="cacheSize">the max size of internal map tile caches.</param>
            <param name="isLowMemory">low memory mode or not</param>
            <param name="directionRenderBlocks">when render direction, it uses an internal
             vector picture engine to draw the polyline, which requires memory ,the
            memory size is determined by the block size, the default render picture
            size is 256X256 ,which takes 256X256X4 bytes(256K), for memory constraints
            device, speicify a small block size requires smaller memory useage. but
            it effects the render performace,the valid value for directionRenderBlocks
            is 1,2,4, whose corrosponing block size is 256X256X4 bytes(256K)(default)
            128X128X4 bytes(64K) and 64X64X4 bytes(16K)</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapConfiguration"/> class.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._isMarkSupported">
            is mark supported not.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._isCacheOn">
            is cache on not.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._workerThreadNumber">
            the no of worker thread.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._mapCacheSizeInBytes">
            the map cache size.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._mapDirectionRenderBlocks">
            the direction render size = 256/MAP_DIRECTION_RENDER_BLOCKS;
            this will always be 1 for new version. if low memory ,it should
            disable the drawRouting, and use native graphics to draw routes.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._lowMemoryMode">
            is low memory mode,
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._routePen">
            default route drawing pen.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._startIconBrush">
            start route icon.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._middleIconBrush">
            start route icon.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._endIconBrush">
            start route icon.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapConfiguration._ignoreMapTypeInStoredMap">
            ignore map type in stored map or not.
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapDirectionRenderer">
            <summary>
            Vector map render, each time, the renderer draw one map tile.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTileAbstractReader">
            <summary>
            Base class for all map tile downloader/reader/render.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileAbstractReader.ImageArray">
            <summary>
            This image array stores map tiles downloaded
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileAbstractReader.ImageArraySize">
            <summary>
            the actual image size in the image array
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileAbstractReader.IsImagevalid">
            <summary>
            indicates the data in the image array is valid or not.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileAbstractReader.TotaldownloadedBytes">
            <summary>
            total bytes downloaded with this downloader
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileAbstractReader.SetMapDownloadingListener(Mapdigit.Gis.Raster.IReaderListener)">
            <summary>
            Sets the map downloading listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileAbstractReader.GetImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get image at given location. when the reader is done, imageArray shall
            store the image byte array. imageArraySize is the actually data size.
            isImagevalid indicate the data is valid or not. normally this shall be
            an async call.
            </summary>
            <param name="mtype"> the map type of the map tile.</param>
            <param name="x"> the x index of the map tile.</param>
            <param name="y">the y index of the map tile.</param>
            <param name="zoomLevel">the zoom level of the map tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileAbstractReader.CancelRead">
            <summary>
            a way app can cancel the reading process.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileAbstractReader.readListener">
            <summary>
            downloader listener
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapDirectionRenderer.Transparency">
            transparent color value.
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapDirectionRenderer"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.SetRoutePen(Mapdigit.Drawing.Pen)">
            <summary>
            Sets the route pen.
            </summary>
            <param name="routePen">The route pen.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.SetMapDirection(Mapdigit.Gis.MapDirection)">
            <summary>
            Sets the map direction.
            </summary>
            <param name="newDirection">The new direction.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.SetMapDirections(Mapdigit.Gis.MapDirection[])">
            <summary>
            Sets the map directions.
            </summary>
            <param name="newDirections">The new directions.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.GetMapDirection">
            <summary>
            Gets the map direction.
            </summary>
            <returns>the map direction</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.GetMapDirections">
            <summary>
            Gets the map directions.
            </summary>
            <returns>the map directions</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.GetImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get image at given location. when the reader is done, imageArray shall
            store the image byte array. imageArraySize is the actually data size.
            isImagevalid indicate the data is valid or not. normally this shall be
            an async call.
            </summary>
            <param name="mtype">the map type of the map tile.</param>
            <param name="x">the x index of the map tile.</param>
            <param name="y">the y index of the map tile.</param>
            <param name="zoomLevel">the zoom level of the map tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.GetImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the image at given x,y zoom level
            </summary>
            <param name="x">x index of the map tile</param>
            <param name="y">y index of the map tile</param>
            <param name="zoomLevel">zoom level of the map tile</param>
            <returns>the given image</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.CancelRead">
            <summary>
            a way app can cancel the reading process.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer">
            <summary>
            This a map layer delicated to draw routing result.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.#ctor(System.Int32,System.Int32,Mapdigit.Gis.Raster.MapDirectionRenderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mapDirectionRenderer">The map direction renderer.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.SetMapDirection(Mapdigit.Gis.MapDirection)">
            <summary>
            Sets the map direction.
            </summary>
            <param name="newDirection">The new direction.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.SetMapDirections(Mapdigit.Gis.MapDirection[])">
            <summary>
            Sets the map directions.
            </summary>
            <param name="newDirections">The new directions.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.GetMapDirection">
            <summary>
            Gets the map direction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.GetMapDirections">
            <summary>
            Gets the map directions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.GetRGB">
            <summary>
            Gets the RGB.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.Paint(Mapdigit.Gis.Drawing.IGraphics)">
            <summary>
            Draw the map layer to an graphics.
            </summary>
            <param name="graphics">The graphics.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.Paint(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            Draw the map layer to an graphics
            </summary>
            <param name="graphics">the graphics object where the map is drawn..</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.Paint(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Paints the specified offset X.
            </summary>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer._sutherlandHodgman">
            SutherlandHodgman clip pline and region.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer._mapDrawingTileWidth">
            When draw the map tile, the default map tile width is 64X64
            using 64X64 istread of 256X256 mainly for saving memory usage in
            memeory constrained devices. it can change to a bigger value if the
            memory is not issue.
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.NeedShowLevel(System.Int32,System.Int32)">
            <summary>
            check if need to show on map.
            </summary>
            <param name="numLevel">The num level.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.DrawRouteCanvas(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the route canvas.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.DrawRouteImage(Mapdigit.Gis.MapDirection[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the route image.
            </summary>
            <param name="mapDirections">The map directions.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.ModifyAlpha(System.Int32[],System.Byte,System.Int32)">
            <summary>
            Modifies the alpha.
            </summary>
            <param name="arr">The arr.</param>
            <param name="alpha">The alpha.</param>
            <param name="removeColor">Color of the remove.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.DrawRouteIcon(System.Int32,System.Int32,Mapdigit.Drawing.Brush)">
            <summary>
            Draws the route icon.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.DrawRouteIcons(Mapdigit.Gis.MapDirection[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the route icons.
            </summary>
            <param name="mapDirections">The map directions.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapDirectionRenderer.MapDirectionLayer.DrawMapCanvas">
            <summary>
            Draws the map canvas.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTileDownloader">
            <summary>
            MapTileDownloader download map image tiles from server (msn,yahoo,etc).
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.GetImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get image at given location. when the reader is done, imageArray shall
            store the image byte array. imageArraySize is the actually data size.
            isImagevalid indicate the data is valid or not. normally this shall be
            an async call.
            </summary>
            <param name="mtype">the map type of the map tile.</param>
            <param name="x">the x index of the map tile.</param>
            <param name="y">the y index of the map tile.</param>
            <param name="zoomLevel">the zoom level of the map tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.CancelRead">
            <summary>
            a way app can cancel the reading process.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.GetTileUrl(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get the URL of map tile image.
            </summary>
            <param name="mtype"> the map tile (msn,yahoo etc)</param>
            <param name="x">the x index of the map tile.</param>
            <param name="y">the y index of the map tile.</param>
            <param name="zoomLevel">current zoom level</param>
            <returns>the url of given map tile</returns>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.Numzoomlevels">
            <summary>
            total zoom levels
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.mapType">
            <summary>
            map type
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.mapXIndex">
            <summary>
             X index of the map tile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.mapYIndex">
            <summary>
            Y index of the map tile
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.mapZoomLevel">
            <summary>
            zoom Level of the map tile.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.maxWaitingTime">
            <summary>
            max wait time for download an image in seconds.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.imgConn">
            <summary>
            Http connection for donwloading images.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloader.MapTileWidth">
            <summary>
            the map tile width.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.Cast2Integer(System.Double)">
            <summary>
            Cast2s the integer.
            </summary>
            <param name="f">The f.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.GetMapIndex(System.Double,System.Double)">
            <summary>
            Get the index of map tiles based on given piexl coordinates
            </summary>
            <param name="x">x coordinates</param>
            <param name="y">y coordinates .</param>
            <returns>the the index of map tiles</returns>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTileDownloader.MapProgressInputStream">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.MapProgressInputStream.#ctor(System.IO.Stream,System.Int32,Mapdigit.Gis.Raster.IReaderListener,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileDownloader.MapProgressInputStream"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="total">The total.</param>
            <param name="listener">The listener.</param>
            <param name="notifyInterval">The notify interval.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.MapProgressInputStream.Read(System.Byte[])">
            <summary>
            Reads the specified buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.MapProgressInputStream.Read">
            <summary>
            Reads this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.MapProgressInputStream.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloader.MapProgressInputStream.Avaiable">
            <summary>
            Avaiables this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTileDownloadManager">
            <summary>
            map tile download manager.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.MaxDownloadMapTile">
            the maximum number of map tile to be downloaded in the queue
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.MaxMapTilesNumbers">
            cache size.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.MapDataRecordstoreName">
            record store name
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.TileNotAvaiable">
            <summary>
             The map tile not avaiable image.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.TileDownloading">
            <summary>
            the map tile is downloading image.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileDownloadManager"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.SetReaderListener(Mapdigit.Gis.Raster.IReaderListener)">
            <summary>
             set download listener
            </summary>
            <param name="mapDownloadingListener"></param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.#ctor(Mapdigit.Gis.Raster.IReaderListener)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileDownloadManager"/> class.
            </summary>
            <param name="mapDownloadingListener">The map downloading listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.#ctor(Mapdigit.Gis.Raster.IReaderListener,Mapdigit.Gis.Raster.MapTileAbstractReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileDownloadManager"/> class.
            </summary>
            <param name="mapDownloadingListener">The map downloading listener.</param>
            <param name="mapTileReader">The map tile reader.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.Start">
            <summary>
            start the manager thread and the worker threads.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.RestartWorker">
            <summary>
            restart the worker thread in case worker thread is died.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetInteralMapTileStreamReader">
            <summary>
            Gets the interal map tile stream reader.
            </summary>
            <returns>the internal stream reader</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.Close">
            <summary>
            Close the manager thread and all the worker threads.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.Stop">
            <summary>
            Stop the manager thread and all the worker threads.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetThreads">
            <summary>
            return all the worker threads.
            </summary>
            <returns>the hashtable contains all the worker threads.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.Run">
            <summary>
            the running method of this manager thread.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.ClearMapCache">
            <summary>
            clear map cache;
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.RemoveFromImageCache(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Removes image from image cache.
            </summary>
            <param name="mtype">The mtype.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoomLevel">The zoom level.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetFromImageCache(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets image from image cache.
            </summary>
            <param name="mtype">The mtype.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.SaveMapCache">
            <summary>
            Save map image cache to persistent memory.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.RestoreMapCache">
            <summary>
            Restore map image cache from persistent memory.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetMapDirection">
            <summary>
            get the route direction.
            </summary>
            <returns>get the first map direction.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetMapDirections">
            <summary>
            get the route direction.
            </summary>
            <returns> the map direction array</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.SetMapDirection(Mapdigit.Gis.MapDirection)">
            <summary>
            Sets the map direction.
            </summary>
            <param name="newDirection"> first map direction.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.SetMapDirections(Mapdigit.Gis.MapDirection[])">
            <summary>
            Sets the map directions.
            </summary>
            <param name="newDirections">The new directions.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.SetRoutePen(Mapdigit.Drawing.Pen)">
            <summary>
            set route pen
            </summary>
            <param name="routePen">The route pen.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.ClearTaskList">
            <summary>
            Clears the task list.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetCachedImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get a map tile image in cache.
            </summary>
            <param name="mtype"> the map type of the map tile.</param>
            <param name="x">x index of the map tile.</param>
            <param name="y">The  y index of the map tile.</param>
            <param name="zoomLevel"> the zoom level of the map tile.</param>
            <returns>the image at give location</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get a map tile image.
            </summary>
            <param name="mtype"> the map type of the map tile.</param>
            <param name="x">x index of the map tile.</param>
            <param name="y">The  y index of the map tile.</param>
            <param name="zoomLevel"> the zoom level of the map tile.</param>
            <returns>the image at give location</returns>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._maxBytesInCache">
            Max sizes in the image cache.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._maxImageDownloadWorkder">
            maximum image download worker thread size
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._isCacheOn">
            is cache on or not.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._notLowMemoryMode">
            is it low momory mode or not.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._imageDownloadWorkers">
            worker thread array ,the extra one is mapdirectionrendererworker
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._imageCache">
            This image cache stores map tiles downloaded
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._imageTileDownloadList">
            the download map tile list.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._mapDirectionRenderer">
            route direction renderer.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._mapTileStreamReader">
            stream reader used to read map tiles from SD card
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._mapDataRecordStore">
            record store
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager._syncObjectManager">
            thread sync object.
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.#cctor">
            Intialized the images.
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.AddToAssignedImageDownloadList(Mapdigit.Gis.Raster.ImageTileIndex)">
            <summary>
            Adds to assigned image download list.
            </summary>
            <param name="imageTileIndex">Index of the image tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.AddToImageDownloadList(Mapdigit.Gis.Raster.ImageTileIndex)">
            <summary>
            Adds to image download list.
            </summary>
            <param name="imageTileIndex">Index of the image tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.OneDownloadImageTileDone(System.String)">
            <summary>
            Called when [download image tile done].
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.GetAImageTileIndex">
            <summary>
            Gets the index of the A image tile.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.AddToImageCache(System.String,System.Byte[])">
            <summary>
            Adds to image cache.
            </summary>
            <param name="key">The key.</param>
            <param name="imageArray">The image array.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.AddOneImageToCacheFromRecordStore(System.Byte[])">
            <summary>
            Adds the one image to cache from record store.
            </summary>
            <param name="imageArray">The image array.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.Image2ByteArray(System.String,System.Byte[])">
            <summary>
            each record has the format of [Key,imageLength,imagedata]
            </summary>
            <param name="key">The key.</param>
            <param name="image">The image.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker">
            <summary>
            map download work thread.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.mapTileReader">
            the map tile downloader actually do the download work.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.mapTileDownloadManager">
            Download manager object.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.maxWaitingTime">
            Max wait time for download an image in seconds.
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.#ctor(Mapdigit.Gis.Raster.MapTileDownloadManager,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="threadName">Name of the thread.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.#ctor(Mapdigit.Gis.Raster.MapTileDownloadManager,Mapdigit.Gis.Raster.MapTileAbstractReader,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="mapTileReader">The map tile reader.</param>
            <param name="threadName">Name of the thread.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.GetImage(Mapdigit.Gis.Raster.ImageTileIndex)">
            <summary>
            Gets the image.
            </summary>
            <param name="imageTileIndex">Index of the image tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.Run">
            <summary>
            Runs this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.Resume">
            <summary>
            Resumes this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.IsPaused">
            <summary>
            check if the thread is paused or not
            </summary>
            <returns>
            	if ture then the thread is paused.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.SetPaused(System.Boolean)">
            <summary>
            Sets the paused.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapTileDownloadWorker.IsAlive">
            <summary>
            check if the thread is alive.
            </summary>
            <returns>
            	<c>true</c> if this instance is alive; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapDirectionRendererWorker.#ctor(Mapdigit.Gis.Raster.MapTileDownloadManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTileDownloadManager.MapDirectionRendererWorker"/> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapDirectionRendererWorker.GetImage(Mapdigit.Gis.Raster.ImageTileIndex)">
            <summary>
            </summary>
            <param name="imageTileIndex"></param>
            get one map tile.
            @param imageTileIndex the index of given map tile.
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileDownloadManager.MapDirectionRendererWorker.Run">
            <summary>
            </summary>
            the actually thread run.
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTiledZone">
            <summary>
            Define a tiled map zone.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTiledZone.Headsize">
            the header size.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTiledZone.Bounds">
            <summary>
            the boundary of this map zone.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTiledZone.MapType">
            <summary>
            the map type of this map zone.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTiledZone.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.MapTiledZone"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTiledZone.Open">
            <summary>
            Opens this instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTiledZone.GetImage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the image .
            </summary>
            <param name="level">The level.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTiledZone.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTiledZone._reader">
            reader to read the data from the map file.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTiledZone._opened">
            check if it's opened;
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTiledZone._levelInfos">
            level info.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTiledZone._readListener">
            downloader listener
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapTileStreamReader">
            <summary>
            This class is used to store driving directions results
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.Open">
            <summary>
            Open the map.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.Close">
            <summary>
            close the map.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.AddZone(Mapdigit.Gis.Raster.MapTiledZone)">
            <summary>
            Add a map zone to map's zone collection.
            </summary>
            <param name="mapZone">a map zone to add.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.SetMapDownloadingListener(Mapdigit.Gis.Raster.IReaderListener)">
            <summary>
            Sets the map downloading listener.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.GetMapZone(System.Int32)">
            <summary>
            return map zone object of given index.
            </summary>
            <param name="index">index of the map zone.</param>
            <returns>map zone object of given index</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.GetZoneCount">
            <summary>
            return the count of zones in the map..
            </summary>
            <returns>the number of map zones in the map zone collection</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.InsertZone(Mapdigit.Gis.Raster.MapTiledZone,System.Int32)">
            <summary>
            Inserts the specified map zone to map's zone collection at the
            specified index. Each map zone in map's zone collection  with an index
            greater or equal to the specified index is shifted upward to have an
            index one greater than the value it had previously.
            </summary>
            <param name="mapZone">the map zone to insert.</param>
            <param name="index">where to insert the new map zone.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.MoveZone(System.Int32,System.Int32)">
            <summary>
             Moves a zone in the Zone collection to change the order in which
            zones are drawn.
            </summary>
            <param name="from">Index number of the zone to move. The topmost zone is 0.</param>
            <param name="to">New location for the zone. For example, if you want it to be
             the second zone, use 1</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.RemoveZone(Mapdigit.Gis.Raster.MapTiledZone)">
            <summary>
            Remove a map zone from map's zone collection.
            </summary>
            <param name="mapZone"> map zone to be removed.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.RemoveAllZones">
            <summary>
            Remove all map zones from map's zone collection.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.GetMapZones">
            <summary>
            Get the map zone collection.
            </summary>
            <returns>the map zone collection.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapTileStreamReader.GetImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get image at given location. when the reader is done, imageArray shall
            store the image byte array. imageArraySize is the actually data size.
            isImagevalid indicate the data is valid or not. normally this shall be
            an async call.
            </summary>
            <param name="mtype">the map type of the map tile.</param>
            <param name="x">the x index of the map tile.</param>
            <param name="y">the y index of the map tile.</param>
            <param name="zoomLevel">the zoom level of the map tile.</param>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileStreamReader._mapTiledZones">
            map zones object.
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapTileStreamReader._bounds">
            the boundary of this map.
        </member>
        <member name="T:Mapdigit.Gis.Raster.MapType">
            <summary>
            Defines the map types and relations between map types.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GoogleMap">
            <summary>
            Google Road Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GoogleSatellite">
            <summary>
            Google Satellite Images
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GoogleHybrid">
            <summary>
            Google Satellite Images with Road Maps Overlayed
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GoogleChina">
            <summary>
             Google Road Maps (China)
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.YahooMap">
            <summary>
            Yahoo Road Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.YahooSatellite">
            <summary>
            Yahoo Satellite Images
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.YahooHybrid">
            <summary>
            Yahoo Satellite Images with Road Maps Overlayed
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.YahooIndiaMap">
            <summary>
            Yahoo India Road Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.YahooIndiaHybrid">
            <summary>
            Yahoo Satellite Images with India Road Maps Overlayed
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.AskdotcomMap">
            <summary>
            Ask.com Road Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.AskdotcomSatellite">
            <summary>
            Ask.com Satellite Images
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.AskdotcomHybrid">
            <summary>
            Ask.com Satellite Images with Labels
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MicrosoftMap">
            <summary>
            Microsoft Road Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MicrosoftSatellite">
            <summary>
             Microsoft Satellite Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MicrosoftHybrid">
            <summary>
            Microsoft Satellite Images with Road Maps Overlayed
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MicrosoftChina">
            <summary>
            Microsoft Live China
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.NokiaMap">
            <summary>
            Nokia normal map
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MapabcChina">
            <summary>
             Map abc china
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GoogleTerren">
            <summary>
            Google terren
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.OpenstreetMap">
            <summary>
             OpenStreetMap.org Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.OpenSatellitetMap">
            <summary>
            Open satellite Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.OpenCycleMap">
            <summary>
            Open cycle Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.OsmaMap">
            <summary>
             OSMA Maps
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MicrosoftTerren">
            <summary>
            Microsoft terren
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MaxmapType">
            <summary>
             max map type
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptype1">
            <summary>
            Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptype2">
            <summary>
             Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptype3">
            <summary>
             Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptype4">
            <summary>
             Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptype5">
            <summary>
            Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptype6">
            <summary>
            Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptype7">
            <summary>
            Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.GenericMaptypeChina">
            <summary>
             Generic map type ,used to extension.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.RoutingDirection">
            <summary>
            Routing direction map.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MapinfoVectorMap">
            <summary>
            Mapinfo Vector map type
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MapTileUrlRecordstoreName">
            record store name
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MapSequences">
            <summary>
             for each map type, what consists each map type.
            some map type like hybrid may consistes two map types, the satellites
            and the hybrid itself. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MapTypeNames">
            <summary>
            map type names and it's index
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.MapTypeUrls">
            <summary>
             map tile urls.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType.EmptyTileUrl">
            <summary>
             empty tile urls.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.ReplaceMetaString(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Replaces the meta string.
            </summary>
            <param name="input">The input.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.GetTileUrl(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the tile URL.
            </summary>
            <param name="mtype">The mtype.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.GetTileInternalUrl(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the tile internal URL.
            </summary>
            <param name="mtype">The mtype.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="zoomLevel">The zoom level.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.SetCustomMapTileUrl(Mapdigit.Gis.Raster.ICustomMapType)">
            Manually set the map tile url template
            @param mType map type.
            @param urlTemplate url tempalte
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.SetMapTileUrl(System.Int32,System.String)">
            <summary>
            Sets the map tile URL.
            </summary>
            <param name="mType">Type of the m.</param>
            <param name="urlTemplate">The URL template.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.UpdateMapTileUrl">
            <summary>
            Updates the map tile URL.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Raster.MapType._mapDataRecordStore">
            record store
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.SaveMapUrls">
            <summary>
            Saves the map urls.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.RestoreMapUrls">
            <summary>
            Restores the map urls.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.MapType.GetMapServiceUrl(System.String)">
            <summary>
            Gets the map service URL.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Raster.RasterMap">
            <summary>
            RasterMap a map class uses to display raster map.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.GetTotalDownloadedBytes">
            <summary>
            Gets the total downloaded bytes.
            </summary>
            <returns>the total byte has be downloaded</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.#ctor(System.Int32,System.Int32,Mapdigit.Gis.Raster.MapTileDownloadManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.RasterMap"/> class.
            </summary>
            <param name="width">the width of the map image</param>
            <param name="height">the height of the map image</param>
            <param name="mapTileDownloadManager">The map tile download manager.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.#ctor(System.Int32,System.Int32,System.Int32,Mapdigit.Gis.Raster.MapTileDownloadManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.RasterMap"/> class.
            </summary>
            <param name="width">the width of the map image</param>
            <param name="height">the height of the map image</param>
            <param name="mapType">Type of the map.</param>
            <param name="mapTileDownloadManager">The map tile download manager.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetMapDrawingListener(Mapdigit.Gis.Raster.IMapDrawingListener)">
            <summary>
            Sets the map drawing listener.
            </summary>
            <param name="mapDrawingListener">The map drawing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetScreenSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the screen.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetCurrentMapService(System.Int32)">
            <summary>
            set current  map service type.
            </summary>
            <param name="mapServiceType">map service type.defined in DigitalMapService.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetCenter(Mapdigit.Gis.Geometry.GeoLatLng,System.Int32,System.Int32)">
            <summary>
            Sets the center.
            </summary>
            <param name="center">The center.</param>
            <param name="zoomLevel">The zoom level.</param>
            <param name="mapType">Type of the map.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.IsPointVisible(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            is the point in current screen (is shown or not).
            </summary>
            <param name="pt">point to be tested</param>
            <returns>true is in screen range</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.GetScreenCenter">
            <summary>
            Gets the screen center.
            </summary>
            <returns> the center of the screen in latitude,longititude pair</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.ZoomIn">
            <summary>
            Increments zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.ZoomOut">
            <summary>
            Decrements zoom level by one.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.PanDirection(System.Int32,System.Int32)">
            <summary>
            Starts a pan with given distance in pixels.
            directions. +1 is right and down, -1 is left and up, respectively.
            </summary>
            <param name="dx">x offset</param>
            <param name="dy">y offset.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetMapType(System.Int32)">
            <summary>
            Sets the type of the map.
            </summary>
            <param name="mapType">Type of the map.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetRoutePen(Mapdigit.Drawing.Pen)">
            <summary>
            Sets the route pen.
            </summary>
            <param name="routePen">The route pen.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.GetMapType">
            <summary>
            Gets the type of the map.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SavePosition">
            <summary>
            Stores the current map position and zoom level for later
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.ReturnToSavedPosition">
            <summary>
            Restores the map view that was saved by savePosition().
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.ClearMapCache">
            <summary>
            Clears the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.RestoreMapCache">
            <summary>
            Restores the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SaveMapCache">
            <summary>
            Saves the map cache.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.Paint(Mapdigit.Gis.Drawing.IGraphics,System.Int32,System.Int32)">
            <summary>
            Draw the map layer to an graphics
            </summary>
            <param name="graphics">the graphics object where the map is drawn..</param>
            <param name="offsetX">The offset X.</param>
            <param name="offsetY">The offset Y.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.DrawMapCanvas">
            <summary>
            Draws the map canvas.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.FromLatLngToScreenPixel(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            convert laititude,longitude pair to the coordinates on screen.
            </summary>
            <param name="latlng"> the latitude,longitude location.</param>
            <returns>x,y coordniate on screen.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.FromScreenPixelToLatLng(Mapdigit.Gis.Geometry.GeoPoint)">
            <summary>
            convert the coordinates on screen to laititude,longitude pair .
            </summary>
            <param name="pt">x,y coordniate on screen</param>
            <returns>the latitude,longitude position.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetMapDirection(Mapdigit.Gis.MapDirection)">
            <summary>
            Sets the map direction.
            </summary>
            <param name="newDirection">The new direction.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetMapDirections(Mapdigit.Gis.MapDirection[])">
            <summary>
            Sets the map directions.
            </summary>
            <param name="newDirections">The new directions.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.ClearMapDirection">
            <summary>
            Clears the map direction.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.GetMapTileDownloadManager">
            <summary>
            Gets the map tile download manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.SetDownloadManager(Mapdigit.Gis.Raster.MapTileDownloadManager)">
            <summary>
            Sets the download manager.
            </summary>
            <param name="mapTileDownloadManager">The map tile download manager.</param>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Raster.RasterMap"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mapType">Type of the map.</param>
        </member>
        <member name="F:Mapdigit.Gis.Raster.RasterMap._screenRectangle">
            screen rectangle
        </member>
        <member name="F:Mapdigit.Gis.Raster.RasterMap._mapTileEngine">
            map tile engine.
        </member>
        <member name="F:Mapdigit.Gis.Raster.RasterMap._storedPosition">
            stored position
        </member>
        <member name="F:Mapdigit.Gis.Raster.RasterMap._storedZoomLevel">
            stored zoom Level
        </member>
        <member name="F:Mapdigit.Gis.Raster.RasterMap._imageLogo">
            <summary>
            the map tile is downloading image.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Raster.RasterMap.#cctor">
            Intialized the images.
        </member>
        <member name="T:Mapdigit.Gis.Service.CellIdGeocoder">
            <summary>
            This class is used to communicate directly with Google servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.ICellIdGeocoder">
            <summary>
            query cell id geo addresses.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.ICellIdGeocoder.GetLocations(System.String,System.String,System.String,System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="mmc">The MMC.</param>
            <param name="mnc">The MNC.</param>
            <param name="lac">The lac.</param>
            <param name="cid">The cid.</param>
            <param name="listener">The callback listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.CellIdGeocoder"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.GetLocations(System.String,System.String,System.String,System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Gets the locations.
            </summary>
            <param name="stringMmc">The string MMC.</param>
            <param name="stringMnc">The string MNC.</param>
            <param name="stringLac">The string lac.</param>
            <param name="stringCid">The string cid.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.PostData(System.Int64,System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Posts the data.
            </summary>
            <param name="mcc">The MCC.</param>
            <param name="mnc">The MNC.</param>
            <param name="lac">The lac.</param>
            <param name="cid">The cid.</param>
            <param name="shortCid">if set to <c>true</c> [short cid].</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.SearchResponse(Mapdigit.Gis.Service.CellIdGeocoder,Mapdigit.Ajax.Response)">
            <summary>
            Searches the response.
            </summary>
            <param name="geoCoder">The geo coder.</param>
            <param name="response">The response.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.CellIdGeocoder.CellIdAddressQuery">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.CellIdAddressQuery.#ctor(Mapdigit.Gis.Service.CellIdGeocoder)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.CellIdGeocoder.CellIdAddressQuery"/> class.
            </summary>
            <param name="cellIdGeocoder">The cell id geocoder.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.CellIdAddressQuery.ReadProgress(System.Object,System.Int32,System.Int32)">
            <summary>
            Read progress notification.
            </summary>
            <param name="context">message context, can be any object.</param>
            <param name="bytes">the number of bytes has been read.</param>
            <param name="total">total bytes to be read.Total will be zero if not available</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.CellIdAddressQuery.WriteProgress(System.Object,System.Int32,System.Int32)">
            <summary>
            Write progress notification.
            </summary>
            <param name="context">message context, can be any object.</param>
            <param name="bytes">the number of bytes has been written.</param>
            <param name="total">total bytes to be written.Total will be zero if not available .</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CellIdGeocoder.CellIdAddressQuery.Done(System.Object,Mapdigit.Ajax.Response)">
            <summary>
            Dones the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="response">The response.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.CloudMade.CClientGeocoder">
            <summary>
            This class is used to communicate directly with CloudMade servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.IGeocoder">
            <summary>
            This class is used to query geo addresses.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="mapType">the map type</param>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CClientGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to cloudmade servers to geocode the specified address
            </summary>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CClientGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to cloudemade servers to geocode the specified address
            </summary>
            <param name="mapType">the map type</param>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.CloudMade.CDirectionCommandAnalyzer">
            <summary>
            Driving diretion command analyser.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirectionCommandAnalyzer.Analyse(System.String,System.String)">
            <summary>
            Analyse the input direction in text (English).
            </summary>
            <param name="direction">the input direction description.</param>
            <param name="roadName"></param>
            <returns>command element list (5 elements).</returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirectionCommandAnalyzer.IsWord(System.String,System.Int32,System.String)">
            <summary>
            check to see if the description contains any direction command.
            </summary>
            <param name="description">The description.</param>
            <param name="index"> the start index of the word to check.</param>
            <param name="word">The word.</param>
            <returns>
            	true ,it's a word.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirectionCommandAnalyzer.HasCommand(System.String)">
            <summary>
            check to see if the description contains any direction command.
            </summary>
            <param name="description">The description.</param>
            <returns>
            	true ,if contains direction command.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Service.CloudMade.CDirections">
            <summary>
            This class is used to obtain driving directions results.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.IDirectionQuery">
            <summary>
            This class is used to query driving directions.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IDirectionQuery.GetDirection(Mapdigit.Gis.Geometry.GeoLatLng[],Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="waypoints">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IDirectionQuery.GetDirection(System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            or the longitude,latitude list depends on which map server.
            </summary>
            <param name="query">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IDirectionQuery.GetDirection(System.Int32,System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            or the longitude,latitude list depends on which map server.
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="query">the directions query string</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirections.#ctor">
            <summary>
            default constructor.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirections.GetDirection(Mapdigit.Gis.Geometry.GeoLatLng[],Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="waypoints">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirections.GetDirection(System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="query">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirections.GetDirection(System.Int32,System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="mapType">map type.</param>
            <param name="query">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CDirections.DirectionQuery.FromStringToLatLng(System.String)">
            <summary>
            Convert string to Latitude,Longitude pair, the input string has this format
            [Latitude,longitude] for example  [-31.948275,115.857562]
            </summary>
            <param name="location">location string</param>
            <returns> the geographical coordinates.</returns>
        </member>
        <member name="T:Mapdigit.Gis.Service.CloudMade.CLocalSearch">
            <summary>
            This class is used to communicate directly with cloudmade servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.ILocalSearch">
            <summary>
            This class is used to local searh.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.ILocalSearch.GetLocations(System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.ILocalSearch.GetLocations(System.Int32,System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CLocalSearch.GetLocations(System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to cloudmade servers to geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CLocalSearch.GetLocations(System.Int32,System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to cloudemade servers to geocode the specified address
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.CloudMade.CloudMadeMapService">
            <summary>
            This class defines cloudmade map services.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.DigitalMapService">
            <summary>
            This class is a base class for map service.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.GoogleMapService">
            <summary>
            google map service
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.MapabcMapService">
            <summary>
            map abc map service
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.BingMapService">
            <summary>
            Bing map service
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.CloudmadeMapService">
            <summary>
            cloud made map service
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mapdigit.Gis.Service.DigitalMapService.GetCurrentMapService(System.Int32)" -->
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.SetGeocodingListener(Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Set the listener for geocoding query.
            </summary>
            <param name="listener"> callback when query is done and in progress</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.SetReverseGeocodingListener(Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Set the listener for reverse geocoding query.
            </summary>
            <param name="listener">callback when query is done and in progress</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetReverseLocations(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Sends a request to servers to reverse geocode the specified address
            </summary>
            <param name="latlngAddress">address to query</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Mapdigit.Gis.Service.DigitalMapService.GetDirections(Mapdigit.Gis.Geometry.GeoLatLng[])" -->
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.SetIpAddressGeocodingListener(Mapdigit.Gis.Service.IIpAddressGeocodingListener)">
            <summary>
            Sets the ip address geocoding listener.
            </summary>
            <param name="listener">callback when query is done and in progress</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.SetRoutingListener(Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            Set the listener for direction query..
            </summary>
            <param name="listener">The routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetReverseLocations(System.String)">
            <summary>
            Sends a request to servers to reverse geocode the specified address。
            </summary>
            <param name="latlngAddress">The latlng address.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetReverseLocations(System.Int32,System.String)">
            <summary>
            Sends a request to servers to reverse geocode the specified address。
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="latlngAddress">latitude,longitude string address.delimited by comma</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetLocations(System.String)">
            <summary>
            Sends a request to servers to geocode the specified address。
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetLocations(System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            local search
            </summary>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetLocations(System.Int32,System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            local search
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetLocations(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the cell locations.
            </summary>
            <param name="mmc">The MMC.</param>
            <param name="mnc">The MNC.</param>
            <param name="lac">The lac.</param>
            <param name="cid">The cid.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetLocations(System.Int32,System.String)">
            <summary>
            Sends a request to servers to geocode the specified address
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetIpLocations(System.String)">
            <summary>
            Gets the ip locations.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.SetSearchOptions(Mapdigit.Gis.Service.SearchOptions)">
            <summary>
            Sets the search options.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetSearchOptions">
            <summary>
            Gets the search options.
            </summary>
            <returns>the search options</returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetDirections(System.String)">
            <summary>
            Sends a request to servers to get the direction
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.DigitalMapService.GetDirections(System.Int32,System.String)">
            <summary>
            Gets the directions.
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="query">The query.</param>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.ipAddressGeocodingListener">
            <summary>
            IP Address geocoding listener.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.geocodingListener">
            <summary>
            geo coding listener
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.localSearch">
            <summary>
            local search
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.reverseGeocodingListener">
            <summary>
            reverse geocoding listener
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.routingListener">
            <summary>
            routing listener
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.geocoder">
            <summary>
            geo coder
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.reverseGeocoder">
            <summary>
            reverse geo coder
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.directionQuery">
            <summary>
            direction query
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.ipAddressGeocoder">
            <summary>
            ip address geo coder
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.DigitalMapService.cellIdGeocoder">
            <summary>
            cell id geo coder
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CloudMadeMapService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.CloudMade.CloudMadeMapService"/> class.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.CloudMade.CReverseClientGeocoder">
            <summary>
            This class is used to communicate directly with cloudMade servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.IReverseGeocoder">
            <summary>
            query reverse geo coding.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IReverseGeocoder.GetLocations(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to map servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IReverseGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to map servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IReverseGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to map servers to reverse geocode the specified address
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CReverseClientGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CReverseClientGeocoder.GetLocations(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.CloudMade.CReverseClientGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.Google.GClientGeocoder">
            <summary>
            This class is used to communicate directly with Google servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GClientGeocoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.Google.GClientGeocoder"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GClientGeocoder.SetChina(System.Boolean)">
            <summary>
            Set google china or not.
            </summary>
            <param name="china">iquery china or not.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GClientGeocoder.SetGoogleKey(System.String)">
            <summary>
            Sets the google key.
            </summary>
            <param name="key">google query key.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GClientGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GClientGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="mapType">the map type</param>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer">
            <summary>
            Driving diretion command analyser.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.Analyse(System.String)">
            <summary>
            Analyse the input direction in text (English).
            </summary>
            <param name="direction">the input direction description.</param>
            <returns>command element list (5 elements).</returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.AnalyseLastStep(Mapdigit.Gis.MapStep)">
            <summary>
            analysis last step to see if it contains direction on left/right comannd.
            </summary>
            <param name="lastStep">The last step.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.Tokenize(System.String,System.Char)">
            <summary>
            Tokenizes a string with the given delimiter.
            </summary>
            <param name="s">s String to be tokenized.</param>
            <param name="delimiter"> Character that delimits the string</param>
            <returns>Array of tokens(strings)</returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.StartWithConjuction(System.String)">
            <summary>
            check to see if the input start with conjuction.
            </summary>
            <param name="description">The description.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.IsToConjuction(System.String)">
            <summary>
            check to see if its' to conjuction (for to road).
            </summary>
            <param name="conj">The conj.</param>
            <returns>
            	<c>true</c> if [is to conjuction] [the specified conj]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.HasConjuction(System.String)">
            <summary>
            check to see if contains conjuction string.
            </summary>
            <param name="description">The description.</param>
            <returns>
            	<c>true</c> if the specified description has conjuction; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.ProcessConjuction(System.String)">
            <summary>
            process road conjuction string.
            </summary>
            <param name="description">The description.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.ProcessRoadName(System.String,System.Boolean)">
            <summary>
            process road name
            </summary>
            <param name="description">The description.</param>
            <param name="from">if set to <c>true</c> [from].</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.ProcessExtenstion(System.String)">
            <summary>
            Process extentions (entering or go through xxx roundabout).
            </summary>
            <param name="extension">The extension.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.IsWord(System.String,System.Int32,System.String)">
            <summary>
            check to see if the description contains any direction command.
            </summary>
            <param name="description">The description.</param>
            <param name="index"> the start index of the word to check.</param>
            <param name="word">The word.</param>
            <returns>
            	true ,it's a word.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirectionCommandAnalyzer.HasCommand(System.String)">
            <summary>
            check to see if the description contains any direction command.
            </summary>
            <param name="description">The description.</param>
            <returns>
            	true ,if contains direction command.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Service.Google.GDirections">
            <summary>
            This class is used to obtain driving directions results.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirections.SetChina(System.Boolean)">
            <summary>
             Set google china or not.
            </summary>
            <param name="china">query china or not.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirections.SetGoogleKey(System.String)">
            <summary>
            Sets the google key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirections.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.Google.GDirections"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirections.GetDirection(System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="query">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirections.GetDirection(System.Int32,System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="query">the directions query string</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GDirections.GetDirection(Mapdigit.Gis.Geometry.GeoLatLng[],Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="waypoints">Type of the map.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.Google.GLocalSearch">
            <summary>
            This class is used to communicate directly with Google servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GLocalSearch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.Google.GLocalSearch"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GLocalSearch.SetChina(System.Boolean)">
            <summary>
            Set google china or not.
            </summary>
            <param name="china">query china or not.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GLocalSearch.SetGoogleKey(System.String)">
            <summary>
            Set google query key.
            </summary>
            <param name="key">key google query key.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GLocalSearch.GetLocations(System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GLocalSearch.GetLocations(System.Int32,System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GLocalSearch.ReplaceMetaString(System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,System.String)">
            <summary>
            Replaces the meta string.
            </summary>
            <param name="address">The address.</param>
            <param name="start">The start.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Service.Google.GoogleMapService">
            <summary>
            This class is used to store driving directions results
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.Google.GoogleMapService.MapServiceUrlRecordstoreName">
            record store name
        </member>
        <member name="F:Mapdigit.Gis.Service.Google.GoogleMapService.MapTypeUrls">
            map tile urls.
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GoogleMapService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.Google.GoogleMapService"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GoogleMapService.UpdateMapServiceUrl">
            <summary>
            Updates the map tile URL.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.Google.GoogleMapService._mapDataRecordStore">
            record store
        </member>
        <member name="F:Mapdigit.Gis.Service.Google.GoogleMapService._mapServicesUrls">
            map tile urls.
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GoogleMapService.SaveMapServiceUrls">
            <summary>
            Saves the map urls.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GoogleMapService.RestoreMapServiceUrls">
            <summary>
            Restores the map urls.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GoogleMapService.GetMapServiceUrl(System.String)">
            <summary>
            Gets the map service URL.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Service.Google.GReverseClientGeocoder">
            <summary>
            This class is used to communicate directly with Google servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GReverseClientGeocoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.Google.GReverseClientGeocoder"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GReverseClientGeocoder.SetChina(System.Boolean)">
            <summary>
            Set google china or not.
            </summary>
            <param name="china">query china or not.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GReverseClientGeocoder.SetGoogleKey(System.String)">
            <summary>
            Sets the google key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GReverseClientGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GReverseClientGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="mapType">Type of the map.</param>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GReverseClientGeocoder.GetLocations(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.Google.GReverseClientGeocoder.ReplaceMetaString(System.String,System.String)">
            <summary>
            Replaces the meta string.
            </summary>
            <param name="address">The address.</param>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Service.IGeocodingListener">
            <summary>
            Callback when geocoding query is finished.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IGeocodingListener.Done(System.String,Mapdigit.Gis.MapPoint[])">
            <summary>
            Dones the specified query.
            </summary>
            <param name="query">message query context(string)</param>
            <param name="result">the result object.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IGeocodingListener.ReadProgress(System.Int32,System.Int32)">
            <summary>
            Reads the progress.
            </summary>
            <param name="bytes"> the number of bytes has been read.</param>
            <param name="total">total bytes to be read.Total will be zero if not available 
            (content-length header not set)</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.IIpAddressGeocoder">
            <summary>
            query ip address geo addresses.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IIpAddressGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IIpAddressGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="ipAddress">The ip address.</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.IIpAddressGeocodingListener">
            <summary>
            Callback when geocoding query is finished.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IIpAddressGeocodingListener.Done(System.String,Mapdigit.Gis.Service.IpAddressLocation)">
            <summary>
            call when query is done.
            </summary>
            <param name="query">The query.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IIpAddressGeocodingListener.ReadProgress(System.Int32,System.Int32)">
            <summary>
            Read progress notification.
            </summary>
            <param name="bytes">the number of bytes has been read.</param>
            <param name="total">total bytes to be read.Total will be zero if not available
            (content-length header not set)</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.IpAddressGeocoder">
            <summary>
            This class is used to communicate directly with Google servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressGeocoder.LocalAddress">
            <summary>
            local address
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressGeocoder.IpNotFound">
            <summary>
            IP not found
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IpAddressGeocoder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.IpAddressGeocoder"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IpAddressGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IIpAddressGeocodingListener)">
            <summary>
            Sends a request to Google servers to geocode the specified address
            </summary>
            <param name="ipAddress">The ip address.</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.IpAddressLocation">
            <summary>
            IP address location info.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.City">
            <summary>
            City
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Postal">
            <summary>
            Postal address
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.MetroCode">
            <summary>
            Metro code
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.AreaCode">
            <summary>
            Area code
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Isp">
            <summary>
            ISP provider
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Organization">
            <summary>
            Organization
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Error">
            <summary>
            Error info.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.IpAddressLocation.Ipaddress">
            <summary>
            IP address.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.IReverseGeocodingListener">
            <summary>
            Callback when geocoding query is finished.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.IReverseGeocodingListener.Done(System.String,Mapdigit.Gis.MapPoint[])">
            <summary>
            Dones the specified query.
            </summary>
            <param name="query">message query context(string).</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.IReverseGeocodingListener.ReadProgress(System.Int32,System.Int32)">
            <summary>
            Read progress notification.
            </summary>
            <param name="bytes">the number of bytes has been read.</param>
            <param name="total">total bytes to be read.Total will be zero if not available
            (content-length header not set).</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapAbc.MapAbcMapService">
            <summary>
            This class defines mapabc map services.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MapAbcMapService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Service.MapAbc.MapAbcMapService"/> class.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapAbc.MClientGeocoder">
            <summary>
            This class is used to communicate directly with MapAbc servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MClientGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to mapabc servers to geocode the specified address
            </summary>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MClientGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to mapabc servers to geocode the specified address
            </summary>
            <param name="cityCode">the city code</param>
            <param name="address">address to query</param>
            <param name="listener">callback when query is done.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapAbc.MDirectionCommandAnalyzer">
            <summary>
            Driving diretion command analyser.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MDirectionCommandAnalyzer.Analyse(System.String,System.String)">
            <summary>
            Analyse the input direction in text (English).
            </summary>
            <param name="direction">the input direction description.</param>
            <param name="roadName"></param>
            <returns>command element list (5 elements).</returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MDirectionCommandAnalyzer.IsWord(System.String,System.Int32,System.String)">
            <summary>
            check to see if the description contains any direction command.
            </summary>
            <param name="description">The description.</param>
            <param name="index"> the start index of the word to check.</param>
            <param name="word">The word.</param>
            <returns>
            	true ,it's a word.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MDirectionCommandAnalyzer.HasCommand(System.String)">
            <summary>
            check to see if the description contains any direction command.
            </summary>
            <param name="description">The description.</param>
            <returns>
            	true ,if contains direction command.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapAbc.MDirections">
            <summary>
            This class is used to obtain driving directions results.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MDirections.#ctor">
            <summary>
            default constructor.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MDirections.GetDirection(Mapdigit.Gis.Geometry.GeoLatLng[],Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="waypoints">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MDirections.GetDirection(System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="query">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MDirections.GetDirection(System.Int32,System.String,Mapdigit.Gis.Service.IRoutingListener)">
            <summary>
            This method issues a new directions query. The query parameter is
            a string containing any valid directions query,
            e.g. "from: Seattle to: San Francisco" or
            "from: Toronto to: Ottawa to: New York".
            </summary>
            <param name="mapType">map type.</param>
            <param name="query">the directions query string.</param>
            <param name="listener">the routing listener.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapAbc.MLocalSearch">
            <summary>
            This class is used to communicate directly with Mapabc servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MLocalSearch.GetLocations(System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to Mapabc servers to geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MLocalSearch.GetLocations(System.Int32,System.String,System.Int32,Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Geometry.GeoBounds,Mapdigit.Gis.Service.IGeocodingListener)">
            <summary>
            Sends a request to mapabc servers to geocode the specified address
            </summary>
            <param name="cityCode">city code.</param>
            <param name="address">The address.</param>
            <param name="start">The start index.</param>
            <param name="center">The center.</param>
            <param name="bound">The bound.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapAbc.MReverseClientGeocoder">
            <summary>
            This class is used to communicate directly with Mapabc servers to obtain
            geocodes for user specified addresses. In addition, a geocoder maintains
            its own cache of addresses, which allows repeated queries to be answered
            without a round trip to the server.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MReverseClientGeocoder.GetLocations(System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MReverseClientGeocoder.GetLocations(Mapdigit.Gis.Geometry.GeoLatLng,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapAbc.MReverseClientGeocoder.GetLocations(System.Int32,System.String,Mapdigit.Gis.Service.IReverseGeocodingListener)">
            <summary>
            Sends a request to Google servers to reverse geocode the specified address
            </summary>
            <param name="cityCode">city code.</param>
            <param name="address">The address.</param>
            <param name="listener">The listener.</param>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapKey">
            <summary>
            This class defines the map service key for different map servers. i.e.
            Google map key, bing map key, MapAbc Key ,OpenStreet Map Key.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKey.MapkeyTypeGoogle">
            <summary>
            google map key.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKey.MapkeyTypeBing">
            <summary>
            bing map key.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKey.MapkeyTypeMapabc">
            <summary>
            map abc map key.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKey.MapkeyTypeCloudMade">
            <summary>
            open street map key.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapKey.#ctor(System.Int32,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="key">key type</param>
            <param name="keyValue">key value.</param>
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKey._keyType">
            <summary>
            key type.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKey._keyString">
            <summary>
            key string.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Service.MapKey.KeyType">
            <summary>
             The key type.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Service.MapKey.KeyValue">
            <summary>
            get the key value.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Service.MapKeyRepository">
            <summary>
            MapKeyRepsoitory store all map keys used for map service.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapKeyRepository.AddMapKey(Mapdigit.Gis.Service.MapKey)">
            <summary>
            Add map key to user defined repository.
            </summary>
            <param name="mapKey">the map key to be added</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapKeyRepository.AddMapKey(System.Int32,System.String)">
            <summary>
            Add map key to user defined repository.
            </summary>
            <param name="keyType">key type.</param>
            <param name="keyValue">key value.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapKeyRepository.RemoveMapKey(Mapdigit.Gis.Service.MapKey)">
            <summary>
            remove a map key from user defined map key repository.
            </summary>
            <param name="mapKey">map key to be removed</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapKeyRepository.RemoveMapKey(System.Int32,System.String)">
            <summary>
            remove a map key from user defined map key repository.
            </summary>
            <param name="keyType">key type.</param>
            <param name="keyValue">key value.</param>
        </member>
        <member name="M:Mapdigit.Gis.Service.MapKeyRepository.GetKey(System.Int32)">
            <summary>
            retrieve a key for the map repositories.
            </summary>
            <param name="keyType">key type</param>
            <returns> a key for the map repositories</returns>
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKeyRepository.BuildinMapKeyRepository">
            build in map key repository.
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKeyRepository.UserDefinedMapKeyRepository">
            user defined map key repository.
        </member>
        <member name="F:Mapdigit.Gis.Service.MapKeyRepository.Rnd">
            random select a map key.
        </member>
        <member name="T:Mapdigit.Gis.Service.SearchOptions">
            <summary>
            This class is used to store driving directions options
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.RouteTypeDriving">
            <summary>
            route for car driving
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.RouteTypeWalking">
            <summary>
            route for walking
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.RouteTypeCommuting">
            <summary>
            route for bus /train
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.RouteUnitKm">
            <summary>
            KM
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.RouteUnitMile">
            <summary>
            Mile.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.RoutingType">
            <summary>
            type of routing
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.RouteUnit">
            <summary>
            Route unit
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.LanguageId">
            <summary>
            language id ,default is en-US.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.AvoidHighway">
            <summary>
            Avoid high way or not
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.AvoidTollway">
            <summary>
            Avoid toll way or not.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Service.SearchOptions.NumberOfSearchResult">
            <summary>
            default number of search result.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.TileSystem">
            <summary>
            TileSystem code
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.Clip(System.Double,System.Double,System.Double)">
            <summary>
            Clips a number to the specified minimum and maximum values.
            </summary>
            <param name="n">The number to clip.</param>
            <param name="minValue">Minimum allowable value.</param>
            <param name="maxValue">Maximum allowable value.</param>
            <returns>The clipped value.</returns>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.MapSize(System.Int32)">
            <summary>
            Determines the map width and height (in pixels) at a specified level
            of detail.
            </summary>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>The map width and height in pixels.</returns>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.GroundResolution(System.Double,System.Int32)">
            <summary>
            Determines the ground resolution (in meters per pixel) at a specified
            latitude and level of detail.
            </summary>
            <param name="latitude">Latitude (in degrees) at which to measure the
            ground resolution.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>The ground resolution, in meters per pixel.</returns>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.MapScale(System.Double,System.Int32,System.Int32)">
            <summary>
            Determines the map scale at a specified latitude, level of detail,
            and screen resolution.
            </summary>
            <param name="latitude">Latitude (in degrees) at which to measure the
            map scale.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="screenDpi">Resolution of the screen, in dots per inch.</param>
            <returns>The map scale, expressed as the denominator N of the ratio 1 : N.</returns>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.LatLongToPixelXy(System.Double,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts a point from latitude/longitude WGS-84 coordinates (in degrees)
            into pixel XY coordinates at a specified level of detail.
            </summary>
            <param name="latitude">Latitude of the point, in degrees.</param>
            <param name="longitude">Longitude of the point, in degrees.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="pixelX">Output parameter receiving the X coordinate in pixels.</param>
            <param name="pixelY">Output parameter receiving the Y coordinate in pixels.</param>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.PixelXyToLatLong(System.Int32,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Converts a pixel from pixel XY coordinates at a specified level of detail
            into latitude/longitude WGS-84 coordinates (in degrees).
            </summary>
            <param name="pixelX">X coordinate of the point, in pixels.</param>
            <param name="pixelY">Y coordinates of the point, in pixels.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="latitude">Output parameter receiving the latitude in degrees.</param>
            <param name="longitude">Output parameter receiving the longitude in degrees.</param>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.PixelXyToTileXy(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts pixel XY coordinates into tile XY coordinates of the tile containing
            the specified pixel.
            </summary>
            <param name="pixelX">Pixel X coordinate.</param>
            <param name="pixelY">Pixel Y coordinate.</param>
            <param name="tileX">Output parameter receiving the tile X coordinate.</param>
            <param name="tileY">Output parameter receiving the tile Y coordinate.</param>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.TileXyToPixelXy(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts tile XY coordinates into pixel XY coordinates of the upper-left pixel
            of the specified tile.
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="pixelX">Output parameter receiving the pixel X coordinate.</param>
            <param name="pixelY">Output parameter receiving the pixel Y coordinate.</param>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.TileXyToQuadKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts tile XY coordinates into a QuadKey at a specified level of detail.
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>A string containing the QuadKey.</returns>
        </member>
        <member name="M:Mapdigit.Gis.TileSystem.QuadKeyToTileXy(System.String,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Converts a QuadKey into tile XY coordinates.
            </summary>
            <param name="quadKey">QuadKey of the tile.</param>
            <param name="tileX">Output parameter receiving the tile X coordinate.</param>
            <param name="tileY">Output parameter receiving the tile Y coordinate.</param>
            <param name="levelOfDetail">Output parameter receiving the level of detail.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.DataField">
            <summary>
            Defines a filed of a database table.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField.TypeChar">
            <summary>
            Data type is char(string).
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField.TypeInteger">
            <summary>
            Data type is integer(4 bytes).
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField.TypeSmallint">
            <summary>
            Data type is short (2 bytes).
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField.TypeDecimal">
            <summary>
            Data type is double.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField.TypeFloat">
            <summary>
            Data type is float.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField.TypeDate">
            <summary>
            Data type is date.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField.TypeLogical">
            <summary>
            Data type is boolean.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataField.#ctor(System.String,System.Byte,System.Int32,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.DataField"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="width">The width.</param>
            <param name="precision">The precision.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataField.GetName">
            <summary>
            Gets the name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataField.GetFieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataField.GetWidth">
            <summary>
            Gets the width.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataField.GetPrecision">
            <summary>
            Gets the precision.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField._fieldName">
            the name of the field.
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField._fieldType">
            the type of the field.
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField._fieldWidth">
            the Width of the fields.
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataField._fieldPrecision">
            the precision of the field.
        </member>
        <member name="T:Mapdigit.Gis.Vector.DataRowValue">
            <summary>
            Defines a row of a database table.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.DataRowValue"/> class.
            </summary>
            <param name="fieldValues">The field values.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.GetString(System.Int32)">
            <summary>
            Gets the value of the specified column as a String.
            </summary>
            <param name="ordinal"> The zero-based column ordinal.</param>
            <returns>The value of the specified column as a String</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.GetInt(System.Int32)">
            <summary>
            Gets the value of the specified column as a integer.
            </summary>
            <param name="ordinal">The zero-based column ordinal</param>
            <returns>The value of the specified column as a integer</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.GetShort(System.Int32)">
            <summary>
            Gets the value of the specified column as a short.
            </summary>
            <param name="ordinal"> The zero-based column ordinal..</param>
            <returns>The value of the specified column as a short</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.GetDouble(System.Int32)">
            <summary>
            Gets the value of the specified column as a double.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a double</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.GetDate(System.Int32)">
            <summary>
            Gets the value of the specified column as a string(Date).
            </summary>
            <param name="ordinal">The zero-based column ordinal..</param>
            <returns>The value of the specified column as a string</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.GetBoolean(System.Int32)">
            <summary>
            Gets the boolean.
            </summary>
            <param name="ordinal">The ordinal.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataRowValue._fieldValues">
            internal store all field values in string format.
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataRowValue.IsNumber(System.String)">
            <summary>
            Determines whether the specified STR value is number.
            </summary>
            <param name="strValue">The STR value.</param>
            <returns>
            	<c>true</c> if the specified STR value is number; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.DataTable">
            <summary>
            Define one database table.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataTable.Fields">
            <summary>
            Data table definition.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.#ctor(Mapdigit.Gis.Vector.MapFile.TabularData,Mapdigit.Gis.Vector.DataField[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.DataTable"/> class.
            </summary>
            <param name="tabularData">The tabular data.</param>
            <param name="fields">The fields.</param>
            <param name="recordCount">The record count.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.GetRecord(System.Int32)">
            <summary>
            Get one record (index) of give mapInfo ID.
            </summary>
            <param name="mapInfoId">The map info ID.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.GetRecordCount">
            <summary>
            Gets the record count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.MoveFirst">
            <summary>
            Moves to the first record.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.MoveLast">
            <summary>
            Moves to the last record.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.MovePrevious">
            <summary>
            Moves to the previous record.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.MoveNext">
            <summary>
            Moves to the next record.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.GetFieldIndex(System.String)">
            <summary>
            Get the column index of given column name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>the index of the column(field) or -1 if not found.</returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataTable._currentIndex">
            current index id.
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataTable._tabularData">
            Tabular data
        </member>
        <member name="F:Mapdigit.Gis.Vector.DataTable._recordCount">
            total record Count;
        </member>
        <member name="M:Mapdigit.Gis.Vector.DataTable.ReadOneRecord">
            <summary>
            Reads the one record.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.FindCondition">
            <summary>
            Defines a find condition when seach for records.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.FindCondition.FieldIndex">
            <summary>
            the colume to be matched.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.FindCondition.MatchString">
            <summary>
            string to be matched.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.FindCondition.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.FindCondition"/> class.
            </summary>
            <param name="fieldIndex">Index of the field.</param>
            <param name="matchString">The match string.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.FindConditions">
            <summary>
            Defines a find condition collection when seach for records.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.FindConditions.LogicalOr">
            <summary>
            condition is OR operation.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.FindConditions.LogicalAnd">
            <summary>
            condition is AND operation.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.FindConditions.MaxMatchRecord">
            <summary>
            the Max matching records, default 100;
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.FindConditions.Fields">
            <summary>
            the table field defintion.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.FindConditions._findConditions">
            the total conditions.
        </member>
        <member name="M:Mapdigit.Gis.Vector.FindConditions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.FindConditions"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.FindConditions.ClearCondition">
            <summary>
            Clears the condition.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.FindConditions.AddCondition(System.Int32,System.String)">
            <summary>
            Adds the condition.
            </summary>
            <param name="fieldIndex">Index of the field.</param>
            <param name="matchString">The match string.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.FindConditions.GetConditions">
            <summary>
            Gets the conditions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.FindConditions.AddCondition(System.String,System.String)">
            <summary>
            Adds the condition.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="matchString">The match string.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.GeoSet">
            <summary>
            This class is used to store driving directions results
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapUnitMile">
            map unit is in miles.
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapUnitKm">
            map unit is in kilometer.
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet._mapUnit">
            map unit.
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.FontEx">
            <summary>
            default font Ex
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.BackColor">
            <summary>
            the backcolor for this map.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.GeoSet"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.GeoSet"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.AddMapFeatureLayer(Mapdigit.Gis.Vector.MapFeatureLayer)">
            <summary>
            Add a map layer to map's layer collection.
            </summary>
            <param name="mapLayer">The map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.GetMapFeatureLayer(System.Int32)">
            <summary>
            Gets the map feature layer.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.GetMapFeatureLayerCount">
            <summary>
            Gets the map feature layer count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.InsertMapFeatureLayer(Mapdigit.Gis.Vector.MapFeatureLayer,System.Int32)">
            <summary>
            Inserts the specified map layer to map's layer collection at the
            specified index. Each map layer in map's layer collection  with an index
            greater or equal to the specified index is shifted upward to have an
            index one greater than the value it had previously.
            </summary>
            <param name="mapLayer">The map layer.</param>
            <param name="index"> where to insert the new map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.MoveMapFeatureLayer(System.Int32,System.Int32)">
             <summary>
            Moves a layer in the Layer collection to change the order in which
             layers are drawn.
             </summary>
             <param name="from">Index number of the layer to move. The topmost layer is 0.</param>
             <param name="to">new location for the layer. For example, if you want it to be
              the second layer, use 1</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.RemoveMapFeatureLayer(Mapdigit.Gis.Vector.MapFeatureLayer)">
            <summary>
            Removes the map feature layer.
            </summary>
            <param name="mapLayer">The map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.RemoveAllMapFeatureLayers">
            <summary>
            Removes all map feature layers.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.GetMapFeatureLayers">
            <summary>
            Gets the map feature layers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.Search(System.String)">
             <summary>
            get all records based on given string. the seach will search based on
             map layer's key field.
             </summary>
             <param name="matchString">The match string.</param>
             <returns>a hashtable array contains of all matched record.
             the key is the mapInfo ID. the value is the matched string.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.Search(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            get all records based on given rectangle.
            </summary>
            <param name="rectGeo">The rect geo.</param>
            <returns>a hashtable array contains of all matched record.
             the key is the mapInfo ID. the value is the MBR of map object.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.Open">
            <summary>
            Opens this geoset.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.Close">
            <summary>
            Closes this geoset.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.Search(System.Int32,Mapdigit.Gis.Vector.FindConditions)">
            <summary>
            get all records based on search condition  in give map layer.
            </summary>
            <param name="index">the index of given map layer</param>
            <param name="findConditions">The find conditions.</param>
            <returns>a hashtable of all matched record.the key is the mapInfo ID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.Search(System.Int32,Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            Searches the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="rectGeo">The rect geo.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.ReadGeoSet(System.IO.BinaryReader)">
            <summary>
            Reads the geo set.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.GetMapMapFeatureLayerInfo(System.String)">
            <summary>
            Gets the map map feature layer info.
            </summary>
            <param name="layerName">Name of the layer.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.GetMapMapFeatureLayer(System.String)">
            <summary>
            Gets the map map feature layer.
            </summary>
            <param name="layerName">Name of the layer.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.GetLayerNames">
            <summary>
            Gets the layer names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.GeoSet.GetBounds">
            <summary>
            Gets the bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet._mapFeatureLayers">
            map Layers object.
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet._bounds">
            the boundary of this map.
        </member>
        <member name="T:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo">
            <summary>
            Map Layer Info.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.ZoomLevel">
            <summary>
            support zoom Level
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.Visible">
            <summary>
            Visiable or not
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.ZoomMax">
            <summary>
            max zoom 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.ZoomMin">
            <summary>
            min zoom 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.LayerName">
            <summary>
            name of the layer
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.FontName">
            <summary>
            name of the font.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.GeoSet.MapFeatureLayerInfo.FontColor">
            <summary>
            color of the font.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFeature">
            <summary>
             MapFeature defines a map feature in a map layer.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeature.Crlf">
            Carriage return.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeature.MapInfoId">
            <summary>
            The MapInfo ID of this feature.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeature.MapObject">
            <summary>
            The geo infomation for this map feature.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeature.DataRowValue">
            <summary>
            the tabular information for this map feature.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeature.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFeature"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeature.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFeatureLayer">
            <summary>
            MapLayer defines a map layer.Computer maps are organized into layers. Think 
            of the layers as transparencies that are stacked on top of one another. Each
            layer contains different aspects of the entire map. Each layer contains 
            different map objects, such as regions, points, lines and text. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.FeatureTypePoint">
            <summary>
             Predominant feature type is Point.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.FeatureTypePline">
            <summary>
             Predominant feature type is polyline.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.FeatureTypeRegion">
            <summary>
             Predominant feature type is region.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.CacheSize">
            the internal cache size
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.AutoLabel">
            <summary>
            This property controls whether a layer is automatically labeled. In 
            order for a label to be displayed automatically, its centroid must be 
            within the viewable map area. This is a Boolean value, and its default
            is true.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.FontColor">
            <summary>
            font color.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.FontName">
            <summary>
            Name of the font.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.LayerName">
            <summary>
            name of the layer
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.Bounds">
            <summary>
            A Rectangle object representing the geographic extents 
            (i.e., the minimum bounding rectangle) of all objects in the layer.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.DataTable">
            <summary>
            The tabular data table object associated with this map layer.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.KeyField">
            <summary>
            This string property identifies the column (field) name in the layer's
            tabular table that will be the name property of a feature object. 
            It currently defaults to the first column in the layer's table or the 
            column with name as "Name" if there is any.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.PredominantFeatureType">
            <summary>
            Predominant feature type. can be POINT,PLINE or REGION.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.Visible">
            <summary>
            Is this map layer visible.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.Description">
            <summary>
            Description for this mapLayer.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.ZoomLevel">
            <summary>
            This controls whether the layer is zoom layered. Zoom layering controls 
            the range of zoom levels (Distance across map) for which the layer is 
            displayed. If Zoom Layering is on, then the values stored in the zoomMax 
            and zoomMin properties are used. This is a Boolean value, and the default
            is false.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.ZoomMax">
            <summary>
            If ZoomLayering is on (zoomLevel=true), then this specifies 
            the maximum zoom value for which a layer will be drawn on the map.
            This takes a double value specifying Distance in Map units (Map.mapUnit).
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer.ZoomMin">
            <summary>
            If ZoomLayering is on (zoomLevel=true), then this specifies 
            the minimum zoom value for which a layer will be drawn on the map. 
            This takes a double value specifying Distance in Map units (Map.MapUnit).
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer._keyFieldIndex">
            the index of the key field.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer._mapFile">
            the map file related to this map layer.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFeatureLayer._mapObjectCache">
            MapObject internal cache.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFeatureLayer"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.Open">
            <summary>
            Opens this map layer.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.Close">
            <summary>
            Closes this map layer.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.GetMapFeatureById(System.Int32)">
            <summary>
            get MapFeature at given mapInfoID.
            </summary>
            <param name="mapInfoId">The map info id.</param>
            <returns>MapFeature at given mapInfoID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.GetMapObjectById(System.Int32)">
            <summary>
            Gets the map object by id.
            </summary>
            <param name="mapInfoId">The map info id.</param>
            <returns> MapObject at given mapInfoID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.GetDataRowValueById(System.Int32)">
            <summary>
            get tabular record at given mapInfo ID.
            </summary>
            <param name="mapInfoId">The map info id.</param>
            <returns>tabular record at given mapInfoID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.Search(Mapdigit.Gis.Vector.FindConditions)">
            <summary>
            get all records based on search condition.
            </summary>
            <param name="findConditions">The find conditions.</param>
            <returns>a hashtable of all matched record.the key is the mapInfo ID. the
             value is the matched string</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.Search(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            get all records based on given rectangle.
            </summary>
            <param name="rectGeo">the boundary</param>
            <returns>a hashtable of all matched record.the key is the mapInfo ID. the
            value is the matched MapObject's MBR</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.GetRecordCount">
            <summary>
            Gets the record count.
            </summary>
            <returns> the total record number</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.CanBeShown(System.Double)">
            <summary>
            Determines whether this instance [can be shown] the specified screen width distance.
            </summary>
            <param name="screenWidthDistance">The screen width distance.</param>
            <returns>
            	<c>true</c> if this instance [can be shown] the specified screen 
            width distance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.StoreToCache(System.Int32,Mapdigit.Gis.Vector.MapFeature)">
            <summary>
            Store the mapFeature to cache.
            </summary>
            <param name="mapObjectIdKey">The map object id key.</param>
            <param name="mapFeature">The map feature.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFeatureLayer.SortMapFeature(Mapdigit.Gis.Vector.MapFeature[])">
            <summary>
            Sorts the map feature.
            </summary>
            <param name="mapFeatures">The map features.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.Gb2312">
            <summary>
            GB2312 get Pinyin code for a chinese.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Gb2312.NumberOfChinese">
            how many chinese character.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Gb2312.Recordsize">
            the size of each record.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Gb2312.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.Gb2312"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Gb2312.BinarySearch(System.String)">
            <summary>
            binary search (Chinese).
            </summary>
            <param name="queryValue">The query value.</param>
            <returns>the string recrod ID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Gb2312.BinarySearch(System.String,System.IO.BinaryReader)">
            <summary>
            binary search (Chinese).
            </summary>
            <param name="queryValue">The query value.</param>
            <param name="reader">The reader.</param>
            <returns>the string recrod ID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Gb2312.GetPinyinCode(System.String)">
            <summary>
            Get pinyin code for given chinese string. the pinyin code is consists with
            first letter of pinyin for each Chinese character.
            </summary>
            <param name="chinese">The chinese.</param>
            <returns>pinyin code</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Gb2312.GetPinyinCode(System.String,System.IO.BinaryReader)">
            <summary>
            Get pinyin code for given chinese string. the pinyin code is consists with
            first letter of pinyin for each Chinese character.
            </summary>
            <param name="chinese">The chinese.</param>
            <param name="reader">The reader.</param>
            <returns>pinyin code</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Gb2312.GetPinyinCodes(System.String,System.IO.BinaryReader)">
            <summary>
            * Get pinyin code for given chinese string. the pinyin code is consists with
            first letter of pinyin for each Chinese character.
            </summary>
            <param name="chinese">The chinese.</param>
            <param name="reader">The reader.</param>
            <returns>pinyin code</returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Gb2312._reader">
            the data input reader for the map file.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Gb2312._firstLetter">
            the first Pinyin letter;
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Gb2312._staticFirstLetter">
            the first Pinyin letter;
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Gb2312.GetPinYinAtPosition(System.Int32,System.String,System.IO.BinaryReader)">
            <summary>
            Gets the pin yin at position.
            </summary>
            <param name="chineseId">The chinese id.</param>
            <param name="queryValue">The query value.</param>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.GeoData">
            <summary>
            geo data section of the map file.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.Section">
            <summary>
            Abstract class for one section in the map file
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Section.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.Section"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Section.GetSize">
            <summary>
            return the size of this section.
            </summary>
            <returns>the size of this section.</returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Section.offset">
            the start offset(in map file) of this section.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Section.reader">
            the data input reader for the map file.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Section._size">
            the size(length) of this section.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.GeoData.DoublePrecision">
            when store latitude/longitude , it store as integer.
            to Convert to an interget ,it muliple by DOUBLE_PRECISION.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.GeoData"/> class.
            </summary>
            <param name="reader"></param>
            <param name="offset"></param>
            <param name="size"></param>
            constructor.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapObject(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
             get a map object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapPoint(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map point object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapMultiPoint(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map multipoint object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapPline(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map pline object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapMultiPline(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map multipline object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapRegion(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map region object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapMultiRegion(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map multiregion object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapCollection(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map collection object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.GeoData.GetMapText(Mapdigit.Gis.Vector.MapFile.RecordIndex)">
            <summary>
            get a map text object at given index.
            </summary>
            <param name="recordIndex">Index of the record.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.Header">
            <summary>
            Header section of the map file.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.Header.DoublePrecision">
            when store latitude/longitude , it store as integer.
            to Convert to an interget ,it muliple by DOUBLE_PRECISION.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Header.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.Header"/> class.
            </summary>
            <param name="reader"></param>
            <param name="offset"></param>
            <param name="size"></param>
            constructor.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.Header.IsJavaFormat">
            <summary>
            Determines whether [is java format].
            </summary>
            <returns>
            	<c>true</c> if [is java format]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.MapFile">
            <summary>
            Guidebee Map file reader.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile.DoublePrecision">
            when store latitude/longitude , it store as integer.
            to Convert to an interget ,it muliple by DOUBLE_PRECISION.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile.Header">
            file header section object.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile.TabularData">
            tabular data section.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.#ctor(System.IO.BinaryReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.MapFile"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.Open">
            <summary>
            Open the map file.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.Close">
            <summary>
            Closes this map.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.GetRecordCount">
            <summary>
            Gets the record count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.GetMapObject(System.Int32)">
            <summary>
            get MapObject at given mapInfoID.
            </summary>
            <param name="mapInfoId">The map info id.</param>
            <returns>MapObject at given mapInfoID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.GetDataRowValue(System.Int32)">
            <summary>
            get tabular record at given mapInfo ID.
            </summary>
            <param name="mapInfoId">The map info ID.</param>
            <returns>tabular record at given mapInfoID.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.Search(Mapdigit.Gis.Vector.FindConditions)">
            <summary>
            get all records based on search condition.
            </summary>
            <param name="findConditions">The find conditions.</param>
            <returns>a hashtable of all matched record.the key is the mapInfo ID</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.GetFields">
            <summary>
            get table field definition.
            </summary>
            <returns>table field definition</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.SearchMapObjectsInRect(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            get all records based on given rectangle.
            </summary>
            <param name="rectGeo">the boundary</param>
            <returns>a hashtable of all matched record.the key is the mapInfo ID</returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile._reader">
            reader to read the data from the map file.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile._recordIndex">
            record index section.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile._rtreeIndex">
            rtree index section.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile._stringIndex">
            string index section.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile._stringData">
            string data section.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile._geoData">
            geo data section.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.MapFile._tree">
            Rtree index file.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.MapFile.BinarySearch(System.String)">
            <summary>
            Binaries the search.
            </summary>
            <param name="queryValue">The query value.</param>
            <returns>the string recrod ID.</returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.RecordIndex">
            <summary>
            Record index section of the map file.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.Recordsize">
            the size of the record index record.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.MapObjectType">
            The type of the map object.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.RecordOffset">
            the offset of the record.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.RecordLength">
            the lenght of the record.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.MinX">
            the MinX of the MBR.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.MinY">
            the MinY of the MBR.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.MaxX">
            the MaxX of the MBR.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.MaxY">
            the MaxY of the MBR.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.Param1">
            Map object param1 (depends on map object type).
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.Param2">
            Map object param2 (depends on map object type).
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex.Param3">
            Map object param3 (depends on map object type).
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.RecordIndex.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.RecordIndex"/> class.
            </summary>
            <param name="reader"></param>
            <param name="offset"></param>
            <param name="size"></param>
            constructor.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.RecordIndex.GetRecord(System.Int32)">
            <summary>
            Get one record (index) of give mapInfo ID.
            </summary>
            <param name="mapInfoId">The map info ID.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.RecordIndex.MovePrevious">
            <summary>
             Get next record (index).
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.RecordIndex.MoveNext">
             <summary>
            Get previous record (index).
             </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RecordIndex._currentIndex">
            current index id.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.RecordIndex.ReadOneRecord">
            <summary>
            Reads the one record.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.RTreeIndex">
            <summary>
            rtree index section of the map file.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.RTreeIndex.File">
            the rtree index file.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.RTreeIndex.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.RTreeIndex"/> class.
            </summary>
            <param name="reader"></param>
            <param name="offset"></param>
            <param name="size"></param>
            constructor.
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.StringData">
            <summary>
            string data section of the map file.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringData.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.StringData"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringData.GetRecord(System.Int64)">
            <summary>
            Gets the record.
            </summary>
            <param name="off">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringData.GetMapInfoIdAndField(System.Int64)">
            <summary>
            Get one string value.
            </summary>
            <param name="off">The offset.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.StringIndex">
            <summary>
            string index section of the map file.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.StringIndex.RECORDSIZE">
            the size of the record index record.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.StringIndex.RecordOffset">
            the offset of the record.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.StringIndex.RecordLength">
            the lenght of the record.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.StringIndex.RecordCount">
            total record count;
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringIndex.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.StringIndex"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringIndex.GetRecord(System.Int32)">
             <summary>
            Get one record (index) of give record ID.
             </summary>
             <param name="recordId">The record ID.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringIndex.MovePrevious">
            <summary>
            Get previous record (index).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringIndex.MoveNext">
             <summary>
            Get next record (index).
             </summary>
             <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.StringIndex._currentIndex">
            current index id.
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.StringIndex.ReadOneRecord">
            <summary>
            Reads the one record.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.MapFile.TabularData">
            <summary>
            tabular data section of the map file.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.TabularData.#ctor(System.IO.BinaryReader,System.Int64,System.Int64,Mapdigit.Gis.Vector.DataField[],Mapdigit.Gis.Vector.MapFile.StringData,Mapdigit.Gis.Vector.MapFile.StringIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.MapFile.TabularData"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
            <param name="fields">The fields.</param>
            <param name="stringData">The string data.</param>
            <param name="stringIndex">Index of the string.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.MapFile.TabularData.GetRecord(System.Int32)">
            <summary>
            Get one record (index) of give mapInfo ID.
            </summary>
            <param name="mapInfoId">The map info ID.</param>
            <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.TabularData._fields">
            table field defintion.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.TabularData._recordSize">
            the lenght of one record.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.TabularData._stringData">
            string data section object.
        </member>
        <member name="F:Mapdigit.Gis.Vector.MapFile.TabularData._stringIndex">
            string index section object.
        </member>
        <member name="T:Mapdigit.Gis.Vector.PngEncoder">
            <summary>
             PNG Encoder for J2ME
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoder.GetPngrgb(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Returns a PNG stored in a byte array from the supplied values.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="rgb">The RGB.</param>
            <returns>a byte array containing PNG data</returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.IChecksum">
            <summary>
            Interface to compute a data checksum used by checked input/output streams.
            A data checksum can be updated by one byte or with a byte array. After each
            update the value of the current checksum can be returned by calling
            <code>getValue</code>. The complete checksum object can also be reset
            so it can be used again with new data.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.IChecksum.Reset">
            <summary>
            Resets the data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.IChecksum.Update(System.Int32)">
            <summary>
            Adds one byte to the data checksum.
            </summary>
            <param name = "value">
            the data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.IChecksum.Update(System.Byte[])">
            <summary>
            Updates the data checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.IChecksum.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buffer">
            The buffer which contains the data
            </param>
            <param name = "offset">
            The offset in the buffer where the data starts
            </param>
            <param name = "count">
            the number of data bytes to add.
            </param>
        </member>
        <member name="P:Mapdigit.Gis.Vector.IChecksum.Value">
            <summary>
            Returns the data checksum computed so far.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.Adler32">
            <summary>
            Computes Adler32 checksum for a stream of data. An Adler32
            checksum is not as reliable as a CRC32 checksum, but a lot faster to
            compute.
            
            The specification for Adler32 may be found in RFC 1950.
            ZLIB Compressed Data Format Specification version 3.3)
            
            
            From that document:
            
                 "ADLER32 (Adler-32 checksum)
                  This contains a checksum value of the uncompressed data
                  (excluding any dictionary data) computed according to Adler-32
                  algorithm. This algorithm is a 32-bit extension and improvement
                  of the Fletcher algorithm, used in the ITU-T X.224 / ISO 8073
                  standard.
            
                  Adler-32 is composed of two sums accumulated per byte: s1 is
                  the sum of all bytes, s2 is the sum of all s1 values. Both sums
                  are done modulo 65521. s1 is initialized to 1, s2 to zero.  The
                  Adler-32 checksum is stored as s2*65536 + s1 in most-
                  significant-byte first (network) order."
            
             "8.2. The Adler-32 algorithm
            
               The Adler-32 algorithm is much faster than the CRC32 algorithm yet
               still provides an extremely low probability of undetected errors.
            
               The modulo on unsigned long accumulators can be delayed for 5552
               bytes, so the modulo operation time is negligible.  If the bytes
               are a, b, c, the second sum is 3a + 2b + c + 3, and so is position
               and order sensitive, unlike the first sum, which is just a
               checksum.  That 65521 is prime is important to avoid a possible
               large class of two-byte errors that leave the check unchanged.
               (The Fletcher checksum uses 255, which is not prime and which also
               makes the Fletcher check insensitive to single byte changes 0 -
               255.)
            
               The sum s1 is initialized to 1 instead of zero to make the length
               of the sequence part of s2, so that the length does not have to be
               checked separately. (Any sequence of zeroes has a Fletcher
               checksum of zero.)"
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Adler32.BASE">
            <summary>
            largest prime smaller than 65536
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Adler32.#ctor">
            <summary>
            Creates a new instance of the Adler32 class.
            The checksum starts off with a value of 1.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Adler32.Reset">
            <summary>
            Resets the Adler32 checksum to the initial value.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Adler32.Update(System.Int32)">
            <summary>
            Updates the checksum with a byte value.
            </summary>
            <param name="value">
            The data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Adler32.Update(System.Byte[])">
            <summary>
            Updates the checksum with an array of bytes.
            </summary>
            <param name="buffer">
            The source of the data to update with.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Adler32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            an array of bytes
            </param>
            <param name="offset">
            the start of the data used for this update
            </param>
            <param name="count">
            the number of bytes to use for this update
            </param>
        </member>
        <member name="P:Mapdigit.Gis.Vector.Adler32.Value">
            <summary>
            Returns the Adler32 data checksum computed so far.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.Crc32">
             <summary>
             Generate a table for a byte-wise 32-bit CRC calculation on the polynomial:
             x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x+1.
            
             Polynomials over GF(2) are represented in binary, one bit per coefficient,
             with the lowest powers in the most significant bit.  Then adding polynomials
             is just exclusive-or, and multiplying a polynomial by x is a right shift by
             one.  If we call the above polynomial p, and represent a byte as the
             polynomial q, also with the lowest power in the most significant bit (so the
             byte 0xb1 is the polynomial x^7+x^3+x+1), then the CRC is (q*x^32) mod p,
             where a mod b means the remainder after dividing a by b.
            
             This calculation is done using the shift-register method of multiplying and
             taking the remainder.  The register is initialized to zero, and for each
             incoming bit, x^32 is added mod p to the register if the bit is a one (where
             x^32 mod p is p+x^32 = x^26+...+1), and the register is multiplied mod p by
             x (which is shifting right by one and adding x^32 mod p if the bit shifted
             out is a one).  We start with the highest power (least significant bit) of
             q and repeat for all eight bits of q.
            
             The table is simply the CRC of all possible eight bit values.  This is all
             the information needed to generate CRC's on data a byte at a time for all
             combinations of CRC register values and incoming bytes.
             </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Crc32._crc">
            <summary>
            The crc data checksum so far.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Crc32.Reset">
            <summary>
            Resets the CRC32 data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Crc32.Update(System.Int32)">
            <summary>
            Updates the checksum with the int bval.
            </summary>
            <param name = "value">
            the byte is taken as the lower 8 bits of value
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Crc32.Update(System.Byte[])">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Crc32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buffer">
            The buffer which contains the data
            </param>
            <param name = "offset">
            The offset in the buffer where the data starts
            </param>
            <param name = "count">
            The number of data bytes to update the CRC with.
            </param>
        </member>
        <member name="P:Mapdigit.Gis.Vector.Crc32.Value">
            <summary>
            Returns the CRC32 data checksum computed so far.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.DeflaterConstants">
            <summary>
            This class contains constants used for deflation.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.Debugging">
            <summary>
            Set to true to enable debugging
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.StoredBlock">
            <summary>
            Written to Zip file to identify a stored block
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.StaticTrees">
            <summary>
            Identifies static tree in Zip file
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.DynTrees">
            <summary>
            Identifies dynamic tree in Zip file
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.PresetDict">
            <summary>
            Header flag indicating a preset dictionary for deflation
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.DefaultMemLevel">
            <summary>
            Sets internal buffer sizes for Huffman encoding
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MaxMatch">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MinMatch">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MaxWbits">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.WSize">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.Wmask">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.HashBits">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.HashSize">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.HashMask">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.HashShift">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MinLookahead">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MaxDist">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.PendingBufSize">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.DeflateStored">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.DeflateFast">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.DeflateSlow">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MaxBlockSize">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.GoodLength">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MaxLazy">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.NiceLength">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.MaxChain">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterConstants.ComprFunc">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="T:Mapdigit.Gis.Vector.DeflateStrategy">
            <summary>
            Strategies for deflater
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflateStrategy.Default">
            <summary>
            The default strategy
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflateStrategy.Filtered">
            <summary>
            This strategy will only allow longer string repetitions.  It is
            useful for random data with a small character set.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflateStrategy.HuffmanOnly">
            <summary>
            This strategy will not look for string repetitions at all.  It
            only encodes with Huffman trees (which means, that more common
            characters get a smaller encoding.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.DeflaterEngine">
            <summary>
            Low level compression engine for deflate algorithm which uses a 32K sliding window
            with secondary compression from Huffman/Shannon-Fano codes.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.#ctor(Mapdigit.Gis.Vector.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">
            Pending buffer to use
            </param>>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.Deflate(System.Boolean,System.Boolean)">
            <summary>
            Deflate drives actual compression of data
            </summary>
            <param name="flush">True to flush input buffers</param>
            <param name="finish">Finish deflation with the current input.</param>
            <returns>Returns true if progress has been made.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets input data to be deflated.  Should only be called when <code>NeedsInput()</code>
            returns true
            </summary>
            <param name="buffer">The buffer containing input data.</param>
            <param name="offset">The offset of the first byte of data.</param>
            <param name="count">The number of bytes of data to use as input.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.NeedsInput">
            <summary>
            Determines if more <see cref="M:Mapdigit.Gis.Vector.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">input</see> is needed.
            </summary>		
            <returns>Return true if input is needed via <see cref="M:Mapdigit.Gis.Vector.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">SetInput</see></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set compression dictionary
            </summary>
            <param name="buffer">The buffer containing the dictionary data</param>
            <param name="offset">The offset in the buffer for the first byte of data</param>
            <param name="length">The length of the dictionary data.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.ResetAdler">
            <summary>
            Reset Adler checksum
            </summary>		
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.SetLevel(System.Int32)">
            <summary>
            Set the deflate level (0-9)
            </summary>
            <param name="level">The value to set the level to.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.FillWindow">
            <summary>
            Fill the window
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.InsertString">
            <summary>
            Inserts the current string in the head hash and returns the previous
            value for this hash.
            </summary>
            <returns>The previous hash value</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterEngine.FindLongestMatch(System.Int32)">
             <summary>
             Find the best (longest) string in the window matching the 
             string starting at strstart.
            
             Preconditions:
             <code>
             strstart + MaxMatch &lt;= window.length.</code>
             </summary>
             <param name="curMatch"></param>
             <returns>True if a match greater than the minimum length is found</returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._head">
            <summary>
            Hashtable, hashing three characters to an index for window, so
            that window[index]..window[index+2] have this hash code.  
            Note that the array should really be unsigned short, so you need
            to and the values with 0xffff.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._prev">
            <summary>
            <code>prev[index &amp; Wmask]</code> points to the previous index that has the
            same hash code as the string starting at index.  This way 
            entries with the same hash code are in a linked list.
            Note that the array should really be unsigned short, so you need
            to and the values with 0xffff.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._strstart">
            <summary>
            Points to the current character in the window.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._lookahead">
            <summary>
            lookahead is the number of characters starting at strstart in
            window that are valid.
            So window[strstart] until window[strstart+lookahead-1] are valid
            characters.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._window">
            <summary>
            This array contains the part of the uncompressed stream that 
            is of relevance.  The current character is indexed by strstart.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._compressionFunction">
            <summary>
            The current compression function.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._inputBuf">
            <summary>
            The input data for compression.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._totalIn">
            <summary>
            The total bytes of input read.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._inputOff">
            <summary>
            The offset into inputBuf, where input data starts.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._inputEnd">
            <summary>
            The end offset of the input data.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterEngine._adler">
            <summary>
            The adler checksum
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterEngine.Adler">
            <summary>
            Get current value of Adler checksum
            </summary>		
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterEngine.TotalIn">
            <summary>
            Total data processed
            </summary>		
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterEngine.Strategy">
            <summary>
            Get/set the <see cref="T:Mapdigit.Gis.Vector.DeflateStrategy">deflate strategy</see>
            </summary>		
        </member>
        <member name="T:Mapdigit.Gis.Vector.Deflater">
             <summary>
             This is the Deflater class.  The deflater class compresses input
             with the deflate algorithm described in RFC 1951.  It has several
             compression levels and three different strategies described below.
            
             This class is <i>not</i> thread safe.  This is inherent in the API, due
             to the split of deflate and setInput.
             
             author of the original java version : Jochen Hoenicke
             </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater.BestCompression">
            <summary>
            The best and slowest compression level.  This tries to find very
            long and distant string repetitions.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater.BestSpeed">
            <summary>
            The worst but fastest compression level.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater.DefaultCompression">
            <summary>
            The default compression level.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater.NoCompression">
            <summary>
            This level won't compress at all but output uncompressed blocks.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater.Deflated">
            <summary>
            The compression method.  This is the only method supported so far.
            There is no need to use this constant at all.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.#ctor">
            <summary>
            Creates a new deflater with default compression level.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.#ctor(System.Int32)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="level">
            the compression level, a value between NoCompression
            and BestCompression, or DEFAULT_COMPRESSION.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="level">
            the compression level, a value between NoCompression
            and BestCompression.
            </param>
            <param name="noZlibHeaderOrFooter">
            true, if we should suppress the Zlib/RFC1950 header at the
            beginning and the adler checksum at the end of the output.  This is
            useful for the GZIP/PKZIP formats.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.Reset">
            <summary>
            Resets the deflater.  The deflater acts afterwards as if it was
            just created with the same compression level and strategy as it
            had before.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.Flush">
            <summary>
            Flushes the current input block.  Further calls to deflate() will
            produce enough output to inflate everything in the current input
            block.  This is not part of Sun's JDK so I have made it package
            private.  It is used by DeflaterOutputStream to implement
            flush().
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.Finish">
            <summary>
            Finishes the deflater with the current input block.  It is an error
            to give more input after this method was called.  This method must
            be called to force all bytes to be flushed.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.SetInput(System.Byte[])">
            <summary>
            Sets the data which should be compressed next.  This should be only
            called when needsInput indicates that more input is needed.
            If you call setInput when needsInput() returns false, the
            previous input that is still pending will be thrown away.
            The given byte array should not be changed, before needsInput() returns
            true again.
            This call is equivalent to <code>setInput(input, 0, input.length)</code>.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was finished() or ended().
            </exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the data which should be compressed next.  This should be
            only called when needsInput indicates that more input is needed.
            The given byte array should not be changed, before needsInput() returns
            true again.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <param name="offset">
            the start of the data.
            </param>
            <param name="count">
            the number of data bytes of input.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was Finish()ed or if previous input is still pending.
            </exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.SetLevel(System.Int32)">
            <summary>
            Sets the compression level.  There is no guarantee of the exact
            position of the change, but if you call this when needsInput is
            true the change of compression level will occur somewhere near
            before the end of the so far given input.
            </summary>
            <param name="level">
            the new compression level.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.GetLevel">
            <summary>
            Get current compression level
            </summary>
            <returns>Returns the current compression level</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.SetStrategy(Mapdigit.Gis.Vector.DeflateStrategy)">
            <summary>
            Sets the compression strategy. Strategy is one of
            DEFAULT_STRATEGY, HUFFMAN_ONLY and FILTERED.  For the exact
            position where the strategy is changed, the same as for
            SetLevel() applies.
            </summary>
            <param name="strategy">
            The new compression strategy.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.Deflate(System.Byte[])">
            <summary>
            Deflates the current input block with to the given array.
            </summary>
            <param name="output">
            The buffer where compressed data is stored
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            IsNeedingInput() or IsFinished returns true or length is zero.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.Deflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Deflates the current input block to the given array.
            </summary>
            <param name="output">
            Buffer to store the compressed data.
            </param>
            <param name="offset">
            Offset into the output array.
            </param>
            <param name="length">
            The maximum number of bytes that may be stored.
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            needsInput() or finished() returns true or length is zero.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            If Finish() was previously called.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If offset or length don't match the array length.
            </exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            This call is equivalent to <code>setDictionary(dict, 0, dict.Length)</code>.
            </summary>
            <param name="dictionary">
            the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if SetInput () or Deflate () were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.Deflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            The dictionary is a byte array containing strings that are
            likely to occur in the data which should be compressed.  The
            dictionary is not stored in the compressed output, only a
            checksum.  To decompress the output you need to supply the same
            dictionary again.
            </summary>
            <param name="dictionary">
            The dictionary data
            </param>
            <param name="index">
            The index where dictionary information commences.
            </param>
            <param name="count">
            The number of bytes in the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            If SetInput () or Deflate() were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater._level">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater._noZlibHeaderOrFooter">
            <summary>
            If true no Zlib/RFC1950 headers or footers are generated
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater._state">
            <summary>
            The current state.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater._totalOut">
            <summary>
            The total bytes of output written.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater._pending">
            <summary>
            The pending output.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.Deflater._engine">
            <summary>
            The deflater engine.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.Deflater.Adler">
            <summary>
            Gets the current adler checksum of the data that was processed so far.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.Deflater.TotalIn">
            <summary>
            Gets the number of input bytes processed so far.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.Deflater.TotalOut">
            <summary>
            Gets the number of output bytes so far.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.Deflater.IsFinished">
            <summary>
            Returns true if the stream was finished and no more output bytes
            are available.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.Deflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method can also return true when the stream
            was finished.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.DeflaterHuffman">
            <summary>
            This is the DeflaterHuffman class.
            
            This class is <i>not</i> thread safe.  This is inherent in the API, due
            to the split of Deflate and SetInput.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterHuffman.Pending">
            <summary>
            Pending buffer to use
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.#ctor(Mapdigit.Gis.Vector.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">Pending buffer to use</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.SendAllTrees(System.Int32)">
            <summary>
            Write all trees to pending buffer
            </summary>
            <param name="blTreeCodes">The number/rank of treecodes to send.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.CompressBlock">
            <summary>
            Compress current buffer writing data to pending buffer
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.FlushStoredBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with no compression
            </summary>
            <param name="stored">Data to write</param>
            <param name="storedOffset">Index of first byte to write</param>
            <param name="storedLength">Count of bytes to write</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.FlushBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with compression
            </summary>		
            <param name="stored">Data to flush</param>
            <param name="storedOffset">Index of first byte to flush</param>
            <param name="storedLength">Count of bytes to flush</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.IsFull">
            <summary>
            Get value indicating if internal buffer is full
            </summary>
            <returns>true if buffer is full</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.TallyLit(System.Int32)">
            <summary>
            Add literal to buffer
            </summary>
            <param name="literal">Literal value to add to buffer.</param>
            <returns>Value indicating internal buffer is full</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.TallyDist(System.Int32,System.Int32)">
            <summary>
            Add distance code and length to literal and distance trees
            </summary>
            <param name="distance">Distance code</param>
            <param name="length">Length</param>
            <returns>Value indicating if internal buffer is full</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.BitReverse(System.Int32)">
            <summary>
            Reverse the bits of a 16 bit value.
            </summary>
            <param name="toReverse">Value to reverse bits</param>
            <returns>Value with bits reversed</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.Tree.Reset">
            <summary>
            Resets the internal state of the tree
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.Tree.SetStaticCodes(System.Int16[],System.Byte[])">
            <summary>
            Set static codes and length
            </summary>
            <param name="staticCodes">new codes</param>
            <param name="staticLengths">length for new codes</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.Tree.BuildCodes">
            <summary>
            Build dynamic codes and lengths
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.Tree.GetEncodedLength">
            <summary>
            Get encoded length
            </summary>
            <returns>Encoded length, the sum of frequencies * lengths</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.Tree.CalcBlFreq(Mapdigit.Gis.Vector.DeflaterHuffman.Tree)">
            <summary>
            Scan a literal or distance tree to determine the frequencies of the codes
            in the bit length tree.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterHuffman.Tree.WriteTree(Mapdigit.Gis.Vector.DeflaterHuffman.Tree)">
            <summary>
            Write tree values
            </summary>
            <param name="blTree">Tree to write</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.DeflaterOutputStream">
            <summary>
            A special stream deflating or compressing the bytes that are
            written to it.  It uses a Deflater to perform actual deflating.<br/>
            Authors of the original java version : Tom Tromey, Jochen Hoenicke 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new DeflaterOutputStream with a default Deflater and default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.#ctor(System.IO.Stream,Mapdigit.Gis.Vector.Deflater)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
            <param name="deflater">
            the underlying deflater.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.#ctor(System.IO.Stream,Mapdigit.Gis.Vector.Deflater,System.Int32)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            buffer size.
            </summary>
            <param name="baseOutputStream">
            The output stream where deflated output is written.
            </param>
            <param name="deflater">
            The underlying deflater to use
            </param>
            <param name="bufferSize">
            The buffer size to use when deflating
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            bufsize is less than or equal to zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            baseOutputStream does not support writing
            </exception>
            <exception cref="T:System.ArgumentNullException">
            deflater instance is null
            </exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Finish">
            <summary>
            Finishes the stream by calling finish() on the deflater. 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.EncryptBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encrypt a block of data
            </summary>
            <param name="buffer">
            Data to encrypt.  NOTE the original contents of the buffer are lost
            </param>
            <param name="offset">
            Offset of first byte in buffer to encrypt
            </param>
            <param name="length">
            Number of bytes in buffer to encrypt
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.EncryptByte">
            <summary>
            Encrypt a single byte 
            </summary>
            <returns>
            The encrypted value
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.UpdateKeys(System.Byte)">
            <summary>
            Update encryption keys 
            </summary>		
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Deflate">
            <summary>
            Deflates everything in the input buffers.  This will call
            <code>def.deflate()</code> until all bytes from the input buffers
            are processed.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the current position of this stream to the given value. Not supported by this class!
            </summary>
            <param name="offset">The offset relative to the <paramref name="origin"/> to seek.</param>
            <param name="origin">The <see cref="T:System.IO.SeekOrigin"/> to seek from.</param>
            <returns>The new position in the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.SetLength(System.Int64)">
            <summary>
            Sets the length of this stream to the given value. Not supported by this class!
            </summary>
            <param name="value">The new stream length.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.ReadByte">
            <summary>
            Read a byte from stream advancing position by one
            </summary>
            <returns>The byte read cast to an int.  THe value is -1 if at the end of the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a block of bytes from stream
            </summary>
            <param name="buffer">The buffer to store read data in.</param>
            <param name="offset">The offset to start storing at.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The actual number of bytes read.  Zero if end of stream is detected.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous reads are not supported a NotSupportedException is always thrown
            </summary>
            <param name="buffer">The buffer to read into.</param>
            <param name="offset">The offset to start storing data at.</param>
            <param name="count">The number of bytes to read</param>
            <param name="callback">The async callback to use.</param>
            <param name="state">The state to use.</param>
            <returns>Returns an <see cref="T:System.IAsyncResult"/></returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous writes arent supported, a NotSupportedException is always thrown
            </summary>
            <param name="buffer">The buffer to write.</param>
            <param name="offset">The offset to begin writing at.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> to use.</param>
            <param name="state">The state object.</param>
            <returns>Returns an IAsyncResult.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Flush">
            <summary>
            Flushes the stream by calling <see cref="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Flush">Flush</see> on the deflater and then
            on the underlying stream.  This ensures that all bytes are flushed.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Close">
            <summary>
            Calls <see cref="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Finish"/> and closes the underlying
            stream when <see cref="P:Mapdigit.Gis.Vector.DeflaterOutputStream.IsStreamOwner"></see> is true.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.WriteByte(System.Byte)">
            <summary>
            Writes a single byte to the compressed output stream.
            </summary>
            <param name="value">
            The byte value.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes from an array to the compressed stream.
            </summary>
            <param name="buffer">
            The byte array
            </param>
            <param name="offset">
            The offset into the byte array where to start.
            </param>
            <param name="count">
            The number of bytes to write.
            </param>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterOutputStream._buffer">
            <summary>
            This buffer is used temporarily to retrieve the bytes from the
            deflater and write them to the underlying output stream.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterOutputStream._deflater">
            <summary>
            The deflater which is used to deflate the stream.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.DeflaterOutputStream._baseOutputStream">
            <summary>
            Base stream the deflater depends on.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.IsStreamOwner">
            <summary>
            Get/set flag indicating ownership of the underlying stream.
            When the flag is true <see cref="M:Mapdigit.Gis.Vector.DeflaterOutputStream.Close"></see> will close the underlying stream also.
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.CanPatchEntries">
            <summary>
            Allows client to determine if an entry can be patched after its added
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.Password">
            <summary>
            Get/set the password used for encryption.
            </summary>
            <remarks>When set to null or if the password is empty no encryption is performed</remarks>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.CanRead">
            <summary>
            Gets value indicating stream can be read from
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.CanSeek">
            <summary>
            Gets a value indicating if seeking is supported for this stream
            This property always returns false
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.CanWrite">
            <summary>
            Get value indicating if this stream supports writing
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.Length">
            <summary>
            Get current length of stream
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.DeflaterOutputStream.Position">
            <summary>
            Gets the current position within the stream.
            </summary>
            <exception cref="T:System.NotSupportedException">Any attempt to set position</exception>
        </member>
        <member name="T:Mapdigit.Gis.Vector.DeflaterPending">
            <summary>
            This class stores the pending output of the Deflater.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.PendingBuffer">
            <summary>
            This class is general purpose class for writing data to a buffer.
            
            It allows you to write bits as well as bytes
            Based on DeflaterPending.java
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.PendingBuffer._buffer">
            <summary>
            Internal work buffer
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.#ctor">
            <summary>
            construct instance using default buffer size of 4096
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.#ctor(System.Int32)">
            <summary>
            construct instance using specified buffer size
            </summary>
            <param name="bufferSize">
            size to use for internal buffer
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.Reset">
            <summary>
            Clear internal state/buffers
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.WriteByte(System.Int32)">
            <summary>
            Write a byte to buffer
            </summary>
            <param name="value">
            The value to write
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.WriteShort(System.Int32)">
            <summary>
            Write a short value to buffer LSB first
            </summary>
            <param name="value">
            The value to write.
            </param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.WriteInt(System.Int32)">
            <summary>
            write an integer LSB first
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.WriteBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write a block of data to buffer
            </summary>
            <param name="block">data to write</param>
            <param name="offset">offset of first byte to write</param>
            <param name="length">number of bytes to write</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.AlignToByte">
            <summary>
            Align internal buffer on a byte boundary
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.WriteBits(System.Int32,System.Int32)">
            <summary>
            Write bits to internal buffer
            </summary>
            <param name="b">source of bits</param>
            <param name="count">number of bits to write</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.WriteShortMsb(System.Int32)">
            <summary>
            Write a short value to internal buffer most significant byte first
            </summary>
            <param name="s">value to write</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.Flush(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Flushes the pending buffer into the given output array.  If the
            output array is to small, only a partial flush is done.
            </summary>
            <param name="output">The output array.</param>
            <param name="offset">The offset into output array.</param>
            <param name="length">The maximum number of bytes to store.</param>
            <returns>The number of bytes flushed.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.PendingBuffer.ToByteArray">
            <summary>
            Convert internal buffer to byte array.
            Buffer is empty on completion
            </summary>
            <returns>
            The internal buffer contents converted to a byte array.
            </returns>
        </member>
        <member name="P:Mapdigit.Gis.Vector.PendingBuffer.BitCount">
            <summary>
            The number of bits written to the buffer
            </summary>
        </member>
        <member name="P:Mapdigit.Gis.Vector.PendingBuffer.IsFlushed">
            <summary>
            Indicates if buffer has been flushed
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.DeflaterPending.#ctor">
            <summary>
            Construct instance with default buffer size
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.EncodeAlpha">
            Constant specifying that alpha channel should be encoded. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.NoAlpha">
            Constant specifying that alpha channel should not be encoded. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.FilterNone">
            Constants for filter (NONE) 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.FilterSub">
            Constants for filter (SUB) 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.FilterUp">
            Constants for filter (UP) 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.FilterLast">
            Constants for filter (LAST) 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.IHDR">
            IHDR tag. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.IDAT">
            IDAT tag. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal.IEND">
            IEND tag. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._pngBytes">
            The png bytes. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._priorRow">
            The prior row. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._leftBytes">
            The left bytes. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._width">
            The width. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._bytePos">
            The byte position. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._maxPos">
            The byte position. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._crc">
            CRC. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._crcValue">
            The CRC value. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._encodeAlpha">
            Encode alpha? 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._filter">
            The filter type. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._bytesPerPixel">
            The bytes-per-pixel. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._compressionLevel">
            The compression level. 
        </member>
        <member name="F:Mapdigit.Gis.Vector.PngEncoderInternal._pixelData">
            PixelData array to encode 
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.#ctor(System.Int32[],System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
             Class constructor specifying Image source to encode, whether to encode alpha, filter to use,
             and compression level.
            
             @param pixel_data A Java Image object
             @param encodeAlpha Encode the alpha channel? false=no; true=yes
             @param whichFilter 0=none, 1=sub, 2=up
             @param compLevel 0..9
             @see java.awt.Image
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.Encode(System.Boolean)">
             Creates an array of bytes that is the PNG equivalent of the current image, specifying
             whether to encode alpha or not.
            
             @param encodeAlpha boolean false=no alpha, true=encode alpha
             @return an array of bytes, or null if there was a problem
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.PngEncode">
             Creates an array of bytes that is the PNG equivalent of the current image.
             Alpha encoding is determined by its setting in the constructor.
            
             @return an array of bytes, or null if there was a problem
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.ResizeByteArray(System.Byte[],System.Int32)">
             Increase or decrease the length of a byte array.
            
             @param array The original array.
             @param newLength The length you wish the new array to have.
             @return Array of newly desired length. If shorter than the
                     original, the trailing elements are truncated.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteBytes(System.Byte[],System.Int32)">
             Write an array of bytes into the pngBytes array.
             Note: This routine has the side effect of updating
             maxPos, the largest element written in the array.
             The array is resized by 1000 bytes or the length
             of the data to be written, whichever is larger.
            
             @param data The data to be written into pngBytes.
             @param offset The starting point to write to.
             @return The next place to be written to in the pngBytes array.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteBytes(System.Byte[],System.Int32,System.Int32)">
             Write an array of bytes into the pngBytes array, specifying number of bytes to write.
             Note: This routine has the side effect of updating
             maxPos, the largest element written in the array.
             The array is resized by 1000 bytes or the length
             of the data to be written, whichever is larger.
            
             @param data The data to be written into pngBytes.
             @param nBytes The number of bytes to be written.
             @param offset The starting point to write to.
             @return The next place to be written to in the pngBytes array.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteInt2(System.Int32,System.Int32)">
             Write a two-byte integer into the pngBytes array at a given position.
            
             @param n The integer to be written into pngBytes.
             @param offset The starting point to write to.
             @return The next place to be written to in the pngBytes array.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteInt4(System.Int32,System.Int32)">
             Write a four-byte integer into the pngBytes array at a given position.
            
             @param n The integer to be written into pngBytes.
             @param offset The starting point to write to.
             @return The next place to be written to in the pngBytes array.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteByte(System.Int32,System.Int32)">
             Write a single byte into the pngBytes array at a given position.
            
             @param b The integer to be written into pngBytes.
             @param offset The starting point to write to.
             @return The next place to be written to in the pngBytes array.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteHeader">
            Write a PNG "IHDR" chunk into the pngBytes array.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.DoFilterSub(System.Byte[],System.Int32,System.Int32)">
             Perform "sub" filtering on the given row.
             Uses temporary array leftBytes to store the original values
             of the previous pixels.  The array is 16 bytes long, which
             will easily hold two-byte samples plus two-byte alpha.
            
             @param pixels The array holding the scan lines being built
             @param startPos Starting position within pixels of bytes to be filtered.
             @param width Width of a scanline in pixels.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.DoFilterUp(System.Byte[],System.Int32,System.Int32)">
             Perform "up" filtering on the given row.
             Side effect: refills the prior row with current row
            
             @param pixels The array holding the scan lines being built
             @param startPos Starting position within pixels of bytes to be filtered.
             @param width Width of a scanline in pixels.
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteImageData">
             Write the image data into the pngBytes array.
             This will write one or more PNG "IDAT" chunks. In order
             to conserve memory, this method grabs as many rows as will
             fit into 32K bytes, or the whole image; whichever is less.
            
            
             @return true if no errors; false if error grabbing pixels
        </member>
        <member name="M:Mapdigit.Gis.Vector.PngEncoderInternal.WriteEnd">
            Write a PNG "IEND" chunk into the pngBytes array.
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.AbstractNode">
            <summary>
            Implements basic functions of Node interface. Also implements splitting
            functions.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.INode">
            <summary>
            Interface for easy access to common Node information.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.GetParent">
            <summary>
            Returns the parent of this node. If there is a parent, it must be an 
            Index.If this node is the root, returns null. This function loads one 
            disk page into main memory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.GetHyperCubes">
            <summary>
            Return a copy of the HyperCubes present in this node.
            </summary>
            <returns>An array of HyperCubes containing copies of the original data</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.GetLevel">
            <summary>
            Returns the node level. Always zero for leaf nodes.
            </summary>
            <returns>Level of node</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.GetNodeMbb">
            <summary>
            Returns the mbb of all HyperCubes present in this node.
            </summary>
            <returns>A new HyperCube object, representing the mbb of this node</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.GetUniqueId">
            <summary>
            Returns a unique id for this node. The page number is unique for every  node.
            </summary>
            <returns>A string representing a unique id for this node</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.IsLeaf">
            <summary>
            Returns true if this node is a Leaf. Root may be a Leaf too.
            </summary>
            <returns>
            	<c>true</c> if this instance is leaf; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.IsRoot">
            <summary>
            Returns true if this node is the root node.
            </summary>
            <returns>
            	<c>true</c> if this instance is root; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.INode.IsIndex">
            <summary>
            Returns true if this node is an Index. Root node is an Index too, 
            unless it is a Leaf.
            </summary>
            <returns>
            	<c>true</c> if this instance is index; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.AbstractNode.Level">
            Level of this node. Leaves always have a level equal to 0.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.AbstractNode.Tree">
            Parent of all nodes.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.AbstractNode.Parent">
            The pageNumber where the parent of this node is stored.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.AbstractNode.PageNumber">
            The pageNumber where this node is stored.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.AbstractNode.Data">
            All node data are stored into this array. It must have a size of
            <B>nodeCapacity + 1</B> to hold
            all data plus an overflow HyperCube, when the node must be split.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.AbstractNode.Branches">
            Holds the pageNumbers containing the children of this node.
            Always has same size with the data array.
            If this is a Leaf node, than all branches should point to the real
            data objects.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.AbstractNode.UsedSpace">
            How much space is used up into this node. If equal to nodeCapacity
            then node is full.
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.GetLevel">
            <summary>
            Returns the node level. Always zero for leaf nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.IsRoot">
            <summary>
            Returns true if this node is the root node.
            </summary>
            <returns>
            	<c>true</c> if this instance is root; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.IsIndex">
            <summary>
            Returns true if this node is an Index. Root node is an Index too,
            unless it is a Leaf.
            </summary>
            <returns>
            	<c>true</c> if this instance is index; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.IsLeaf">
            <summary>
            Returns true if this node is a Leaf. Root may be a Leaf too.
            </summary>
            <returns>
            	<c>true</c> if this instance is leaf; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.GetNodeMbb">
            <summary>
            Returns the mbb of all HyperCubes present in this node.
            </summary>
            <returns>
            A new HyperCube object, representing the mbb of this node
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.GetUniqueId">
            <summary>
            Returns a unique id for this node. The page number is unique for every  node.
            </summary>
            <returns>
            A string representing a unique id for this node
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.GetParent">
            <summary>
            Returns the parent of this node. If there is a parent, it must be an
            Index.If this node is the root, returns null. This function loads one
            disk page into main memory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.GetHyperCubes">
            <summary>
            Return a copy of the HyperCubes present in this node.
            </summary>
            <returns>
            An array of HyperCubes containing copies of the original data
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.#ctor(Mapdigit.Gis.Vector.RTree.RTree,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.AbstractNode"/> class.
            </summary>
            <param name="tree">The tree.</param>
            <param name="parent">The parent.</param>
            <param name="pageNumber">The page number.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.ChooseLeaf(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            chooseLeaf finds the most appropriate leaf where the given HyperCube 
            should be stored.
            </summary>
            <param name="h"> The new HyperCube</param>
            <returns>The leaf where the new HyperCube should be inserted</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.AbstractNode.FindLeaf(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            findLeaf returns the leaf that contains the given hypercube, null if the
            hypercube is not contained in any of the leaves of this node.
            </summary>
            <param name="h">The HyperCube to search for.</param>
            <returns>The leaf where the HyperCube is contained, null if such a leaf is not found.</returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.IComparator">
            <summary>
            Defines a generalized comparison method that a value type or class implements
            to create a type-specific comparison method.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.IComparator.Compare(System.Object,System.Object)">
            <summary>
            Compares the current instance with another object of the same type
            </summary>
            <param name="o1">An object to compare with this instance</param>
            <param name="o2">An object to compare with this instance</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.Data">
            <summary>
            Data class.
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.IEnumeration">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.HyperCube">
            <summary>
            A HyperCube in the n-dimensional space. It is represented by two points of
            n dimensions each.Implements basic calculation functions, like <B>getArea()</B>
            and <B>getUnionMbb()</B>.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.#ctor(Mapdigit.Gis.Vector.RTree.Point,Mapdigit.Gis.Vector.RTree.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.HyperCube"/> class.
            </summary>
            <param name="p1">The p1.</param>
            <param name="p2">The p2.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.GetDimension">
            <summary>
            Gets the dimension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.GetP1">
            <summary>
            Gets the p1.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.GetP2">
            <summary>
            Gets the p2.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.Equals(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            Equalses the specified h.
            </summary>
            <param name="h">The h.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.Intersection(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            Tests to see whether <B>h</B> has any common points with this HyperCube.
            If <B>h</B> is inside this object (or vice versa), it returns true.
            </summary>
            <param name="h">The h.</param>
            <returns> if <B>h</B> and this HyperCube intersect, false otherwise</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.Enclosure(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            Tests to see whether <B>h</B> is inside this HyperCube.
            If <B>h</B> is exactly the same shape as this object, it is considered 
            to be inside.
            </summary>
            <param name="h">The h.</param>
            <returns>True if <B>h</B> is inside, false otherwise.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.Enclosure(Mapdigit.Gis.Vector.RTree.Point)">
            <summary>
            Tests to see whether <B>p</B> is inside this HyperCube.
            If <B>p</B> lies on the boundary
            of the HyperCube, it is considered to be inside the object.
            </summary>
            <param name="p">The p.</param>
            <returns>True if <B>p</B> is inside, false otherwise</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.IntersectingArea(Mapdigit.Gis.Vector.RTree.HyperCube)">
             <summary>
             Returns the area of the intersecting region between this HyperCube and 
             the argument.
            
             Below, all possible situations are depicted.
            
                 -------   -------      ---------   ---------      ------         ------
                |2      | |2      |    |2        | |1        |    |2     |       |1     |
              --|--     | |     --|--  | ------  | | ------  |  --|------|--   --|------|--
             |1 |  |    | |    |1 |  | ||1     | | ||2     | | |1 |      |  | |2 |      |  |
              --|--     | |     --|--  | ------  | | ------  |  --|------|--   --|------|--
                 -------   -------      ---------   ---------      ------         ------
             </summary>
             <param name="h">Given HyperCube</param>
             <returns> Area of intersecting region</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.GetUnionMbb(Mapdigit.Gis.Vector.RTree.HyperCube[])">
            <summary>
            Static impementation. Takes an array of HyperCubes and calculates the 
            mbb of their union.
            </summary>
            <param name="a">The array of HyperCubes.</param>
            <returns>The mbb of their union</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.GetUnionMbb(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            Return a new HyperCube representing the mbb of the union of this 
            HyperCube and <B>h</B>
            </summary>
            <param name="h">The HyperCube that we want to union with this HyperCube.</param>
            <returns> A HyperCube representing the mbb of their union</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.GetArea">
            <summary>
            Returns the area of this HyperCube.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.GetMinDist(Mapdigit.Gis.Vector.RTree.Point)">
            <summary>
            Gets the min dist.
            </summary>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.HyperCube.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.HyperCube._p1">
            point 1 .
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.HyperCube._p2">
            point 2.
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.Index">
            <summary>
            Internal node of the RTree. Used to access Leaf nodes, where real data lies
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Index.GetChild(System.Int32)">
            <summary>
            Retrieves the <B>i-th</B> child node. Loads one page into main memory
            </summary>
            <param name="i">The index of the child in the data array</param>
            <returns>The i-th child</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Index.#ctor(Mapdigit.Gis.Vector.RTree.RTree,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.Index"/> class.
            </summary>
            <param name="tree">The tree.</param>
            <param name="parent">The parent.</param>
            <param name="pageNumber">The page number.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Index.ChooseLeaf(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            chooseLeaf finds the most appropriate leaf where the given HyperCube
            should be stored.
            </summary>
            <param name="h">The new HyperCube</param>
            <returns>
            The leaf where the new HyperCube should be inserted
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Index.FindLeastEnlargement(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            Add the new HyperCube to all mbbs present in this node. Calculate the 
            area difference and choose the entry with the least enlargement. Based 
            on that metric we choose the path that leads to the leaf that will 
            hold the new HyperCube.
            [A. Guttman 'R-trees a dynamic index structure for spatial searching']
            </summary>
            <param name="h">The h.</param>
            <returns>The index of the branch of the path that leads to the Leaf where 
            the new HyperCube should be inserted.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Index.FindLeastOverlap(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            R*-tree criterion for choosing the best branch to follow.
            [Beckmann, Kriegel, Schneider, Seeger 'The R*-tree: An efficient and 
            Robust Access Method for Points and Rectangles]
            </summary>
            <param name="h">The h.</param>
            <returns>The index of the branch of the path that leads to the Leaf where 
            the new HyperCube should be inserted.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Index.FindLeaf(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            findLeaf returns the leaf that contains the given hypercube, null if the
            hypercube is not contained in any of the leaves of this node.
            </summary>
            <param name="h">The HyperCube to search for.</param>
            <returns>
            The leaf where the HyperCube is contained, null if such a leaf is not found.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.Leaf">
            <summary>
            A Leaf node. Containts pointers to the real data.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Leaf.GetDataPointer(System.Int32)">
            <summary>
            Returns the pointer of the <i>i-th</i> data entry.
            </summary>
            <param name="i">The index of the child in the data array.</param>
            <returns>The pointer of the <i>i-th</i> child.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Leaf.#ctor(Mapdigit.Gis.Vector.RTree.RTree,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.Leaf"/> class.
            </summary>
            <param name="tree">The tree.</param>
            <param name="parent">The parent.</param>
            <param name="pageNumber">The page number.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Leaf.#ctor(Mapdigit.Gis.Vector.RTree.RTree,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.Leaf"/> class.
            </summary>
            <param name="tree">The tree.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Leaf.ChooseLeaf(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            chooseLeaf finds the most appropriate leaf where the given HyperCube
            should be stored.
            </summary>
            <param name="h">The new HyperCube</param>
            <returns>
            The leaf where the new HyperCube should be inserted
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Leaf.FindLeaf(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            findLeaf returns the leaf that contains the given hypercube, null if the
            hypercube is not contained in any of the leaves of this node.
            </summary>
            <param name="h">The HyperCube to search for.</param>
            <returns>
            The leaf where the HyperCube is contained, null if such a leaf is not found.
            </returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.PageFaultException">
            <summary>
            Page falut exception.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PageFaultException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.PageFaultException"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PageFaultException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.PageFaultException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.PageFile">
            <summary>
            Abstract class for all classes implementing a storage manager for the RTree.
            Every node should be stored in a unique page. The root node is always stored
            in page 0. The storage manager should have the control over the page numbers
            where each node should be stored.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PageFile.Tree">
            related rtree object.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PageFile.Dimension">
            Dimension of data inserted into the tree.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PageFile.FillFactor">
            fillFactor specifies minimum node entries present in each node.
            It must be a double between 0 and 0.5.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PageFile.NodeCapacity">
            Maximum node capacity. Each node will be able to hold at most 
            nodeCapacity entries.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PageFile.PageSize">
            The page size needed in bytes to store a full node. Calculated using
            the following formula:
            [nodeCapacity * (sizeof(HyperCube) + sizeof(Branch))] + 
               parent + level + usedSpace =
            {nodeCapacity * [(2 * dimension * sizeof(double)) + sizeof(int)]} +
            sizeof(int) + sizeof(int) + sizeof(int)
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PageFile.TreeType">
            RTree variant used. Specified when creating a new tree.
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PageFile.ReadNode(System.Int32)">
            <summary>
            Returns the node stored in the requested page.
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PageFile.Initialize(Mapdigit.Gis.Vector.RTree.RTree,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Initializes the specified tree.
            </summary>
            <param name="tree">The tree.</param>
            <param name="dimension">The dimension.</param>
            <param name="fillFactor">The fill factor.</param>
            <param name="capacity">The capacity.</param>
            <param name="treeType">Type of the tree.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.PersistentPageFile">
            <summary>
            A page file that stores all pages into Persistent storage. It uses a
            RandomAccessFile to store node data.
            The format of the page file is as follows. First, a header is writen
            that stores important information
            about the RTree. The header format is as shown below:
            int dimension
            double fillFactor
            int nodeCapacity
            int pageSize
            int treeType
            
            All the pages are stored after the header, with the following format:
            int parent
            int level
            int usedSpace
            // HyperCubes
            for (i in usedSpace)
            for (j in dimension) {
            double p(i)1 [j]
            double p(i)2 [j]
            }
            int branch
            }
            
            Deleted pages are stored into a Stack. If a new entry is inserted it
            is placed in the last deleted page.
            That way the page file does not grow for ever. 
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PersistentPageFile.HeaderSize">
            Header size calculated using the following formula:
            headerSize = dimension + fillFactor + nodeCapacity + pageSize + treeType
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PersistentPageFile.#ctor(System.IO.BinaryReader,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.PersistentPageFile"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="offset">The offset.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PersistentPageFile.Close">
            <summary>
            Closes this file.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PersistentPageFile.Size">
            <summary>
            get the size of the file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.PersistentPageFile.ReadNode(System.Int32)">
            <summary>
            Returns the node stored in the requested page.
            </summary>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.PersistentPageFile._reader">
            Stores node data into Persistent storage.
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.Point">
            <summary>
            A point in the n-dimensional space. All dimensions are stored in an array of
            doubles.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.#ctor(System.Double[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.Point"/> class.
            </summary>
            <param name="d">The d.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.RTree.Point"/> class.
            </summary>
            <param name="d">The d.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.GetFloatCoordinate(System.Int32)">
            <summary>
            Gets the float coordinate.
            </summary>
            <param name="i">The i.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.GetIntCoordinate(System.Int32)">
            <summary>
            Gets the int coordinate.
            </summary>
            <param name="i">The i.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.GetDimension">
            <summary>
            Gets the dimension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.Equals(Mapdigit.Gis.Vector.RTree.Point)">
            <summary>
            Equalses the specified p.
            </summary>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.Point.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.Point._data">
            dimensions data.
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.RTree">
            <summary>
            To create a new RTree use the first two constructors. You must specify the
            dimension, the fill factor as a float between 0 and 0.5 (0 to 50% capacity)
            and the variant of the RTree which is one of:
            <ul>
             <li>RtreeQuadratic</li>
            </ul>
            The first constructor creates by default a new memory resident page file.
            The second constructor takes
            the page file as an argument. If the given page file is not empty,
            then all data are deleted.
            
            The third constructor initializes the RTree from an already filled page file.
            Thus, you may store the
            RTree into a persistent page file and recreate it again at any time.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.RTree.Version">
            version
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.RTree.Date">
            date
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.RTree.Nil">
            static identifier used for the parent of the root node.
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.RTree.RtreeLinear">
            Available RTree variants
        </member>
        <member name="F:Mapdigit.Gis.Vector.RTree.RTree._file">
            Page file where data is stored.
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.#ctor(Mapdigit.Gis.Vector.RTree.PageFile)">
            <summary>
            Creates an rtree from an already initialized page file, probably stored
            into persistent storage.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.GetNodeCapacity">
            <summary>
            Retruns the maximun capacity of each Node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.GetFillFactor">
            <summary>
            Returns the percentage between 0 and 0.5, used to calculate minimum 
            number of entries present in each node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.GetDimension">
            <summary>
            Returns the data dimension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.GetPageSize">
            <summary>
            Gets the size of the page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.GetTreeLevel">
            <summary>
            Returns the level of the root Node, which signifies the level of the 
            whole tree. Loads one page into main memory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.GetTreeType">
            <summary>
            Returns the RTree variant used
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.TraverseByLevel(Mapdigit.Gis.Vector.RTree.AbstractNode)">
            <summary>
            Returns a Vector containing all tree nodes from bottom to top, left to 
            right.
            CAUTION: If the tree is not memory resident, all nodes will be loaded 
            into main memory.
            </summary>
            <param name="root">The node from which the traverse should begin</param>
            <returns>A Vector containing all Nodes in the correct order</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.TraversePostOrder(Mapdigit.Gis.Vector.RTree.AbstractNode)">
            <summary>
            Post order traverse of tree nodes.
            CAUTION: If the tree is not memory resident, all nodes will be loaded 
            into main memory.
            </summary>
            <param name="root"> The node where the traversing should begin</param>
            <returns>A Vector containing all tree nodes in the correct order</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.TraversePreOrder(Mapdigit.Gis.Vector.RTree.AbstractNode)">
            <summary>
            Pre order traverse of tree nodes.
            CAUTION: If the tree is not memory resident, all nodes will be loaded 
            into main memory.
            </summary>
            <param name="root">The node where the traversing should begin</param>
            <returns>A Vector containing all tree nodes in the correct order</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.Intersection(Mapdigit.Gis.Vector.RTree.HyperCube,Mapdigit.Gis.Vector.RTree.AbstractNode)">
            <summary>
            Returns a Vector with all nodes that intersect with the given HyperCube.
            The nodes are returned in post order traversing
            </summary>
            <param name="h">The given HyperCube that is tested for overlapping.</param>
            <param name="root">The node where the search should begin.</param>
            <returns>A Vector containing the appropriate nodes in the correct order</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.Enclosure(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            Returns an Enumeration with all nodes present in the tree that intersect 
            with the given HyperCube. The nodes are returned in post order traversing
            </summary>
            <param name="h">The given HyperCube that is tested for overlapping</param>
            <returns>An Enumeration containing the appropriate nodes in the correct 
            order.</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.TraverseByLevel">
            <summary>
            Traverses the by level.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.TraversePostOrder">
            <summary>
            Post order traverse of all tree nodes, begging with root.
            CAUTION: If the tree is not memory resident, all nodes will be loaded into main memory.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.TraversePreOrder">
            <summary>
            Traverses the pre order.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.Intersection(Mapdigit.Gis.Vector.RTree.HyperCube)">
            <summary>
            Returns an Enumeration with all nodes present in the tree that Intersect with the given
            HyperCube. The nodes are returned in post order traversing
            </summary>
            <param name="h">The h.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.Enclosure(Mapdigit.Gis.Vector.RTree.HyperCube,Mapdigit.Gis.Vector.RTree.AbstractNode)">
            <summary>
            Enclosures the specified h.
            </summary>
            <param name="h">The h.</param>
            <param name="root">The root.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.Enclosure(Mapdigit.Gis.Vector.RTree.Point,Mapdigit.Gis.Vector.RTree.AbstractNode)">
            <summary>
            Enclosures the specified p.
            </summary>
            <param name="p">The p.</param>
            <param name="root">The root.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.Enclosure(Mapdigit.Gis.Vector.RTree.Point)">
            <summary>
            Enclosures the specified p.
            </summary>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.RTree.ByLevelEnum">
            <summary>
            Returns an Enumeration containing all tree nodes from bottom to top, 
            left to right.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.ByLevelEnum.HasMoreElements">
            <summary>
            Determines whether [has more elements].
            </summary>
            <returns>
            	<c>true</c> if [has more elements]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.ByLevelEnum.NextElement">
            <summary>
            Nexts the element.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.RTree.PostOrderEnum">
            <summary>
            Post order traverse of all tree nodes, begging with root.
            CAUTION: If the tree is not memory resident, all nodes will be loaded 
            into main memory.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.PostOrderEnum.HasMoreElements">
            <summary>
            Determines whether [has more elements].
            </summary>
            <returns>
            	<c>true</c> if [has more elements]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.PostOrderEnum.NextElement">
            <summary>
            Nexts the element.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.RTree.PreOrderEnum">
            <summary>
            Pre order traverse of all tree nodes, begging with root.
            CAUTION: If the tree is not memory resident, all nodes will be loaded 
            into main memory. 
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.PreOrderEnum.HasMoreElements">
            <summary>
            Determines whether [has more elements].
            </summary>
            <returns>
            	<c>true</c> if [has more elements]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.RTree.RTree.PreOrderEnum.NextElement">
            <summary>
            Nexts the element.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.RTree.IntersectionEnum">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.RTree.RTree.ContainEnum">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mapdigit.Gis.Vector.SutherlandHodgman">
            <summary>
            Class SutherlandHodgman stands for Sutherland-Hodgmanclip algorithem.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.SutherlandHodgman.#ctor(Mapdigit.Gis.Geometry.GeoBounds)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.SutherlandHodgman"/> class.
            </summary>
            <param name="clipRect">The clip rect.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.SutherlandHodgman.ClipPline(Mapdigit.Gis.Geometry.GeoLatLng[])">
            <summary>
            Clips the pline.
            </summary>
            <param name="input">The input.</param>
            <returns>the clipped pline</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.SutherlandHodgman.ClipPline(System.Collections.ArrayList)">
            <summary>
            Clips the pline.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.SutherlandHodgman.ClipRegion(Mapdigit.Gis.Geometry.GeoLatLng[])">
            <summary>
            Clips the region.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.SutherlandHodgman.ClipRegion(System.Collections.ArrayList)">
            <summary>
            Clips the region.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.ClipStage._nextStage">
            The next stage
        </member>
        <member name="F:Mapdigit.Gis.Vector.ClipStage._bFirst">
            true if no vertices have been handled.
        </member>
        <member name="F:Mapdigit.Gis.Vector.ClipStage._pntFirst">
            the first vertex.
        </member>
        <member name="F:Mapdigit.Gis.Vector.ClipStage._pntPrevious">
            the previous vertex.
        </member>
        <member name="F:Mapdigit.Gis.Vector.ClipStage._bPreviousInside">
            true if the previous vertex was inside the Boundary.
        </member>
        <member name="T:Mapdigit.Gis.Vector.VectorMap">
            <summary>
            VectorMap is the basic building blocks for Guidebee local map. Each map is
            consists of multiple map Layers.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.#ctor(System.Int32,System.Int32,Mapdigit.Gis.Raster.MapTileDownloadManager,Mapdigit.Gis.Vector.GeoSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.VectorMap"/> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="mapTileDownloadManager">The map tile download manager.</param>
            <param name="geoSet">The geo set.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.SetGeoSet(Mapdigit.Gis.Vector.GeoSet)">
            <summary>
            Sets the geo set.
            </summary>
            <param name="geoSet">The geo set.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.GetMapType">
            <summary>
            Gets the type of the map.
            </summary>
            <returns>the map type, always MapType.MAPINFOVECTORMAP</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.GetScreenObjects">
            <summary>
            Get the map objects in the screen area whose center is given point
            </summary>
            <returns> the map ojectes in the screen area</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.GetScreenObjects(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Get the map objects in the screen area whose center is given point
            </summary>
            <param name="pt"> center of the screen.</param>
            <returns>the map objects in the screen area</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.AddMapFeatureLayer(Mapdigit.Gis.Vector.MapFeatureLayer)">
            <summary>
            Adds the map feature layer.
            </summary>
            <param name="mapLayer">The map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.GetMapFeatureLayer(System.Int32)">
            <summary>
            Gets the map feature layer.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.GetMapFeatureLayerCount">
            <summary>
            Gets the map feature layer count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.InsertMapFeatureLayer(Mapdigit.Gis.Vector.MapFeatureLayer,System.Int32)">
            <summary>
            Inserts the specified map layer to map's layer collection at the
            specified index. Each map layer in map's layer collection  with an index
            greater or equal to the specified index is shifted upward to have an
            index one greater than the value it had previously.
            </summary>
            <param name="mapLayer">The map layer.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.MoveMapFeatureLayer(System.Int32,System.Int32)">
            <summary>
            Moves the map feature layer.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.RemoveMapFeatureLayer(Mapdigit.Gis.Vector.MapFeatureLayer)">
            <summary>
            Removes the map feature layer.
            </summary>
            <param name="mapLayer">The map layer.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.RemoveAllMapFeatureLayers">
            <summary>
            Removes all map feature layers.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.GetMapFeatureLayers">
            <summary>
            Gets the map feature layers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.Search(System.String)">
            <summary>
            get all records based on given string. the seach will search based on
             map layer's key field.
            </summary>
            <param name="matchString">The match string.</param>
            <returns>a hashtable array contains of all matched record.
             the key is the mapInfo ID. the value is the matched string</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.Search(Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            Searches the specified rect geo.
            </summary>
            <param name="rectGeo">The rect geo.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.Search(System.Int32,Mapdigit.Gis.Vector.FindConditions)">
            <summary>
            Searches the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="findConditions">The find conditions.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.Search(System.Int32,Mapdigit.Gis.Geometry.GeoLatLngBounds)">
            <summary>
            Searches the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="rectGeo">The rect geo.</param>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMap.GetBounds">
            <summary>
            Gets the bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mapdigit.Gis.Vector.VectorMapAbstractCanvas">
            <summary>
            Base class for vector map canvas.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.GraphicsMutex">
            <summary>
            Graphics2D mutex.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.fontColor">
            default font color.
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.font">
            <summary>
            font for this map.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.mapZoomLevel">
            current map zoom level
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.mapCenterPt">
            the center of this map.
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.mapSize">
            the size of the map size.
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.sutherlandHodgman">
            SutherlandHodgman clip pline and region.
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.FromLatLngToMapPixel(Mapdigit.Gis.Geometry.GeoLatLng)">
            <summary>
            Computes the pixel coordinates of the given geographical point in the map.
            </summary>
            <param name="latlng">the geographical coordinates</param>
            <returns>the pixel coordinates in the map</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.FromLatLngToMapPixel(System.Collections.ArrayList)">
            <summary>
            Computes the pixel coordinates of the given geographical point vector
            in the map.
            </summary>
            <param name="vpts">the geographical coordinates vector.</param>
            <returns>the pixel coordinates in the map</returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.SetFontColor(System.Int32)">
            <summary>
            Sets the color of the font.
            </summary>
            <param name="color">Color of the font.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.SetFont(Mapdigit.Gis.Drawing.IFont)">
            <summary>
            Sets the Font.
            </summary>
            <param name="newFont">The font.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.GetRGB">
            <summary>
            Gets the RGB.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.DrawMapObject(Mapdigit.Gis.MapObject,Mapdigit.Gis.Geometry.GeoLatLngBounds,System.Int32)">
            <summary>
            Draws the map object.
            </summary>
            <param name="mapObject">The map object.</param>
            <param name="drawBoundary">The draw boundary.</param>
            <param name="zoomLevel">The zoom level.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.DrawMapText">
            <summary>
            Draws the map text.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapAbstractCanvas.ClearCanvas(System.Int32)">
            <summary>
            Clears the canvas.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.VectorMapCanvas">
            <summary>
            vector map canvas
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapCanvas.ImagePaternWidth">
            defautl imagePattern size;
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapCanvas._sharedGraphics2D">
            <summary>
            Shared graphics2D instance used to drawing map objects.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.GetGraphics2DInstance">
            <summary>
            Gets the graphics2 D instance.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.VectorMapCanvas"/> class.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.GetRGB">
            <summary>
            Gets the RGB.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.DrawPoint(Mapdigit.Gis.MapPoint)">
            <summary>
            Draws the point.
            </summary>
            <param name="mapPoint">The map point.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.DrawPline(Mapdigit.Gis.MapPen,Mapdigit.Gis.Geometry.GeoPolyline)">
            <summary>
            Draws the pline.
            </summary>
            <param name="mapPen">The map pen.</param>
            <param name="pline">The pline.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.DrawRegion(Mapdigit.Gis.MapPen,Mapdigit.Gis.MapBrush,Mapdigit.Gis.Geometry.GeoPolygon)">
            <summary>
            Draws the region.
            </summary>
            <param name="mapPen">The map pen.</param>
            <param name="mapBrush">The map brush.</param>
            <param name="region">The region.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.DrawText(Mapdigit.Gis.MapText)">
            <summary>
            Draws the text.
            </summary>
            <param name="mapText">The map text.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.GetImagePatternBrush(Mapdigit.Gis.MapBrush)">
            <summary>
            Gets the image pattern brush.
            </summary>
            <param name="brush">The brush.</param>
            <returns></returns>
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapCanvas._imagePattern">
            pattern Image;
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapCanvas._imagePatternGraphics">
            draw the image pattern.
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapCanvas._mapNameHolder">
            used to Show text on the image.
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapCanvas._textImage">
            image used to draw char with system fonts.
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapCanvas._textGraphics">
            graphics used to draw char with system fonts.
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.DrawMapObject(Mapdigit.Gis.MapObject,Mapdigit.Gis.Geometry.GeoLatLngBounds,System.Int32)">
            <summary>
            Draws the map object.
            </summary>
            <param name="mapObject">The map object.</param>
            <param name="drawBoundary">The draw boundary.</param>
            <param name="zoomLevel">The zoom level.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.ClearCanvas(System.Int32)">
            <summary>
            Clears the canvas.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.DrawMapText">
            <summary>
            Draws the map text.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.AddMapName(Mapdigit.Gis.MapText)">
            <summary>
            Adds the name of the map.
            </summary>
            <param name="mapText">The map text.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapCanvas.DrawString(Mapdigit.Gis.Drawing.IFont,System.String,System.Int32,System.Int32)">
            <summary>
            Draws the string.
            </summary>
            <param name="fontType">The font.</param>
            <param name="str">The STR.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="T:Mapdigit.Gis.Vector.VectorMapRenderer">
            <summary>
             Vector map render, each time, the renderer draw one map tile.
            </summary>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapRenderer.#ctor(Mapdigit.Gis.Vector.GeoSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Mapdigit.Gis.Vector.VectorMapRenderer"/> class.
            </summary>
            <param name="geoSet">The geo set.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapRenderer.SetFontColor(System.Int32)">
            <summary>
            Sets the color of the font.
            </summary>
            <param name="fontColor">Color of the font.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapRenderer.SetFont(Mapdigit.Gis.Drawing.IFont)">
            <summary>
            Sets the font.
            </summary>
            <param name="font">The font.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapRenderer.SetVectorMapCanvas(Mapdigit.Gis.Vector.VectorMapAbstractCanvas)">
            <summary>
            Sets the vector map canvas.
            </summary>
            <param name="vectorMapCanvas">The vector map canvas.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapRenderer.GetImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Get image at given location. when the reader is done, imageArray shall
            store the image byte array. imageArraySize is the actually data size.
            isImagevalid indicate the data is valid or not. normally this shall be
            an async call.
            </summary>
            <param name="mtype">the map type of the map tile.</param>
            <param name="x">the x index of the map tile.</param>
            <param name="y">the y index of the map tile.</param>
            <param name="zoomLevel">the zoom level of the map tile.</param>
        </member>
        <member name="M:Mapdigit.Gis.Vector.VectorMapRenderer.CancelRead">
            <summary>
            a way app can cancel the reading process.
            </summary>
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapRenderer._geoSet">
            Geoset as the database for renderer.
        </member>
        <member name="F:Mapdigit.Gis.Vector.VectorMapRenderer._vectorMapCanvas">
            Vector map canvas.
        </member>
    </members>
</doc>
